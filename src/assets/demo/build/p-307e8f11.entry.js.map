{"version":3,"names":["goSpinnerCss","GoSpinner","componentWillLoad","this","isLoading","loading","loadingChanged","value","render","ringColor","baseColor","size","ringWidth","duration","stacked","loadingAnnouncement","styles","h","Host","style","role","class"],"sources":["src/components/go-spinner/go-spinner.scss?tag=go-spinner","src/components/go-spinner/go-spinner.tsx"],"sourcesContent":["go-spinner {\r\n  --spinner-ring-color: var(--go-color-primary-800);\r\n  --spinner-base-color: var(--go-color-neutral-300);\r\n  --spinner-size: 1.5rem;\r\n  --spinner-ring-width: calc(var(--spinner-size) / 10);\r\n  --spinner-duration: 500ms;\r\n  --spinner-gap: 0.5rem;\r\n\r\n  display: inline-flex;\r\n  gap: var(--spinner-gap);\r\n  align-items: center;\r\n  &.stacked {\r\n    flex-direction: column;\r\n  }\r\n  .spinner {\r\n    border: var(--spinner-ring-width) solid var(--spinner-base-color);\r\n    border-radius: 50%;\r\n    border-top-color: var(--spinner-ring-color);\r\n    width: var(--spinner-size);\r\n    height: var(--spinner-size);\r\n    animation: spin var(--spinner-duration) linear infinite;\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, h, Element, Prop, Watch, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'go-spinner',\r\n  styleUrl: 'go-spinner.scss',\r\n  shadow: false,\r\n})\r\nexport class GoSpinner {\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Set the ring color of the spinner.\r\n   */\r\n  @Prop() ringColor?: string;\r\n\r\n  /**\r\n   * Set the base color of the spinner.\r\n   */\r\n  @Prop() baseColor?: string;\r\n\r\n  /**\r\n   * Set the width and height of the spinner.\r\n   */\r\n  @Prop() size?: string;\r\n\r\n  /**\r\n   * Set the width of the spinner ring\r\n   */\r\n  @Prop() ringWidth?: string;\r\n\r\n  /**\r\n   * Set how long it should take to complete one full rotation in milliseconds.\r\n   */\r\n  @Prop() duration?: number;\r\n\r\n  /**\r\n   * If true, spinner and label will be stacked.\r\n   */\r\n  @Prop() stacked?: boolean = false;\r\n\r\n  /**\r\n   * set the loading state\r\n   */\r\n  @Prop({ reflect: true }) loading: boolean = true;\r\n\r\n  /**\r\n   * screen reader announcement when loading\r\n   */\r\n  @Prop() loadingAnnouncement: string = 'Loading';\r\n\r\n  @State() isLoading: boolean;\r\n\r\n  componentWillLoad() {\r\n    this.isLoading = this.loading;\r\n  }\r\n\r\n  @Watch('loading')\r\n  loadingChanged(value: boolean) {\r\n    this.isLoading = value;\r\n  }\r\n\r\n  render() {\r\n    const { ringColor, baseColor, size, ringWidth, duration, stacked, isLoading, loadingAnnouncement } = this;\r\n    let styles = {};\r\n    if (ringColor) {\r\n      styles['--spinner-ring-color'] = ringColor;\r\n    }\r\n    if (baseColor) {\r\n      styles['--spinner-base-color'] = baseColor;\r\n    }\r\n    if (size) {\r\n      styles['--spinner-size'] = size;\r\n    }\r\n    if (ringWidth) {\r\n      styles['--spinner-ring-width'] = ringWidth;\r\n    }\r\n    if (duration) {\r\n      styles['--spinner-duration'] = duration;\r\n    }\r\n    return (\r\n      <Host style={styles} role=\"status\" class={{ stacked, 'visually-hidden': !isLoading }}>\r\n        {isLoading\r\n          ? [\r\n              <div aria-hidden=\"true\" class=\"spinner\"></div>,\r\n              <slot>\r\n                <span class=\"visually-hidden\">{loadingAnnouncement}</span>\r\n              </slot>,\r\n            ]\r\n          : null}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"yDAAA,MAAMA,EAAe,spB,MCORC,EAAS,M,6JA+BQ,M,aAKgB,K,yBAKN,U,yBAItC,iBAAAC,GACEC,KAAKC,UAAYD,KAAKE,O,CAIxB,cAAAC,CAAeC,GACbJ,KAAKC,UAAYG,C,CAGnB,MAAAC,GACE,MAAMC,UAAEA,EAASC,UAAEA,EAASC,KAAEA,EAAIC,UAAEA,EAASC,SAAEA,EAAQC,QAAEA,EAAOV,UAAEA,EAASW,oBAAEA,GAAwBZ,KACrG,IAAIa,EAAS,GACb,GAAIP,EAAW,CACbO,EAAO,wBAA0BP,C,CAEnC,GAAIC,EAAW,CACbM,EAAO,wBAA0BN,C,CAEnC,GAAIC,EAAM,CACRK,EAAO,kBAAoBL,C,CAE7B,GAAIC,EAAW,CACbI,EAAO,wBAA0BJ,C,CAEnC,GAAIC,EAAU,CACZG,EAAO,sBAAwBH,C,CAEjC,OACEI,EAACC,EAAI,CAACC,MAAOH,EAAQI,KAAK,SAASC,MAAO,CAAEP,UAAS,mBAAoBV,IACtEA,EACG,CACEa,EAAA,qBAAiB,OAAOI,MAAM,YAC9BJ,EAAA,YACEA,EAAA,QAAMI,MAAM,mBAAmBN,KAGnC,K"}