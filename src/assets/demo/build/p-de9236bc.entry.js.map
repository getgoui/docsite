{"version":3,"names":["goIconCss","GoIcon","this","attrs","componentWillLoad","inheritAttributes","el","render","iconSet","name","size","color","label","class","customClasses","h","Host","style","startsWith","goNavLinkCss","GoNavLink","inheritedAttrs","item","Object","assign","isCurrent","url","icon","isSpan","Tag","_a","linkAttrs","href","onClick","event","navEvent","emit","showArrow","xmlns","fill","stroke","viewBox","focusable","x1","y1","x2","y2","points"],"sources":["src/components/go-icon/go-icon.scss?tag=go-icon","src/components/go-icon/go-icon.tsx","src/components/navigation/go-nav-link/go-nav-link.scss?tag=go-nav-link","src/components/navigation/go-nav-link/go-nav-link.tsx"],"sourcesContent":["go-icon {\r\n  --icon-size: 1em;\r\n  --icon-color: currentColor;\r\n\r\n  &[icon-set^='material'] {\r\n    --icon-size: 1.5em;\r\n    vertical-align: middle;\r\n    .go-icon {\r\n      transform: rotate(0.03deg); // https://github.com/google/material-design-icons/issues/648\r\n      line-height: 1em;\r\n      display: inherit;\r\n    }\r\n  }\r\n\r\n  display: inline-block;\r\n  line-height: 1;\r\n  .go-icon {\r\n    font-size: var(--icon-size);\r\n    color: var(--icon-color);\r\n  }\r\n}\r\n","import { Component, Host, h, Element, Prop } from '@stencil/core';\r\nimport { IconProps } from '../../interfaces';\r\nimport { inheritAttributes } from '../../utils/helper';\r\nexport type MaterialIconVariants = `material-icons` | `material-icons-outlined` | `material-icons-round` | `material-icons-sharp`;\r\n/**\r\n * https://fontawesome.com/v5.15/how-to-use/on-the-web/referencing-icons/basic-use\r\n */\r\nexport type FontAwesomeVariants = 'fas' | 'far' | 'fal' | 'fad' | 'fab';\r\n/**\r\n * https://boxicons.com/usage @see type\r\n */\r\nexport type BoxiconVariants = 'bx' | 'bxs' | 'bxl';\r\n\r\n@Component({\r\n  tag: 'go-icon',\r\n  styleUrl: 'go-icon.scss',\r\n  shadow: false,\r\n})\r\nexport class GoIcon implements IconProps {\r\n  @Element() el: HTMLElement;\r\n  /**\r\n   * Specify the icon set being referenced.\r\n   * Icon font CSS files must be included in the page.\r\n   */\r\n  @Prop({ reflect: true }) iconSet: MaterialIconVariants | FontAwesomeVariants | BoxiconVariants = 'material-icons';\r\n\r\n  /**\r\n   * Name of the icon\r\n   */\r\n  @Prop() name: string;\r\n\r\n  /**\r\n   * Size of the icon, supports CSS units and variables.\r\n   * Default: 1.5em for material icons, 1em for other icon sets.\r\n   */\r\n  @Prop() size?: string;\r\n\r\n  /**\r\n   * Color of the icon,  supports CSS units and variables.\r\n   * Default: `currentColor`\r\n   */\r\n  @Prop() color?: string;\r\n\r\n  /**\r\n   * provide label for screen reader\r\n   */\r\n  @Prop() label?: string;\r\n\r\n  private attrs = {} as any;\r\n  componentWillLoad() {\r\n    this.attrs = inheritAttributes(this.el, [], false);\r\n  }\r\n\r\n  render() {\r\n    const { iconSet, name, size, color, label, attrs } = this;\r\n    const { class: customClasses } = attrs;\r\n    return (\r\n      // prettier-ignore\r\n      <Host\r\n        aria-hidden={label ? 'false' : 'true'}\r\n        style={{\r\n          '--icon-size': size ? size : null,\r\n          '--icon-color': color ? color : null,\r\n        }}>{label ? <span class=\"visually-hidden\">{label}</span> : null}{iconSet.startsWith('material') ? <span class={`${iconSet} go-icon ${customClasses ? customClasses : ''}`}>{name}</span> : null}{iconSet.startsWith('fa') ? <i class={`${iconSet} fa-${name} go-icon ${customClasses ? customClasses : ''}`}></i> : null}{iconSet.startsWith('bx') ? <i class={`bx ${iconSet}-${name} go-icon ${customClasses ? customClasses : ''}`}></i> : null}</Host>\r\n    );\r\n  }\r\n}\r\n","go-nav-link {\r\n  --nav-link-padding: 0.25em 0;\r\n  --nav-link-current-bar-width: 2px;\r\n  --nav-link-current-bar-color: currentColor;\r\n  --nav-link-hover-fg-color: var(--go-color-link-hover);\r\n  --nav-link-hover-bg-color: var(--go-color-link-hover-bg);\r\n  --nav-link-arrow-gap: var(--go-base-spacing);\r\n  --nav-link-arrow-color: currentColor;\r\n  --nav-link-arrow-color-hover: currentColor;\r\n  --nav-link-align-y: center;\r\n  --nav-link-radius: var(--radius-1);\r\n\r\n  display: inline-flex;\r\n  align-items: var(--nav-link-align-y);\r\n  color: var(--go-color-link);\r\n  position: relative;\r\n\r\n  &[block] {\r\n    display: flex;\r\n    go-link {\r\n      display: block;\r\n      flex: 1;\r\n    }\r\n    .nav-item-link {\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  .nav-item-link {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    padding: var(--nav-link-padding);\r\n    border-radius: var(--nav-link-radius);\r\n    border-left: var(--nav-link-current-bar-width) solid transparent;\r\n    line-height: 1.5;\r\n    text-decoration: none;\r\n\r\n    &.current {\r\n      border-top-left-radius: 0;\r\n      border-bottom-left-radius: 0;\r\n      border-left-color: var(--nav-link-current-bar-color);\r\n      padding-left: 0.5rem;\r\n    }\r\n\r\n    go-icon {\r\n      text-decoration: none;\r\n    }\r\n    svg.external-link-icon {\r\n      flex: 0 0 auto;\r\n      transform: none;\r\n    }\r\n    .arrow {\r\n      @include transition(transform);\r\n\r\n      stroke: var(--nav-link-arrow-color);\r\n      flex: 0 0 auto;\r\n      height: 1.25em;\r\n      margin-left: calc(var(--nav-link-arrow-gap) + 4px);\r\n      transform: translateX(-4px);\r\n    }\r\n  }\r\n\r\n  a.nav-item-link {\r\n    @include transition(background);\r\n    .nav-link-text {\r\n      @include underline;\r\n    }\r\n\r\n    &:hover,\r\n    &:focus-visible {\r\n      .nav-link-text {\r\n        text-decoration: none;\r\n      }\r\n      .arrow {\r\n        transform: translateX(0);\r\n      }\r\n    }\r\n    &::after {\r\n      // expand clickable area to include arrow\r\n      content: '';\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n    }\r\n  }\r\n}\r\n","import { Component, h, Host, Prop, Element, Event, EventEmitter } from '@stencil/core';\r\nimport { INavItem } from '../../../interfaces';\r\nimport { inheritAttributes } from '../../../utils/helper';\r\n\r\n@Component({\r\n  tag: 'go-nav-link',\r\n  styleUrl: 'go-nav-link.scss',\r\n  shadow: false,\r\n})\r\nexport class GoNavLink {\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * navigation item\r\n   */\r\n  @Prop() item: INavItem;\r\n\r\n  /**\r\n   * show arrow at the end of the link\r\n   */\r\n  @Prop() showArrow = false;\r\n\r\n  /**\r\n   * full width\r\n   */\r\n  @Prop({ reflect: true }) block = false;\r\n\r\n  @Event({\r\n    eventName: 'navigate',\r\n    cancelable: true,\r\n    bubbles: true,\r\n  })\r\n  navEvent: EventEmitter;\r\n\r\n  private inheritedAttrs = {};\r\n  componentWillLoad() {\r\n    this.inheritedAttrs = inheritAttributes(this.el, [], true);\r\n  }\r\n\r\n  render() {\r\n    const { inheritedAttrs } = this;\r\n    if (!this.item) {\r\n      return (\r\n        <a {...inheritedAttrs}>\r\n          <slot></slot>\r\n        </a>\r\n      );\r\n    }\r\n    const { isCurrent, url, icon, label } = this.item;\r\n\r\n    const isSpan = isCurrent || !url;\r\n\r\n    let Tag = isSpan ? 'span' : 'go-link';\r\n    let attrs = {\r\n      ...this.item?.linkAttrs,\r\n      ...inheritedAttrs,\r\n    };\r\n    attrs = !isSpan\r\n      ? {\r\n          href: url,\r\n          onClick: (event) => {\r\n            this.navEvent.emit({ event, item: this.item });\r\n          },\r\n          ...attrs,\r\n        }\r\n      : { ...attrs };\r\n    attrs['class'] = ` nav-item-link ${attrs['class'] ? attrs['class'] : ''}${isCurrent ? ' current' : ''}`;\r\n    return (\r\n      <Host>\r\n        <Tag {...attrs}>\r\n          {icon ? typeof icon === 'string' ? <go-icon name={icon}></go-icon> : <go-icon {...icon}></go-icon> : null}\r\n          <span class=\"nav-link-text\">{label}</span>\r\n          {url && this.showArrow ? (\r\n            <svg\r\n              class=\"arrow\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              stroke-width=\"2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              viewBox=\"0 0 24 24\"\r\n              focusable=\"false\"\r\n              aria-hidden=\"true\">\r\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n              <polyline points=\"12 5 19 12 12 19\"></polyline>\r\n            </svg>\r\n          ) : null}\r\n        </Tag>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"oJAAA,MAAMA,EAAY,+T,MCkBLC,EAAM,M,yBA8BTC,KAAAC,MAAQ,G,aAxBiF,iB,kFAyBjG,iBAAAC,GACEF,KAAKC,MAAQE,EAAkBH,KAAKI,GAAI,GAAI,M,CAG9C,MAAAC,GACE,MAAMC,QAAEA,EAAOC,KAAEA,EAAIC,KAAEA,EAAIC,MAAEA,EAAKC,MAAEA,EAAKT,MAAEA,GAAUD,KACrD,MAAQW,MAAOC,GAAkBX,EACjC,OAEEY,EAACC,EAAI,eACUJ,EAAQ,QAAU,OAC/BK,MAAO,CACL,cAAeP,EAAOA,EAAO,KAC7B,eAAgBC,EAAQA,EAAQ,OAC9BC,EAAQG,EAAA,QAAMF,MAAM,mBAAmBD,GAAgB,KAAMJ,EAAQU,WAAW,YAAcH,EAAA,QAAMF,MAAO,GAAGL,aAAmBM,EAAgBA,EAAgB,MAAOL,GAAe,KAAMD,EAAQU,WAAW,MAAQH,EAAA,KAAGF,MAAO,GAAGL,QAAcC,aAAgBK,EAAgBA,EAAgB,OAAa,KAAMN,EAAQU,WAAW,MAAQH,EAAA,KAAGF,MAAO,MAAML,KAAWC,aAAgBK,EAAgBA,EAAgB,OAAa,K,qCC/Drb,MAAMK,EAAe,mnE,MCSRC,EAAS,M,4DAyBZlB,KAAAmB,eAAiB,G,mCAdL,M,WAKa,K,CAUjC,iBAAAjB,GACEF,KAAKmB,eAAiBhB,EAAkBH,KAAKI,GAAI,GAAI,K,CAGvD,MAAAC,G,MACE,MAAMc,eAAEA,GAAmBnB,KAC3B,IAAKA,KAAKoB,KAAM,CACd,OACEP,EAAA,IAAAQ,OAAAC,OAAA,GAAOH,GACLN,EAAA,a,CAIN,MAAMU,UAAEA,EAASC,IAAEA,EAAGC,KAAEA,EAAIf,MAAEA,GAAUV,KAAKoB,KAE7C,MAAMM,EAASH,IAAcC,EAE7B,IAAIG,EAAMD,EAAS,OAAS,UAC5B,IAAIzB,EAAKoB,OAAAC,OAAAD,OAAAC,OAAA,IACJM,EAAA5B,KAAKoB,QAAI,MAAAQ,SAAA,SAAAA,EAAEC,WACXV,GAELlB,GAASyB,E,eAEHI,KAAMN,EACNO,QAAUC,IACRhC,KAAKiC,SAASC,KAAK,CAAEF,QAAOZ,KAAMpB,KAAKoB,MAAO,GAE7CnB,GAAKoB,OAAAC,OAAA,GAELrB,GACTA,EAAM,SAAW,kBAAkBA,EAAM,SAAWA,EAAM,SAAW,KAAKsB,EAAY,WAAa,KACnG,OACEV,EAACC,EAAI,KACHD,EAACc,EAAGN,OAAAC,OAAA,GAAKrB,GACNwB,SAAcA,IAAS,SAAWZ,EAAA,WAASN,KAAMkB,IAAmBZ,EAAA,UAAAQ,OAAAC,OAAA,GAAaG,IAAmB,KACrGZ,EAAA,QAAMF,MAAM,iBAAiBD,GAC5Bc,GAAOxB,KAAKmC,UACXtB,EAAA,OACEF,MAAM,QACNyB,MAAM,6BACNC,KAAK,OACLC,OAAO,eAAc,eACR,IAAG,iBACD,QAAO,kBACN,QAChBC,QAAQ,YACRC,UAAU,QAAO,cACL,QACZ3B,EAAA,QAAM4B,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAChC/B,EAAA,YAAUgC,OAAO,sBAEjB,M"}