{"version":3,"names":["getAlignment","placement","split","getLengthFromAxis","axis","getSide","getMainAxisFromPlacement","includes","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","length","commonAlign","side","isVertical","coords","computePosition","async","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","rects","getElementRects","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","initialPlacement","elements","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","middlewareArguments","options","_await$platform$isEle","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","min","Math","max","within","min$1","value","max$1","arrow","arrowDimensions","getDimensions","minProp","maxProp","endDiff","startDiff","arrowOffsetParent","clientSize","clientHeight","clientWidth","centerToReference","center","offset","shouldAddOffset","alignmentOffset","centerOffset","oppositeSideMap","getOppositePlacement","replace","getAlignmentSides","alignment","mainAlignmentSide","main","cross","oppositeAlignmentMap","start","end","getOppositeAlignmentPlacement","getExpandedPlacements","oppositePlacement","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","map","concat","flip","_middlewareData$flip","checkMainAxis","crossAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","detectOverflowOptions","isBasePlacement","push","placements","overflow","overflows","overflowsData","every","_middlewareData$flip2","nextIndex","index","nextPlacement","resetPlacement","_overflowsData$map$so","d","reduce","acc","sort","a","b","inline","fallback","clientRects","getClientRects","getBoundingClientRect","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","resetRects","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","alignmentAxis","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle$1","getComputedStyle","getNodeName","isNode","nodeName","toLowerCase","uaString","getUAString","uaData","navigator","userAgentData","Array","isArray","brands","item","brand","version","join","userAgent","isHTMLElement","HTMLElement","Element","Node","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflowX","overflowY","display","test","isTableElement","isContainingBlock","isFirefox","css","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","some","contain","isLayoutViewport","isLastTraversableNode","round","getCssDimensions","parseFloat","offsetWidth","offsetHeight","shouldFallback","unwrapElement","FALLBACK_SCALE","domElement","Number","isFinite","includeScale","isFixedStrategy","_win$visualViewport","_win$visualViewport2","clientRect","scale","win","addVisualOffsets","visualViewport","offsetLeft","offsetTop","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getWindowScrollBarX","getRectRelativeToOffsetParent","isOffsetParentAnElement","scroll","offsets","offsetRect","getParentNode","result","assignedSlot","parentNode","host","getTrueOffsetParent","position","getContainingBlock","currentNode","getViewportRect","html","layoutViewport","getDocumentRect","_element$ownerDocumen","body","scrollWidth","scrollHeight","getNearestOverflowAncestor","getOverflowAncestors","scrollableAncestor","isBody","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","containingBlock","shouldDropCurrentNode","ancestor","set","elementClippingAncestors","this","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getOffsetParentFn","getDimensionsFn","from","autoUpdate","update","ancestorScroll","_ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","forEach","addEventListener","passive","observer","initialUpdate","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame","Map","mergedOptions","platformWithCache","computePosition$1"],"sources":["../../node_modules/.pnpm/@floating-ui+core@1.1.0/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js","../../node_modules/.pnpm/@floating-ui+dom@1.1.0/node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js"],"sourcesContent":["function getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  if (process.env.NODE_ENV !== \"production\") {\n    if (platform == null) {\n      console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n    }\n    if (validMiddleware.filter(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === 'autoPlacement' || name === 'flip';\n    }).length > 1) {\n      throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement` middleware', 'detected. This will lead to an infinite loop. Ensure only one of', 'either has been passed to the `middleware` array.'].join(' '));\n    }\n    if (!reference || !floating) {\n      console.error(['Floating UI: The reference and/or floating element was not defined', 'when `computePosition()` was called. Ensure that both elements have', 'been created and can be measured.'].join(' '));\n    }\n  }\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (process.env.NODE_ENV !== \"production\") {\n      if (resetCount > 50) {\n        console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n      }\n    }\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(middlewareArguments, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = middlewareArguments;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  if (process.env.NODE_ENV !== \"production\") ;\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(middlewareArguments) {\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = options || {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = middlewareArguments;\n    if (element == null) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n      }\n      return {};\n    }\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n    if (clientSize === 0) {\n      clientSize = rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min ? paddingObject[minProp] : paddingObject[maxProp]) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n});\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(middlewareArguments) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsSortedByLe;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        alignment,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);\n      const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {\n        let {\n          overflows\n        } = _ref;\n        return overflows.every(overflow => overflow <= 0);\n      })) == null ? void 0 : _placementsSortedByLe.placement;\n      const resetPlacement = placementThatFitsOnAllSides || placementsSortedByLeastOverflow[0].placement;\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(middlewareArguments) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[main], overflow[cross]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n        let resetPlacement = 'bottom';\n        switch (fallbackStrategy) {\n          case 'bestFit':\n            {\n              var _overflowsData$map$so;\n              const placement = (_overflowsData$map$so = overflowsData.map(d => [d, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0].placement;\n              if (placement) {\n                resetPlacement = placement;\n              }\n              break;\n            }\n          case 'initialPlacement':\n            resetPlacement = initialPlacement;\n            break;\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(middlewareArguments) {\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = options;\n      const {\n        rects\n      } = middlewareArguments;\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(middlewareArguments, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(middlewareArguments, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(middlewareArguments) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = middlewareArguments;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n      const fallback = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect: rects.reference,\n        offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n        strategy\n      }) : rects.reference);\n      const clientRects = (await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || [];\n      const paddingObject = getSideObjectFromPadding(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nasync function convertValueToCoords(middlewareArguments, value) {\n  const {\n    placement,\n    platform,\n    elements\n  } = middlewareArguments;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value(middlewareArguments) : value;\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n  return {\n    name: 'offset',\n    options: value,\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y\n      } = middlewareArguments;\n      const diffCoords = await convertValueToCoords(middlewareArguments, value);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...middlewareArguments,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset(middlewareArguments) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(middlewareArguments) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = options;\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const xMin = max(overflow.left, 0);\n      const xMax = max(overflow.right, 0);\n      const yMin = max(overflow.top, 0);\n      const yMax = max(overflow.bottom, 0);\n      const dimensions = {\n        availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n        availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n      };\n      await apply({\n        ...middlewareArguments,\n        ...dimensions\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (rects.floating.width !== nextDimensions.width || rects.floating.height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n\n  // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(\n  // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n  // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  let width = parseFloat(css.width);\n  let height = parseFloat(css.height);\n  const offsetWidth = element.offsetWidth;\n  const offsetHeight = element.offsetHeight;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = domElement ? getWindow(domElement) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot ||\n  // DOM Element detected\n  node.parentNode || (\n  // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) ||\n  // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n    // This doesn't appear to need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n  }\n\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\n// Returns the inner client rect, subtracting scrollbars if present\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y,\n    width,\n    height\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"],"mappings":"AAAA,SAASA,EAAaC,GACpB,OAAOA,EAAUC,MAAM,KAAK,EAC9B,CAEA,SAASC,EAAkBC,GACzB,OAAOA,IAAS,IAAM,SAAW,OACnC,CAEA,SAASC,EAAQJ,GACf,OAAOA,EAAUC,MAAM,KAAK,EAC9B,CAEA,SAASI,EAAyBL,GAChC,MAAO,CAAC,MAAO,UAAUM,SAASF,EAAQJ,IAAc,IAAM,GAChE,CAEA,SAASO,EAA2BC,EAAMR,EAAWS,GACnD,IAAIC,UACFA,EAASC,SACTA,GACEH,EACJ,MAAMI,EAAUF,EAAUG,EAAIH,EAAUI,MAAQ,EAAIH,EAASG,MAAQ,EACrE,MAAMC,EAAUL,EAAUM,EAAIN,EAAUO,OAAS,EAAIN,EAASM,OAAS,EACvE,MAAMC,EAAWb,EAAyBL,GAC1C,MAAMmB,EAASjB,EAAkBgB,GACjC,MAAME,EAAcV,EAAUS,GAAU,EAAIR,EAASQ,GAAU,EAC/D,MAAME,EAAOjB,EAAQJ,GACrB,MAAMsB,EAAaJ,IAAa,IAChC,IAAIK,EACJ,OAAQF,GACN,IAAK,MACHE,EAAS,CACPV,EAAGD,EACHI,EAAGN,EAAUM,EAAIL,EAASM,QAE5B,MACF,IAAK,SACHM,EAAS,CACPV,EAAGD,EACHI,EAAGN,EAAUM,EAAIN,EAAUO,QAE7B,MACF,IAAK,QACHM,EAAS,CACPV,EAAGH,EAAUG,EAAIH,EAAUI,MAC3BE,EAAGD,GAEL,MACF,IAAK,OACHQ,EAAS,CACPV,EAAGH,EAAUG,EAAIF,EAASG,MAC1BE,EAAGD,GAEL,MACF,QACEQ,EAAS,CACPV,EAAGH,EAAUG,EACbG,EAAGN,EAAUM,GAGnB,OAAQjB,EAAaC,IACnB,IAAK,QACHuB,EAAOL,IAAaE,GAAeX,GAAOa,GAAc,EAAI,GAC5D,MACF,IAAK,MACHC,EAAOL,IAAaE,GAAeX,GAAOa,GAAc,EAAI,GAC5D,MAEJ,OAAOC,CACT,CASA,MAAMC,EAAkBC,MAAOf,EAAWC,EAAUe,KAClD,MAAM1B,UACJA,EAAY,SAAQ2B,SACpBA,EAAW,WAAUC,WACrBA,EAAa,GAAEC,SACfA,GACEH,EACJ,MAAMI,EAAkBF,EAAWG,OAAOC,SAC1C,MAAMvB,QAAaoB,EAASI,OAAS,UAAY,EAAIJ,EAASI,MAAMtB,IAiBpE,IAAIuB,QAAcL,EAASM,gBAAgB,CACzCzB,YACAC,WACAgB,aAEF,IAAId,EACFA,EAACG,EACDA,GACET,EAA2B2B,EAAOlC,EAAWS,GACjD,IAAI2B,EAAoBpC,EACxB,IAAIqC,EAAiB,GACrB,IAAIC,EAAa,EACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAgBX,OAAQoB,IAAK,CAC/C,MAAMC,KACJA,EAAIC,GACJA,GACEX,EAAgBS,GACpB,MACE1B,EAAG6B,EACH1B,EAAG2B,EAAKC,KACRA,EAAIC,MACJA,SACQJ,EAAG,CACX5B,IACAG,IACA8B,iBAAkB9C,EAClBA,UAAWoC,EACXT,WACAU,iBACAH,QACAL,WACAkB,SAAU,CACRrC,YACAC,cAGJE,EAAI6B,GAAS,KAAOA,EAAQ7B,EAC5BG,EAAI2B,GAAS,KAAOA,EAAQ3B,EAC5BqB,EAAiB,IACZA,EACHG,CAACA,GAAO,IACHH,EAAeG,MACfI,IAQP,GAAIC,GAASP,GAAc,GAAI,CAC7BA,IACA,UAAWO,IAAU,SAAU,CAC7B,GAAIA,EAAM7C,UAAW,CACnBoC,EAAoBS,EAAM7C,SACpC,CACQ,GAAI6C,EAAMX,MAAO,CACfA,EAAQW,EAAMX,QAAU,WAAaL,EAASM,gBAAgB,CAC5DzB,YACAC,WACAgB,aACGkB,EAAMX,KACrB,GAEUrB,IACAG,KACET,EAA2B2B,EAAOE,EAAmB3B,GACjE,CACM8B,GAAK,EACL,QACN,CACA,CACE,MAAO,CACL1B,IACAG,IACAhB,UAAWoC,EACXT,WACAU,iBACD,EAGH,SAASW,EAAoBC,GAC3B,MAAO,CACLC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,KACHJ,EAEP,CAEA,SAASK,EAAyBL,GAChC,cAAcA,IAAY,SAAWD,EAAoBC,GAAW,CAClEC,IAAKD,EACLE,MAAOF,EACPG,OAAQH,EACRI,KAAMJ,EAEV,CAEA,SAASM,EAAiBC,GACxB,MAAO,IACFA,EACHN,IAAKM,EAAKxC,EACVqC,KAAMG,EAAK3C,EACXsC,MAAOK,EAAK3C,EAAI2C,EAAK1C,MACrBsC,OAAQI,EAAKxC,EAAIwC,EAAKvC,OAE1B,CAUAQ,eAAegC,EAAeC,EAAqBC,GACjD,IAAIC,EACJ,GAAID,SAAiB,EAAG,CACtBA,EAAU,EACd,CACE,MAAM9C,EACJA,EAACG,EACDA,EAACa,SACDA,EAAQK,MACRA,EAAKa,SACLA,EAAQpB,SACRA,GACE+B,EACJ,MAAMG,SACJA,EAAW,oBAAmBC,aAC9BA,EAAe,WAAUC,eACzBA,EAAiB,WAAUC,YAC3BA,EAAc,MAAKf,QACnBA,EAAU,GACRU,EACJ,MAAMM,EAAgBX,EAAyBL,GAC/C,MAAMiB,EAAaH,IAAmB,WAAa,YAAc,WACjE,MAAMI,EAAUpB,EAASiB,EAAcE,EAAaH,GACpD,MAAMK,EAAqBb,QAAuB1B,EAASwC,gBAAgB,CACzEF,UAAWP,QAA+B/B,EAASyC,WAAa,UAAY,EAAIzC,EAASyC,UAAUH,MAAc,KAAOP,EAAwB,MAAQO,EAAUA,EAAQI,sBAA0B1C,EAAS2C,oBAAsB,UAAY,EAAI3C,EAAS2C,mBAAmBzB,EAASpC,WACxRkD,WACAC,eACAnC,cAEF,MAAM6B,EAAOO,IAAmB,WAAa,IACxC7B,EAAMvB,SACTE,IACAG,KACEkB,EAAMxB,UACV,MAAM+D,QAAsB5C,EAAS6C,iBAAmB,UAAY,EAAI7C,EAAS6C,gBAAgB3B,EAASpC,WAC1G,MAAMgE,QAAsB9C,EAASyC,WAAa,UAAY,EAAIzC,EAASyC,UAAUG,UAA0B5C,EAAS+C,UAAY,UAAY,EAAI/C,EAAS+C,SAASH,KAAmB,CACvL5D,EAAG,EACHG,EAAG,GACD,CACFH,EAAG,EACHG,EAAG,GAEL,MAAM6D,EAAoBtB,EAAiB1B,EAASiD,4DAA8DjD,EAASiD,sDAAsD,CAC/KtB,OACAiB,eACA9C,aACG6B,GAEL,MAAO,CACLN,KAAMkB,EAAmBlB,IAAM2B,EAAkB3B,IAAMe,EAAcf,KAAOyB,EAAY3D,EACxFoC,QAASyB,EAAkBzB,OAASgB,EAAmBhB,OAASa,EAAcb,QAAUuB,EAAY3D,EACpGqC,MAAOe,EAAmBf,KAAOwB,EAAkBxB,KAAOY,EAAcZ,MAAQsB,EAAY9D,EAC5FsC,OAAQ0B,EAAkB1B,MAAQiB,EAAmBjB,MAAQc,EAAcd,OAASwB,EAAY9D,EAEpG,CAEA,MAAMkE,EAAMC,KAAKD,IACjB,MAAME,EAAMD,KAAKC,IAEjB,SAASC,EAAOC,EAAOC,EAAOC,GAC5B,OAAOJ,EAAIE,EAAOJ,EAAIK,EAAOC,GAC/B,CAOK,MAACC,EAAQ3B,IAAO,CACnBnB,KAAM,QACNmB,UACA,QAAMlB,CAAGiB,GAEP,MAAMS,QACJA,EAAOlB,QACPA,EAAU,GACRU,GAAW,GACf,MAAM9C,EACJA,EAACG,EACDA,EAAChB,UACDA,EAASkC,MACTA,EAAKL,SACLA,GACE6B,EACJ,GAAIS,GAAW,KAAM,CAInB,MAAO,EACb,CACI,MAAMF,EAAgBX,EAAyBL,GAC/C,MAAM1B,EAAS,CACbV,IACAG,KAEF,MAAMb,EAAOE,EAAyBL,GACtC,MAAMmB,EAASjB,EAAkBC,GACjC,MAAMoF,QAAwB1D,EAAS2D,cAAcrB,GACrD,MAAMsB,EAAUtF,IAAS,IAAM,MAAQ,OACvC,MAAMuF,EAAUvF,IAAS,IAAM,SAAW,QAC1C,MAAMwF,EAAUzD,EAAMxB,UAAUS,GAAUe,EAAMxB,UAAUP,GAAQoB,EAAOpB,GAAQ+B,EAAMvB,SAASQ,GAChG,MAAMyE,EAAYrE,EAAOpB,GAAQ+B,EAAMxB,UAAUP,GACjD,MAAM0F,QAA2BhE,EAAS6C,iBAAmB,UAAY,EAAI7C,EAAS6C,gBAAgBP,IACtG,IAAI2B,EAAaD,EAAoB1F,IAAS,IAAM0F,EAAkBE,cAAgB,EAAIF,EAAkBG,aAAe,EAAI,EAC/H,GAAIF,IAAe,EAAG,CACpBA,EAAa5D,EAAMvB,SAASQ,EAClC,CACI,MAAM8E,EAAoBN,EAAU,EAAIC,EAAY,EAIpD,MAAMb,EAAMd,EAAcwB,GAC1B,MAAMR,EAAMa,EAAaP,EAAgBpE,GAAU8C,EAAcyB,GACjE,MAAMQ,EAASJ,EAAa,EAAIP,EAAgBpE,GAAU,EAAI8E,EAC9D,MAAME,EAASjB,EAAOH,EAAKmB,EAAQjB,GAMnC,MAAMmB,EAAkBrG,EAAaC,IAAc,MAAQkG,GAAUC,GAAUjE,EAAMxB,UAAUS,GAAU,GAAK+E,EAASnB,EAAMd,EAAcwB,GAAWxB,EAAcyB,IAAYH,EAAgBpE,GAAU,EAAI,EAC9M,MAAMkF,EAAkBD,EAAkBF,EAASnB,EAAMA,EAAMmB,EAASjB,EAAMiB,EAAS,EACvF,MAAO,CACL/F,CAACA,GAAOoB,EAAOpB,GAAQkG,EACvBzD,KAAM,CACJzC,CAACA,GAAOgG,EACRG,aAAcJ,EAASC,GAG/B,IAMA,MAAMI,EAAkB,CACtBlD,KAAM,QACNF,MAAO,OACPC,OAAQ,MACRF,IAAK,UAEP,SAASsD,EAAqBxG,GAC5B,OAAOA,EAAUyG,QAAQ,0BAA0BpF,GAAQkF,EAAgBlF,IAC7E,CAEA,SAASqF,EAAkB1G,EAAWkC,EAAOzB,GAC3C,GAAIA,SAAa,EAAG,CAClBA,EAAM,KACV,CACE,MAAMkG,EAAY5G,EAAaC,GAC/B,MAAMkB,EAAWb,EAAyBL,GAC1C,MAAMmB,EAASjB,EAAkBgB,GACjC,IAAI0F,EAAoB1F,IAAa,IAAMyF,KAAelG,EAAM,MAAQ,SAAW,QAAU,OAASkG,IAAc,QAAU,SAAW,MACzI,GAAIzE,EAAMxB,UAAUS,GAAUe,EAAMvB,SAASQ,GAAS,CACpDyF,EAAoBJ,EAAqBI,EAC7C,CACE,MAAO,CACLC,KAAMD,EACNE,MAAON,EAAqBI,GAEhC,CAEA,MAAMG,EAAuB,CAC3BC,MAAO,MACPC,IAAK,SAEP,SAASC,EAA8BlH,GACrC,OAAOA,EAAUyG,QAAQ,cAAcE,GAAaI,EAAqBJ,IAC3E,CAoGA,SAASQ,EAAsBnH,GAC7B,MAAMoH,EAAoBZ,EAAqBxG,GAC/C,MAAO,CAACkH,EAA8BlH,GAAYoH,EAAmBF,EAA8BE,GACrG,CAEA,SAASC,EAAYhG,EAAMiG,EAAS7G,GAClC,MAAM8G,EAAK,CAAC,OAAQ,SACpB,MAAMC,EAAK,CAAC,QAAS,QACrB,MAAMC,EAAK,CAAC,MAAO,UACnB,MAAMC,EAAK,CAAC,SAAU,OACtB,OAAQrG,GACN,IAAK,MACL,IAAK,SACH,GAAIZ,EAAK,OAAO6G,EAAUE,EAAKD,EAC/B,OAAOD,EAAUC,EAAKC,EACxB,IAAK,OACL,IAAK,QACH,OAAOF,EAAUG,EAAKC,EACxB,QACE,MAAO,GAEb,CACA,SAASC,EAA0B3H,EAAW4H,EAAeC,EAAWpH,GACtE,MAAMkG,EAAY5G,EAAaC,GAC/B,IAAI8H,EAAOT,EAAYjH,EAAQJ,GAAY6H,IAAc,QAASpH,GAClE,GAAIkG,EAAW,CACbmB,EAAOA,EAAKC,KAAI1G,GAAQA,EAAO,IAAMsF,IACrC,GAAIiB,EAAe,CACjBE,EAAOA,EAAKE,OAAOF,EAAKC,IAAIb,GAClC,CACA,CACE,OAAOY,CACT,CAOK,MAACG,EAAO,SAAUtE,GACrB,GAAIA,SAAiB,EAAG,CACtBA,EAAU,EACd,CACE,MAAO,CACLnB,KAAM,OACNmB,UACA,QAAMlB,CAAGiB,GACP,IAAIwE,EACJ,MAAMlI,UACJA,EAASqC,eACTA,EAAcH,MACdA,EAAKY,iBACLA,EAAgBjB,SAChBA,EAAQkB,SACRA,GACEW,EACJ,MACExC,SAAUiH,EAAgB,KAC1BC,UAAWC,EAAiB,KAC5BC,mBAAoBC,EAA2BC,iBAC/CA,EAAmB,UAASC,0BAC5BA,EAA4B,OAAMb,cAClCA,EAAgB,QACbc,GACD/E,EACJ,MAAMtC,EAAOjB,EAAQJ,GACrB,MAAM2I,EAAkBvI,EAAQ0C,KAAsBA,EACtD,MAAMrC,QAAaoB,EAASI,OAAS,UAAY,EAAIJ,EAASI,MAAMc,EAASpC,WAC7E,MAAM2H,EAAqBC,IAAgCI,IAAoBf,EAAgB,CAACpB,EAAqB1D,IAAqBqE,EAAsBrE,IAChK,IAAKyF,GAA+BE,IAA8B,OAAQ,CACxEH,EAAmBM,QAAQjB,EAA0B7E,EAAkB8E,EAAea,EAA2BhI,GACzH,CACM,MAAMoI,EAAa,CAAC/F,KAAqBwF,GACzC,MAAMQ,QAAiBrF,EAAeC,EAAqBgF,GAC3D,MAAMK,EAAY,GAClB,IAAIC,IAAkBd,EAAuB7F,EAAe4F,OAAS,UAAY,EAAIC,EAAqBa,YAAc,GACxH,GAAIZ,EAAe,CACjBY,EAAUH,KAAKE,EAASzH,GAChC,CACM,GAAIgH,EAAgB,CAClB,MAAMxB,KACJA,EAAIC,MACJA,GACEJ,EAAkB1G,EAAWkC,EAAOzB,GACxCsI,EAAUH,KAAKE,EAASjC,GAAOiC,EAAShC,GAChD,CACMkC,EAAgB,IAAIA,EAAe,CACjChJ,YACA+I,cAIF,IAAKA,EAAUE,OAAM5H,GAAQA,GAAQ,IAAI,CACvC,IAAI6H,EACJ,MAAMC,KAAeD,EAAwB7G,EAAe4F,OAAS,UAAY,EAAIiB,EAAsBE,QAAU,GAAK,EAC1H,MAAMC,EAAgBR,EAAWM,GACjC,GAAIE,EAAe,CAEjB,MAAO,CACLzG,KAAM,CACJwG,MAAOD,EACPJ,UAAWC,GAEbnG,MAAO,CACL7C,UAAWqJ,GAGzB,CACQ,IAAIC,EAAiB,SACrB,OAAQd,GACN,IAAK,UACH,CACE,IAAIe,EACJ,MAAMvJ,GAAauJ,EAAwBP,EAAcjB,KAAIyB,GAAK,CAACA,EAAGA,EAAET,UAAUhH,QAAO+G,GAAYA,EAAW,IAAGW,QAAO,CAACC,EAAKZ,IAAaY,EAAMZ,GAAU,MAAKa,MAAK,CAACC,EAAGC,IAAMD,EAAE,GAAKC,EAAE,KAAI,KAAO,UAAY,EAAIN,EAAsB,GAAGvJ,UAC9O,GAAIA,EAAW,CACbsJ,EAAiBtJ,CACjC,CACc,KACd,CACU,IAAK,mBACHsJ,EAAiBxG,EACjB,MAEJ,GAAI9C,IAAcsJ,EAAgB,CAChC,MAAO,CACLzG,MAAO,CACL7C,UAAWsJ,GAGzB,CACA,CACM,MAAO,EACb,EAEA,EA4EK,MAACQ,EAAS,SAAUnG,GACvB,GAAIA,SAAiB,EAAG,CACtBA,EAAU,EACd,CACE,MAAO,CACLnB,KAAM,SACNmB,UACA,QAAMlB,CAAGiB,GACP,MAAM1D,UACJA,EAAS+C,SACTA,EAAQb,MACRA,EAAKL,SACLA,EAAQF,SACRA,GACE+B,EAIJ,MAAMT,QACJA,EAAU,EAACpC,EACXA,EAACG,EACDA,GACE2C,EACJ,MAAMoG,EAAWxG,EAAiB1B,EAASiD,4DAA8DjD,EAASiD,sDAAsD,CACtKtB,KAAMtB,EAAMxB,UACZ+D,mBAAqB5C,EAAS6C,iBAAmB,UAAY,EAAI7C,EAAS6C,gBAAgB3B,EAASpC,WACnGgB,aACGO,EAAMxB,WACX,MAAMsJ,QAAsBnI,EAASoI,gBAAkB,UAAY,EAAIpI,EAASoI,eAAelH,EAASrC,aAAgB,GACxH,MAAMuD,EAAgBX,EAAyBL,GAC/C,SAASiH,IAEP,GAAIF,EAAY7I,SAAW,GAAK6I,EAAY,GAAG3G,KAAO2G,EAAY,GAAG7G,OAAStC,GAAK,MAAQG,GAAK,KAAM,CAEpG,OAAOgJ,EAAYG,MAAK3G,GAAQ3C,EAAI2C,EAAKH,KAAOY,EAAcZ,MAAQxC,EAAI2C,EAAKL,MAAQc,EAAcd,OAASnC,EAAIwC,EAAKN,IAAMe,EAAcf,KAAOlC,EAAIwC,EAAKJ,OAASa,EAAcb,UAAW2G,CACvM,CAGQ,GAAIC,EAAY7I,QAAU,EAAG,CAC3B,GAAId,EAAyBL,KAAe,IAAK,CAC/C,MAAMoK,EAAYJ,EAAY,GAC9B,MAAMK,EAAWL,EAAYA,EAAY7I,OAAS,GAClD,MAAMmJ,EAAQlK,EAAQJ,KAAe,MACrC,MAAMkD,EAAMkH,EAAUlH,IACtB,MAAME,EAASiH,EAASjH,OACxB,MAAMC,EAAOiH,EAAQF,EAAU/G,KAAOgH,EAAShH,KAC/C,MAAMF,EAAQmH,EAAQF,EAAUjH,MAAQkH,EAASlH,MACjD,MAAMrC,EAAQqC,EAAQE,EACtB,MAAMpC,EAASmC,EAASF,EACxB,MAAO,CACLA,MACAE,SACAC,OACAF,QACArC,QACAG,SACAJ,EAAGwC,EACHrC,EAAGkC,EAEjB,CACU,MAAMqH,EAAanK,EAAQJ,KAAe,OAC1C,MAAMwK,EAAWvF,KAAO+E,EAAYjC,KAAIvE,GAAQA,EAAKL,SACrD,MAAMsH,EAAU1F,KAAOiF,EAAYjC,KAAIvE,GAAQA,EAAKH,QACpD,MAAMqH,EAAeV,EAAYjI,QAAOyB,GAAQ+G,EAAa/G,EAAKH,OAASoH,EAAUjH,EAAKL,QAAUqH,IACpG,MAAMtH,EAAMwH,EAAa,GAAGxH,IAC5B,MAAME,EAASsH,EAAaA,EAAavJ,OAAS,GAAGiC,OACrD,MAAMC,EAAOoH,EACb,MAAMtH,EAAQqH,EACd,MAAM1J,EAAQqC,EAAQE,EACtB,MAAMpC,EAASmC,EAASF,EACxB,MAAO,CACLA,MACAE,SACAC,OACAF,QACArC,QACAG,SACAJ,EAAGwC,EACHrC,EAAGkC,EAEf,CACQ,OAAO6G,CACf,CACM,MAAMY,QAAmB9I,EAASM,gBAAgB,CAChDzB,UAAW,CACTwJ,yBAEFvJ,SAAUoC,EAASpC,SACnBgB,aAEF,GAAIO,EAAMxB,UAAUG,IAAM8J,EAAWjK,UAAUG,GAAKqB,EAAMxB,UAAUM,IAAM2J,EAAWjK,UAAUM,GAAKkB,EAAMxB,UAAUI,QAAU6J,EAAWjK,UAAUI,OAASoB,EAAMxB,UAAUO,SAAW0J,EAAWjK,UAAUO,OAAQ,CAClN,MAAO,CACL4B,MAAO,CACLX,MAAOyI,GAGnB,CACM,MAAO,EACb,EAEA,EAEAlJ,eAAemJ,EAAqBlH,EAAqB0B,GACvD,MAAMpF,UACJA,EAAS6B,SACTA,EAAQkB,SACRA,GACEW,EACJ,MAAMjD,QAAaoB,EAASI,OAAS,UAAY,EAAIJ,EAASI,MAAMc,EAASpC,WAC7E,MAAMU,EAAOjB,EAAQJ,GACrB,MAAM2G,EAAY5G,EAAaC,GAC/B,MAAMsB,EAAajB,EAAyBL,KAAe,IAC3D,MAAM6K,EAAgB,CAAC,OAAQ,OAAOvK,SAASe,IAAS,EAAI,EAC5D,MAAMyJ,EAAiBrK,GAAOa,GAAc,EAAI,EAChD,MAAMyJ,SAAkB3F,IAAU,WAAaA,EAAM1B,GAAuB0B,EAG5E,IAAIlE,SACFA,EAAQkH,UACRA,EAAS4C,cACTA,UACSD,IAAa,SAAW,CACjC7J,SAAU6J,EACV3C,UAAW,EACX4C,cAAe,MACb,CACF9J,SAAU,EACVkH,UAAW,EACX4C,cAAe,QACZD,GAEL,GAAIpE,UAAoBqE,IAAkB,SAAU,CAClD5C,EAAYzB,IAAc,MAAQqE,GAAiB,EAAIA,CAC3D,CACE,OAAO1J,EAAa,CAClBT,EAAGuH,EAAY0C,EACf9J,EAAGE,EAAW2J,GACZ,CACFhK,EAAGK,EAAW2J,EACd7J,EAAGoH,EAAY0C,EAEnB,CAMK,MAAC3E,EAAS,SAAUf,GACvB,GAAIA,SAAe,EAAG,CACpBA,EAAQ,CACZ,CACE,MAAO,CACL5C,KAAM,SACNmB,QAASyB,EACT,QAAM3C,CAAGiB,GACP,MAAM7C,EACJA,EAACG,EACDA,GACE0C,EACJ,MAAMuH,QAAmBL,EAAqBlH,EAAqB0B,GACnE,MAAO,CACLvE,EAAGA,EAAIoK,EAAWpK,EAClBG,EAAGA,EAAIiK,EAAWjK,EAClB4B,KAAMqI,EAEd,EAEA,EAEA,SAASC,EAAa/K,GACpB,OAAOA,IAAS,IAAM,IAAM,GAC9B,CAOK,MAACgL,EAAQ,SAAUxH,GACtB,GAAIA,SAAiB,EAAG,CACtBA,EAAU,EACd,CACE,MAAO,CACLnB,KAAM,QACNmB,UACA,QAAMlB,CAAGiB,GACP,MAAM7C,EACJA,EAACG,EACDA,EAAChB,UACDA,GACE0D,EACJ,MACExC,SAAUiH,EAAgB,KAC1BC,UAAWC,EAAiB,MAAK+C,QACjCA,EAAU,CACR3I,GAAIjC,IACF,IAAIK,EACFA,EAACG,EACDA,GACER,EACJ,MAAO,CACLK,IACAG,IACD,MAGF0H,GACD/E,EACJ,MAAMpC,EAAS,CACbV,IACAG,KAEF,MAAM8H,QAAiBrF,EAAeC,EAAqBgF,GAC3D,MAAMxH,EAAWb,EAAyBD,EAAQJ,IAClD,MAAMoI,EAAY8C,EAAahK,GAC/B,IAAImK,EAAgB9J,EAAOL,GAC3B,IAAIoK,EAAiB/J,EAAO6G,GAC5B,GAAID,EAAe,CACjB,MAAMoD,EAAUrK,IAAa,IAAM,MAAQ,OAC3C,MAAMsK,EAAUtK,IAAa,IAAM,SAAW,QAC9C,MAAM6D,EAAMsG,EAAgBvC,EAASyC,GACrC,MAAMtG,EAAMoG,EAAgBvC,EAAS0C,GACrCH,EAAgBnG,EAAOH,EAAKsG,EAAepG,EACnD,CACM,GAAIoD,EAAgB,CAClB,MAAMkD,EAAUnD,IAAc,IAAM,MAAQ,OAC5C,MAAMoD,EAAUpD,IAAc,IAAM,SAAW,QAC/C,MAAMrD,EAAMuG,EAAiBxC,EAASyC,GACtC,MAAMtG,EAAMqG,EAAiBxC,EAAS0C,GACtCF,EAAiBpG,EAAOH,EAAKuG,EAAgBrG,EACrD,CACM,MAAMwG,EAAgBL,EAAQ3I,GAAG,IAC5BiB,EACHxC,CAACA,GAAWmK,EACZjD,CAACA,GAAYkD,IAEf,MAAO,IACFG,EACH7I,KAAM,CACJ/B,EAAG4K,EAAc5K,EAAIA,EACrBG,EAAGyK,EAAczK,EAAIA,GAG/B,EAEA,EC76BA,SAAS0K,EAAUC,GACjB,IAAIC,EACJ,QAASA,EAAsBD,EAAKE,gBAAkB,UAAY,EAAID,EAAoBE,cAAgBC,MAC5G,CAEA,SAASC,EAAmB7H,GAC1B,OAAOuH,EAAUvH,GAAS8H,iBAAiB9H,EAC7C,CAEA,SAAS+H,EAAYP,GACnB,OAAOQ,EAAOR,IAASA,EAAKS,UAAY,IAAIC,cAAgB,EAC9D,CAEA,IAAIC,EACJ,SAASC,IACP,GAAID,EAAU,CACZ,OAAOA,CACX,CACE,MAAME,EAASC,UAAUC,cACzB,GAAIF,GAAUG,MAAMC,QAAQJ,EAAOK,QAAS,CAC1CP,EAAWE,EAAOK,OAAO9E,KAAI+E,GAAQA,EAAKC,MAAQ,IAAMD,EAAKE,UAASC,KAAK,KAC3E,OAAOX,CACX,CACE,OAAOG,UAAUS,SACnB,CAEA,SAASC,EAAc/H,GACrB,OAAOA,aAAiBsG,EAAUtG,GAAOgI,WAC3C,CACA,SAAS9I,EAAUc,GACjB,OAAOA,aAAiBsG,EAAUtG,GAAOiI,OAC3C,CACA,SAASlB,EAAO/G,GACd,OAAOA,aAAiBsG,EAAUtG,GAAOkI,IAC3C,CACA,SAASC,EAAa5B,GAEpB,UAAW6B,aAAe,YAAa,CACrC,OAAO,KACX,CACE,MAAMC,EAAa/B,EAAUC,GAAM6B,WACnC,OAAO7B,aAAgB8B,GAAc9B,aAAgB6B,UACvD,CACA,SAASE,EAAkBvJ,GACzB,MAAM2E,SACJA,EAAQ6E,UACRA,EAASC,UACTA,EAASC,QACTA,GACE7B,EAAmB7H,GACvB,MAAO,kCAAkC2J,KAAKhF,EAAW8E,EAAYD,KAAe,CAAC,SAAU,YAAYrN,SAASuN,EACtH,CACA,SAASE,EAAe5J,GACtB,MAAO,CAAC,QAAS,KAAM,MAAM7D,SAAS4L,EAAY/H,GACpD,CACA,SAAS6J,EAAkB7J,GAEzB,MAAM8J,EAAY,WAAWH,KAAKvB,KAClC,MAAM2B,EAAMlC,EAAmB7H,GAC/B,MAAMgK,EAAiBD,EAAIC,gBAAkBD,EAAIE,qBAKjD,OAAOF,EAAIG,YAAc,QAAUH,EAAII,cAAgB,SAAWH,EAAiBA,IAAmB,OAAS,QAAUF,GAAaC,EAAIK,aAAe,UAAYN,IAAcC,EAAInM,OAASmM,EAAInM,SAAW,OAAS,QAAU,CAAC,YAAa,eAAeyM,MAAKpJ,GAAS8I,EAAIK,WAAWjO,SAAS8E,MAAW,CAAC,QAAS,SAAU,SAAU,WAAWoJ,MAEzVpJ,IACE,MAAMqJ,EAAUP,EAAIO,QACpB,OAAOA,GAAW,KAAOA,EAAQnO,SAAS8E,GAAS,KAAK,GAE5D,CACA,SAASsJ,IAEP,OAAQ,iCAAiCZ,KAAKvB,IAMhD,CAEA,SAASoC,EAAsBhD,GAC7B,MAAO,CAAC,OAAQ,OAAQ,aAAarL,SAAS4L,EAAYP,GAC5D,CAEA,MAAM5G,EAAMC,KAAKD,IACjB,MAAME,EAAMD,KAAKC,IACjB,MAAM2J,EAAQ5J,KAAK4J,MAEnB,SAASC,EAAiB1K,GACxB,MAAM+J,EAAMlC,EAAmB7H,GAC/B,IAAIrD,EAAQgO,WAAWZ,EAAIpN,OAC3B,IAAIG,EAAS6N,WAAWZ,EAAIjN,QAC5B,MAAM8N,EAAc5K,EAAQ4K,YAC5B,MAAMC,EAAe7K,EAAQ6K,aAC7B,MAAMC,EAAiBL,EAAM9N,KAAWiO,GAAeH,EAAM3N,KAAY+N,EACzE,GAAIC,EAAgB,CAClBnO,EAAQiO,EACR9N,EAAS+N,CACb,CACE,MAAO,CACLlO,QACAG,SACA8I,SAAUkF,EAEd,CAEA,SAASC,EAAc/K,GACrB,OAAQG,EAAUH,GAAWA,EAAQI,eAAiBJ,CACxD,CAEA,MAAMgL,EAAiB,CACrBtO,EAAG,EACHG,EAAG,GAEL,SAAS4D,EAAST,GAChB,MAAMiL,EAAaF,EAAc/K,GACjC,IAAKgJ,EAAciC,GAAa,CAC9B,OAAOD,CACX,CACE,MAAM3L,EAAO4L,EAAWlF,wBACxB,MAAMpJ,MACJA,EAAKG,OACLA,EAAM8I,SACNA,GACE8E,EAAiBO,GACrB,IAAIvO,GAAKkJ,EAAW6E,EAAMpL,EAAK1C,OAAS0C,EAAK1C,OAASA,EACtD,IAAIE,GAAK+I,EAAW6E,EAAMpL,EAAKvC,QAAUuC,EAAKvC,QAAUA,EAIxD,IAAKJ,IAAMwO,OAAOC,SAASzO,GAAI,CAC7BA,EAAI,CACR,CACE,IAAKG,IAAMqO,OAAOC,SAAStO,GAAI,CAC7BA,EAAI,CACR,CACE,MAAO,CACLH,IACAG,IAEJ,CAEA,SAASkJ,EAAsB/F,EAASoL,EAAcC,EAAiB/K,GACrE,IAAIgL,EAAqBC,EACzB,GAAIH,SAAsB,EAAG,CAC3BA,EAAe,KACnB,CACE,GAAIC,SAAyB,EAAG,CAC9BA,EAAkB,KACtB,CACE,MAAMG,EAAaxL,EAAQ+F,wBAC3B,MAAMkF,EAAaF,EAAc/K,GACjC,IAAIyL,EAAQT,EACZ,GAAII,EAAc,CAChB,GAAI9K,EAAc,CAChB,GAAIH,EAAUG,GAAe,CAC3BmL,EAAQhL,EAASH,EACzB,CACA,KAAW,CACLmL,EAAQhL,EAAST,EACvB,CACA,CACE,MAAM0L,EAAMT,EAAa1D,EAAU0D,GAAcrD,OACjD,MAAM+D,GAAoBpB,KAAsBc,EAChD,IAAI3O,GAAK8O,EAAWtM,MAAQyM,IAAqBL,EAAsBI,EAAIE,iBAAmB,UAAY,EAAIN,EAAoBO,aAAe,EAAI,IAAMJ,EAAM/O,EACjK,IAAIG,GAAK2O,EAAWzM,KAAO4M,IAAqBJ,EAAuBG,EAAIE,iBAAmB,UAAY,EAAIL,EAAqBO,YAAc,EAAI,IAAML,EAAM5O,EACjK,IAAIF,EAAQ6O,EAAW7O,MAAQ8O,EAAM/O,EACrC,IAAII,EAAS0O,EAAW1O,OAAS2O,EAAM5O,EACvC,GAAIoO,EAAY,CACd,MAAMS,EAAMnE,EAAU0D,GACtB,MAAMc,EAAYzL,GAAgBH,EAAUG,GAAgBiH,EAAUjH,GAAgBA,EACtF,IAAI0L,EAAgBN,EAAIO,aACxB,MAAOD,GAAiB1L,GAAgByL,IAAcL,EAAK,CACzD,MAAMQ,EAAczL,EAASuL,GAC7B,MAAMG,EAAaH,EAAcjG,wBACjC,MAAMgE,EAAMjC,iBAAiBkE,GAC7BG,EAAWzP,IAAMsP,EAAcI,WAAazB,WAAWZ,EAAIsC,cAAgBH,EAAYxP,EACvFyP,EAAWtP,IAAMmP,EAAcM,UAAY3B,WAAWZ,EAAIwC,aAAeL,EAAYrP,EACrFH,GAAKwP,EAAYxP,EACjBG,GAAKqP,EAAYrP,EACjBF,GAASuP,EAAYxP,EACrBI,GAAUoP,EAAYrP,EACtBH,GAAKyP,EAAWzP,EAChBG,GAAKsP,EAAWtP,EAChBmP,EAAgBzE,EAAUyE,GAAeC,YAC/C,CACA,CACE,MAAO,CACLtP,QACAG,SACAiC,IAAKlC,EACLmC,MAAOtC,EAAIC,EACXsC,OAAQpC,EAAIC,EACZoC,KAAMxC,EACNA,IACAG,IAEJ,CAEA,SAASwD,EAAmBmH,GAC1B,QAASQ,EAAOR,GAAQA,EAAKE,cAAgBF,EAAKgF,WAAa5E,OAAO4E,UAAUC,eAClF,CAEA,SAASC,EAAc1M,GACrB,GAAIG,EAAUH,GAAU,CACtB,MAAO,CACL2M,WAAY3M,EAAQ2M,WACpBC,UAAW5M,EAAQ4M,UAEzB,CACE,MAAO,CACLD,WAAY3M,EAAQ6M,YACpBD,UAAW5M,EAAQ8M,YAEvB,CAEA,SAASC,EAAoB/M,GAG3B,OAAO+F,EAAsB1F,EAAmBL,IAAUd,KAAOwN,EAAc1M,GAAS2M,UAC1F,CAEA,SAASK,EAA8BhN,EAASM,EAAc9C,GAC5D,MAAMyP,EAA0BjE,EAAc1I,GAC9C,MAAMmM,EAAkBpM,EAAmBC,GAC3C,MAAMjB,EAAO0G,EAAsB/F,EAAS,KAAMxC,IAAa,QAAS8C,GACxE,IAAI4M,EAAS,CACXP,WAAY,EACZC,UAAW,GAEb,MAAMO,EAAU,CACdzQ,EAAG,EACHG,EAAG,GAEL,GAAIoQ,IAA4BA,GAA2BzP,IAAa,QAAS,CAC/E,GAAIuK,EAAYzH,KAAkB,QAAUiJ,EAAkBkD,GAAkB,CAC9ES,EAASR,EAAcpM,EAC7B,CACI,GAAI0I,EAAc1I,GAAe,CAC/B,MAAM8M,EAAarH,EAAsBzF,EAAc,MACvD6M,EAAQzQ,EAAI0Q,EAAW1Q,EAAI4D,EAAa8L,WACxCe,EAAQtQ,EAAIuQ,EAAWvQ,EAAIyD,EAAagM,SAC9C,MAAW,GAAIG,EAAiB,CAC1BU,EAAQzQ,EAAIqQ,EAAoBN,EACtC,CACA,CACE,MAAO,CACL/P,EAAG2C,EAAKH,KAAOgO,EAAOP,WAAaQ,EAAQzQ,EAC3CG,EAAGwC,EAAKN,IAAMmO,EAAON,UAAYO,EAAQtQ,EACzCF,MAAO0C,EAAK1C,MACZG,OAAQuC,EAAKvC,OAEjB,CAEA,SAASuQ,GAAc7F,GACrB,GAAIO,EAAYP,KAAU,OAAQ,CAChC,OAAOA,CACX,CACE,MAAM8F,EAEN9F,EAAK+F,cAEL/F,EAAKgG,aAELpE,EAAa5B,GAAQA,EAAKiG,KAAO,OAEjCpN,EAAmBmH,GACnB,OAAO4B,EAAakE,GAAUA,EAAOG,KAAOH,CAC9C,CAEA,SAASI,GAAoB1N,GAC3B,IAAKgJ,EAAchJ,IAAY6H,EAAmB7H,GAAS2N,WAAa,QAAS,CAC/E,OAAO,IACX,CACE,OAAO3N,EAAQM,YACjB,CACA,SAASsN,GAAmB5N,GAC1B,IAAI6N,EAAcR,GAAcrN,GAChC,MAAOgJ,EAAc6E,KAAiBrD,EAAsBqD,GAAc,CACxE,GAAIhE,EAAkBgE,GAAc,CAClC,OAAOA,CACb,KAAW,CACLA,EAAcR,GAAcQ,EAClC,CACA,CACE,OAAO,IACT,CAIA,SAAStN,GAAgBP,GACvB,MAAM4H,EAASL,EAAUvH,GACzB,IAAIM,EAAeoN,GAAoB1N,GACvC,MAAOM,GAAgBsJ,EAAetJ,IAAiBuH,EAAmBvH,GAAcqN,WAAa,SAAU,CAC7GrN,EAAeoN,GAAoBpN,EACvC,CACE,GAAIA,IAAiByH,EAAYzH,KAAkB,QAAUyH,EAAYzH,KAAkB,QAAUuH,EAAmBvH,GAAcqN,WAAa,WAAa9D,EAAkBvJ,IAAgB,CAChM,OAAOsH,CACX,CACE,OAAOtH,GAAgBsN,GAAmB5N,IAAY4H,CACxD,CAEA,SAASvG,GAAcrB,GACrB,OAAO0K,EAAiB1K,EAC1B,CAEA,SAASW,GAAsDtE,GAC7D,IAAIgD,KACFA,EAAIiB,aACJA,EAAY9C,SACZA,GACEnB,EACJ,MAAM4Q,EAA0BjE,EAAc1I,GAC9C,MAAMmM,EAAkBpM,EAAmBC,GAC3C,GAAIA,IAAiBmM,EAAiB,CACpC,OAAOpN,CACX,CACE,IAAI6N,EAAS,CACXP,WAAY,EACZC,UAAW,GAEb,IAAInB,EAAQ,CACV/O,EAAG,EACHG,EAAG,GAEL,MAAMsQ,EAAU,CACdzQ,EAAG,EACHG,EAAG,GAEL,GAAIoQ,IAA4BA,GAA2BzP,IAAa,QAAS,CAC/E,GAAIuK,EAAYzH,KAAkB,QAAUiJ,EAAkBkD,GAAkB,CAC9ES,EAASR,EAAcpM,EAC7B,CACI,GAAI0I,EAAc1I,GAAe,CAC/B,MAAM8M,EAAarH,EAAsBzF,GACzCmL,EAAQhL,EAASH,GACjB6M,EAAQzQ,EAAI0Q,EAAW1Q,EAAI4D,EAAa8L,WACxCe,EAAQtQ,EAAIuQ,EAAWvQ,EAAIyD,EAAagM,SAC9C,CAKA,CAEE,MAAO,CACL3P,MAAO0C,EAAK1C,MAAQ8O,EAAM/O,EAC1BI,OAAQuC,EAAKvC,OAAS2O,EAAM5O,EAC5BH,EAAG2C,EAAK3C,EAAI+O,EAAM/O,EAAIwQ,EAAOP,WAAalB,EAAM/O,EAAIyQ,EAAQzQ,EAC5DG,EAAGwC,EAAKxC,EAAI4O,EAAM5O,EAAIqQ,EAAON,UAAYnB,EAAM5O,EAAIsQ,EAAQtQ,EAE/D,CAEA,SAASiR,GAAgB9N,EAASxC,GAChC,MAAMkO,EAAMnE,EAAUvH,GACtB,MAAM+N,EAAO1N,EAAmBL,GAChC,MAAM4L,EAAiBF,EAAIE,eAC3B,IAAIjP,EAAQoR,EAAKlM,YACjB,IAAI/E,EAASiR,EAAKnM,aAClB,IAAIlF,EAAI,EACR,IAAIG,EAAI,EACR,GAAI+O,EAAgB,CAClBjP,EAAQiP,EAAejP,MACvBG,EAAS8O,EAAe9O,OACxB,MAAMkR,EAAiBzD,IACvB,GAAIyD,IAAmBA,GAAkBxQ,IAAa,QAAS,CAC7Dd,EAAIkP,EAAeC,WACnBhP,EAAI+O,EAAeE,SACzB,CACA,CACE,MAAO,CACLnP,QACAG,SACAJ,IACAG,IAEJ,CAIA,SAASoR,GAAgBjO,GACvB,IAAIkO,EACJ,MAAMH,EAAO1N,EAAmBL,GAChC,MAAMkN,EAASR,EAAc1M,GAC7B,MAAMmO,GAAQD,EAAwBlO,EAAQ0H,gBAAkB,UAAY,EAAIwG,EAAsBC,KACtG,MAAMxR,EAAQmE,EAAIiN,EAAKK,YAAaL,EAAKlM,YAAasM,EAAOA,EAAKC,YAAc,EAAGD,EAAOA,EAAKtM,YAAc,GAC7G,MAAM/E,EAASgE,EAAIiN,EAAKM,aAAcN,EAAKnM,aAAcuM,EAAOA,EAAKE,aAAe,EAAGF,EAAOA,EAAKvM,aAAe,GAClH,IAAIlF,GAAKwQ,EAAOP,WAAaI,EAAoB/M,GACjD,MAAMnD,GAAKqQ,EAAON,UAClB,GAAI/E,EAAmBsG,GAAQJ,GAAMrK,YAAc,MAAO,CACxDhH,GAAKoE,EAAIiN,EAAKlM,YAAasM,EAAOA,EAAKtM,YAAc,GAAKlF,CAC9D,CACE,MAAO,CACLA,QACAG,SACAJ,IACAG,IAEJ,CAEA,SAASyR,GAA2B9G,GAClC,MAAMgG,EAAaH,GAAc7F,GACjC,GAAIgD,EAAsBgD,GAAa,CAErC,OAAOhG,EAAKE,cAAcyG,IAC9B,CACE,GAAInF,EAAcwE,IAAejE,EAAkBiE,GAAa,CAC9D,OAAOA,CACX,CACE,OAAOc,GAA2Bd,EACpC,CAEA,SAASe,GAAqB/G,EAAM7D,GAClC,IAAI8D,EACJ,GAAI9D,SAAc,EAAG,CACnBA,EAAO,EACX,CACE,MAAM6K,EAAqBF,GAA2B9G,GACtD,MAAMiH,EAASD,MAAyB/G,EAAsBD,EAAKE,gBAAkB,UAAY,EAAID,EAAoB0G,MACzH,MAAMzC,EAAMnE,EAAUiH,GACtB,GAAIC,EAAQ,CACV,OAAO9K,EAAKE,OAAO6H,EAAKA,EAAIE,gBAAkB,GAAIrC,EAAkBiF,GAAsBA,EAAqB,GACnH,CACE,OAAO7K,EAAKE,OAAO2K,EAAoBD,GAAqBC,GAC9D,CAGA,SAASE,GAA2B1O,EAASxC,GAC3C,MAAMgO,EAAazF,EAAsB/F,EAAS,KAAMxC,IAAa,SACrE,MAAMuB,EAAMyM,EAAWzM,IAAMiB,EAAQsM,UACrC,MAAMpN,EAAOsM,EAAWtM,KAAOc,EAAQoM,WACvC,MAAMX,EAAQzC,EAAchJ,GAAWS,EAAST,GAAW,CACzDtD,EAAG,EACHG,EAAG,GAEL,MAAMF,EAAQqD,EAAQ6B,YAAc4J,EAAM/O,EAC1C,MAAMI,EAASkD,EAAQ4B,aAAe6J,EAAM5O,EAC5C,MAAMH,EAAIwC,EAAOuM,EAAM/O,EACvB,MAAMG,EAAIkC,EAAM0M,EAAM5O,EACtB,MAAO,CACLkC,IAAKlC,EACLqC,KAAMxC,EACNsC,MAAOtC,EAAIC,EACXsC,OAAQpC,EAAIC,EACZJ,IACAG,IACAF,QACAG,SAEJ,CACA,SAAS6R,GAAkC3O,EAAS4O,EAAkBpR,GACpE,GAAIoR,IAAqB,WAAY,CACnC,OAAOxP,EAAiB0O,GAAgB9N,EAASxC,GACrD,CACE,GAAI2C,EAAUyO,GAAmB,CAC/B,OAAOF,GAA2BE,EAAkBpR,EACxD,CACE,OAAO4B,EAAiB6O,GAAgB5N,EAAmBL,IAC7D,CAKA,SAAS6O,GAA4B7O,EAAS8O,GAC5C,MAAMC,EAAeD,EAAME,IAAIhP,GAC/B,GAAI+O,EAAc,CAChB,OAAOA,CACX,CACE,IAAIzB,EAASiB,GAAqBvO,GAASpC,QAAOqR,GAAM9O,EAAU8O,IAAOlH,EAAYkH,KAAQ,SAC7F,IAAIC,EAAsC,KAC1C,MAAMC,EAAiBtH,EAAmB7H,GAAS2N,WAAa,QAChE,IAAIE,EAAcsB,EAAiB9B,GAAcrN,GAAWA,EAG5D,MAAOG,EAAU0N,KAAiBrD,EAAsBqD,GAAc,CACpE,MAAMuB,EAAgBvH,EAAmBgG,GACzC,MAAMwB,EAAkBxF,EAAkBgE,GAC1C,MAAMyB,EAAwBH,GAAkBE,IAAoBH,GAAuCG,GAAmBD,EAAczB,WAAa,YAAcuB,GAAuC,CAAC,WAAY,SAAS/S,SAAS+S,EAAoCvB,UACjR,GAAI2B,EAAuB,CAEzBhC,EAASA,EAAO1P,QAAO2R,GAAYA,IAAa1B,GACtD,KAAW,CAELqB,EAAsCE,CAC5C,CACIvB,EAAcR,GAAcQ,EAChC,CACEiB,EAAMU,IAAIxP,EAASsN,GACnB,OAAOA,CACT,CAIA,SAASpN,GAAgB7D,GACvB,IAAI2D,QACFA,EAAON,SACPA,EAAQC,aACRA,EAAYnC,SACZA,GACEnB,EACJ,MAAMoT,EAA2B/P,IAAa,oBAAsBmP,GAA4B7O,EAAS0P,KAAKC,IAAM,GAAG9L,OAAOnE,GAC9H,MAAMkQ,EAAoB,IAAIH,EAA0B9P,GACxD,MAAMkQ,EAAwBD,EAAkB,GAChD,MAAME,EAAeF,EAAkBtK,QAAO,CAACyK,EAASnB,KACtD,MAAMvP,EAAOsP,GAAkC3O,EAAS4O,EAAkBpR,GAC1EuS,EAAQhR,IAAM+B,EAAIzB,EAAKN,IAAKgR,EAAQhR,KACpCgR,EAAQ/Q,MAAQ4B,EAAIvB,EAAKL,MAAO+Q,EAAQ/Q,OACxC+Q,EAAQ9Q,OAAS2B,EAAIvB,EAAKJ,OAAQ8Q,EAAQ9Q,QAC1C8Q,EAAQ7Q,KAAO4B,EAAIzB,EAAKH,KAAM6Q,EAAQ7Q,MACtC,OAAO6Q,CAAO,GACbpB,GAAkC3O,EAAS6P,EAAuBrS,IACrE,MAAO,CACLb,MAAOmT,EAAa9Q,MAAQ8Q,EAAa5Q,KACzCpC,OAAQgT,EAAa7Q,OAAS6Q,EAAa/Q,IAC3CrC,EAAGoT,EAAa5Q,KAChBrC,EAAGiT,EAAa/Q,IAEpB,CAEA,MAAMrB,GAAW,CACfwC,mBACAS,yDACAR,YACAkB,iBACAd,mBACAF,qBACAI,WACA,qBAAMzC,CAAgB3B,GACpB,IAAIE,UACFA,EAASC,SACTA,EAAQgB,SACRA,GACEnB,EACJ,MAAM2T,EAAoBN,KAAKnP,iBAAmBA,GAClD,MAAM0P,EAAkBP,KAAKrO,cAC7B,MAAO,CACL9E,UAAWyQ,EAA8BzQ,QAAiByT,EAAkBxT,GAAWgB,GACvFhB,SAAU,CACRE,EAAG,EACHG,EAAG,WACOoT,EAAgBzT,IAGlC,EACEsJ,eAAgB9F,GAAWwI,MAAM0H,KAAKlQ,EAAQ8F,kBAC9ChI,MAAOkC,GAAW6H,EAAmB7H,GAAS0D,YAAc,OAO9D,SAASyM,GAAW5T,EAAWC,EAAU4T,EAAQ5Q,GAC/C,GAAIA,SAAiB,EAAG,CACtBA,EAAU,EACd,CACE,MACE6Q,eAAgBC,EAAkB,KAAIC,eACtCA,EAAiB,KAAIC,cACrBA,EAAgB,KAAIC,eACpBA,EAAiB,OACfjR,EACJ,MAAM6Q,EAAiBC,IAAoBG,EAC3C,MAAMC,EAAYL,GAAkBE,EAAiB,IAAKpQ,EAAU5D,GAAagS,GAAqBhS,GAAaA,EAAU6D,eAAiBmO,GAAqBhS,EAAU6D,gBAAkB,MAAQmO,GAAqB/R,IAAa,GACzOkU,EAAUC,SAAQpB,IAChBc,GAAkBd,EAASqB,iBAAiB,SAAUR,EAAQ,CAC5DS,QAAS,OAEXN,GAAkBhB,EAASqB,iBAAiB,SAAUR,EAAO,IAE/D,IAAIU,EAAW,KACf,GAAIN,EAAe,CACjB,IAAIO,EAAgB,KACpBD,EAAW,IAAIE,gBAAe,KAC5B,IAAKD,EAAe,CAClBX,GACR,CACMW,EAAgB,KAAK,IAEvB5Q,EAAU5D,KAAekU,GAAkBK,EAASG,QAAQ1U,GAC5D,IAAK4D,EAAU5D,IAAcA,EAAU6D,iBAAmBqQ,EAAgB,CACxEK,EAASG,QAAQ1U,EAAU6D,eACjC,CACI0Q,EAASG,QAAQzU,EACrB,CACE,IAAI0U,EACJ,IAAIC,EAAcV,EAAiB1K,EAAsBxJ,GAAa,KACtE,GAAIkU,EAAgB,CAClBW,GACJ,CACE,SAASA,IACP,MAAMC,EAActL,EAAsBxJ,GAC1C,GAAI4U,IAAgBE,EAAY3U,IAAMyU,EAAYzU,GAAK2U,EAAYxU,IAAMsU,EAAYtU,GAAKwU,EAAY1U,QAAUwU,EAAYxU,OAAS0U,EAAYvU,SAAWqU,EAAYrU,QAAS,CAC/KsT,GACN,CACIe,EAAcE,EACdH,EAAUI,sBAAsBF,EACpC,CACEhB,IACA,MAAO,KACL,IAAImB,EACJb,EAAUC,SAAQpB,IAChBc,GAAkBd,EAASiC,oBAAoB,SAAUpB,GACzDG,GAAkBhB,EAASiC,oBAAoB,SAAUpB,EAAO,KAEjEmB,EAAYT,IAAa,UAAY,EAAIS,EAAUE,aACpDX,EAAW,KACX,GAAIL,EAAgB,CAClBiB,qBAAqBR,EAC3B,EAEA,CAOK,MAAC7T,GAAkB,CAACd,EAAWC,EAAUgD,KAI5C,MAAMsP,EAAQ,IAAI6C,IAClB,MAAMC,EAAgB,CACpBlU,eACG8B,GAEL,MAAMqS,EAAoB,IACrBD,EAAclU,SACjBiS,GAAIb,GAEN,OAAOgD,EAAkBvV,EAAWC,EAAU,IACzCoV,EACHlU,SAAUmU,GACV,S"}