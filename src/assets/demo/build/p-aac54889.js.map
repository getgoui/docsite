{"version":3,"names":["markdownItForInline","for_inline_plugin","md","ruleName","tokenType","iteartor","scan","state","i","blkIdx","inlineTokens","tokens","length","type","children","core","ruler","push","markdownItContainer","container_plugin","name","options","validateDefault","params","trim","split","renderDefault","idx","_options","env","slf","nesting","attrJoin","renderToken","min_markers","marker_str","marker","marker_char","charCodeAt","marker_len","validate","render","container","startLine","endLine","silent","pos","nextLine","marker_count","markup","token","old_parent","old_line_max","auto_closed","start","bMarks","tShift","max","eMarks","src","Math","floor","slice","sCount","blkIndent","skipSpaces","parentType","lineMax","block","info","map","tokenize","line","before","alt","renderer","rules","goUiPlugin","bannerOptions","forEach","use","mdContainer","regex","RegExp","m","match","headingAttr","iterator","tag"],"sources":["../../node_modules/.pnpm/markdown-it-for-inline@0.1.1/node_modules/markdown-it-for-inline/index.js","../../node_modules/.pnpm/markdown-it-container@3.0.0/node_modules/markdown-it-container/index.js","src/utils/go-ui-md-plugin.ts"],"sourcesContent":["'use strict';\n\n\nmodule.exports = function for_inline_plugin(md, ruleName, tokenType, iteartor) {\n\n  function scan(state) {\n    var i, blkIdx, inlineTokens;\n\n    for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n      if (state.tokens[blkIdx].type !== 'inline') {\n        continue;\n      }\n\n      inlineTokens = state.tokens[blkIdx].children;\n\n      for (i = inlineTokens.length - 1; i >= 0; i--) {\n        if (inlineTokens[i].type !== tokenType) {\n          continue;\n        }\n\n        iteartor(inlineTokens, i);\n      }\n    }\n  }\n\n  md.core.ruler.push(ruleName, scan);\n};\n","// Process block-level custom containers\n//\n'use strict';\n\n\nmodule.exports = function container_plugin(md, name, options) {\n\n  // Second param may be useful if you decide\n  // to increase minimal allowed marker length\n  function validateDefault(params/*, markup*/) {\n    return params.trim().split(' ', 2)[0] === name;\n  }\n\n  function renderDefault(tokens, idx, _options, env, slf) {\n\n    // add a class to the opening tag\n    if (tokens[idx].nesting === 1) {\n      tokens[idx].attrJoin('class', name);\n    }\n\n    return slf.renderToken(tokens, idx, _options, env, slf);\n  }\n\n  options = options || {};\n\n  var min_markers = 3,\n      marker_str  = options.marker || ':',\n      marker_char = marker_str.charCodeAt(0),\n      marker_len  = marker_str.length,\n      validate    = options.validate || validateDefault,\n      render      = options.render || renderDefault;\n\n  function container(state, startLine, endLine, silent) {\n    var pos, nextLine, marker_count, markup, params, token,\n        old_parent, old_line_max,\n        auto_closed = false,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // Check out the first character quickly,\n    // this should filter out most of non-containers\n    //\n    if (marker_char !== state.src.charCodeAt(start)) { return false; }\n\n    // Check out the rest of the marker string\n    //\n    for (pos = start + 1; pos <= max; pos++) {\n      if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n        break;\n      }\n    }\n\n    marker_count = Math.floor((pos - start) / marker_len);\n    if (marker_count < min_markers) { return false; }\n    pos -= (pos - start) % marker_len;\n\n    markup = state.src.slice(start, pos);\n    params = state.src.slice(pos, max);\n    if (!validate(params, markup)) { return false; }\n\n    // Since start is found, we can report success here in validation mode\n    //\n    if (silent) { return true; }\n\n    // Search for the end of the block\n    //\n    nextLine = startLine;\n\n    for (;;) {\n      nextLine++;\n      if (nextLine >= endLine) {\n        // unclosed block should be autoclosed by end of document.\n        // also block seems to be autoclosed by end of parent\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (start < max && state.sCount[nextLine] < state.blkIndent) {\n        // non-empty line with negative indent should stop the list:\n        // - ```\n        //  test\n        break;\n      }\n\n      if (marker_char !== state.src.charCodeAt(start)) { continue; }\n\n      if (state.sCount[nextLine] - state.blkIndent >= 4) {\n        // closing fence should be indented less than 4 spaces\n        continue;\n      }\n\n      for (pos = start + 1; pos <= max; pos++) {\n        if (marker_str[(pos - start) % marker_len] !== state.src[pos]) {\n          break;\n        }\n      }\n\n      // closing code fence must be at least as long as the opening one\n      if (Math.floor((pos - start) / marker_len) < marker_count) { continue; }\n\n      // make sure tail has spaces only\n      pos -= (pos - start) % marker_len;\n      pos = state.skipSpaces(pos);\n\n      if (pos < max) { continue; }\n\n      // found!\n      auto_closed = true;\n      break;\n    }\n\n    old_parent = state.parentType;\n    old_line_max = state.lineMax;\n    state.parentType = 'container';\n\n    // this will prevent lazy continuations from ever going past our end marker\n    state.lineMax = nextLine;\n\n    token        = state.push('container_' + name + '_open', 'div', 1);\n    token.markup = markup;\n    token.block  = true;\n    token.info   = params;\n    token.map    = [ startLine, nextLine ];\n\n    state.md.block.tokenize(state, startLine + 1, nextLine);\n\n    token        = state.push('container_' + name + '_close', 'div', -1);\n    token.markup = state.src.slice(start, pos);\n    token.block  = true;\n\n    state.parentType = old_parent;\n    state.lineMax = old_line_max;\n    state.line = nextLine + (auto_closed ? 1 : 0);\n\n    return true;\n  }\n\n  md.block.ruler.before('fence', 'container_' + name, container, {\n    alt: [ 'paragraph', 'reference', 'blockquote', 'list' ]\n  });\n  md.renderer.rules['container_' + name + '_open'] = render;\n  md.renderer.rules['container_' + name + '_close'] = render;\n};\n","import type MarkdownIt from \"markdown-it\";\r\nimport iterator from 'markdown-it-for-inline';\r\nimport mdContainer from 'markdown-it-container';\r\n\r\n// add go-ui markdown renderer\r\nexport function goUiPlugin(md: MarkdownIt):void {\r\n  // banner\r\n  const bannerOptions = ['info', 'critical', 'success'];\r\n  bannerOptions.forEach((type) => {\r\n    md.use(mdContainer, type, {\r\n      render: function (tokens, idx) {\r\n        const regex = new RegExp(`^${type}\\\\s+(.*)$`, '');\r\n        var m = tokens[idx].info.trim().match(regex);\r\n        if (tokens[idx].nesting === 1) {\r\n          // opening tag\r\n          const headingAttr = m && m[1] ? ` heading=\"${m[1]}\"` : ``;\r\n          return `<go-banner variant=\"${type}\" ${headingAttr}>\\n`;\r\n        } else {\r\n          // closing tag\r\n          return '</go-banner>\\n';\r\n        }\r\n      },\r\n    });\r\n  });\r\n  // links\r\n  md.use(iterator, 'go-link', 'link_open', function (tokens, idx) {\r\n    // Make sure link contains only text\r\n    if (tokens[idx + 2].type !== 'link_close' || tokens[idx + 1].type !== 'text') {\r\n      return;\r\n    }\r\n    // Do replacement\r\n    tokens[idx].tag = 'go-link';\r\n    tokens[idx + 2].tag = 'go-link';\r\n  });\r\n}\r\n"],"mappings":"AAGA,IAAAA,EAAiB,SAASC,EAAkBC,EAAIC,EAAUC,EAAWC,GAEnE,SAASC,EAAKC,GACZ,IAAIC,EAAGC,EAAQC,EAEf,IAAKD,EAASF,EAAMI,OAAOC,OAAS,EAAGH,GAAU,EAAGA,IAAU,CAC5D,GAAIF,EAAMI,OAAOF,GAAQI,OAAS,SAAU,CAC1C,QACR,CAEMH,EAAeH,EAAMI,OAAOF,GAAQK,SAEpC,IAAKN,EAAIE,EAAaE,OAAS,EAAGJ,GAAK,EAAGA,IAAK,CAC7C,GAAIE,EAAaF,GAAGK,OAAST,EAAW,CACtC,QACV,CAEQC,EAASK,EAAcF,EAC/B,CACA,CACA,CAEEN,EAAGa,KAAKC,MAAMC,KAAKd,EAAUG,EAC/B,ECrBA,IAAAY,EAAiB,SAASC,EAAiBjB,EAAIkB,EAAMC,GAInD,SAASC,EAAgBC,GACvB,OAAOA,EAAOC,OAAOC,MAAM,IAAK,GAAG,KAAOL,CAC9C,CAEE,SAASM,EAAcf,EAAQgB,EAAKC,EAAUC,EAAKC,GAGjD,GAAInB,EAAOgB,GAAKI,UAAY,EAAG,CAC7BpB,EAAOgB,GAAKK,SAAS,QAASZ,EACpC,CAEI,OAAOU,EAAIG,YAAYtB,EAAQgB,EAAKC,EAAUC,EAAKC,EACvD,CAEET,EAAUA,GAAW,GAErB,IAAIa,EAAc,EACdC,EAAcd,EAAQe,QAAU,IAChCC,EAAcF,EAAWG,WAAW,GACpCC,EAAcJ,EAAWvB,OACzB4B,EAAcnB,EAAQmB,UAAYlB,EAClCmB,EAAcpB,EAAQoB,QAAUf,EAEpC,SAASgB,EAAUnC,EAAOoC,EAAWC,EAASC,GAC5C,IAAIC,EAAKC,EAAUC,EAAcC,EAAQ1B,EAAQ2B,EAC7CC,EAAYC,EACZC,EAAc,MACdC,EAAQ/C,EAAMgD,OAAOZ,GAAapC,EAAMiD,OAAOb,GAC/Cc,EAAMlD,EAAMmD,OAAOf,GAKvB,GAAIN,IAAgB9B,EAAMoD,IAAIrB,WAAWgB,GAAQ,CAAE,OAAO,KAAM,CAIhE,IAAKR,EAAMQ,EAAQ,EAAGR,GAAOW,EAAKX,IAAO,CACvC,GAAIX,GAAYW,EAAMQ,GAASf,KAAgBhC,EAAMoD,IAAIb,GAAM,CAC7D,KACR,CACA,CAEIE,EAAeY,KAAKC,OAAOf,EAAMQ,GAASf,GAC1C,GAAIS,EAAed,EAAa,CAAE,OAAO,KAAM,CAC/CY,IAAQA,EAAMQ,GAASf,EAEvBU,EAAS1C,EAAMoD,IAAIG,MAAMR,EAAOR,GAChCvB,EAAShB,EAAMoD,IAAIG,MAAMhB,EAAKW,GAC9B,IAAKjB,EAASjB,EAAQ0B,GAAS,CAAE,OAAO,KAAM,CAI9C,GAAIJ,EAAQ,CAAE,OAAO,IAAK,CAI1BE,EAAWJ,EAEX,OAAS,CACPI,IACA,GAAIA,GAAYH,EAAS,CAGvB,KACR,CAEMU,EAAQ/C,EAAMgD,OAAOR,GAAYxC,EAAMiD,OAAOT,GAC9CU,EAAMlD,EAAMmD,OAAOX,GAEnB,GAAIO,EAAQG,GAAOlD,EAAMwD,OAAOhB,GAAYxC,EAAMyD,UAAW,CAI3D,KACR,CAEM,GAAI3B,IAAgB9B,EAAMoD,IAAIrB,WAAWgB,GAAQ,CAAE,QAAS,CAE5D,GAAI/C,EAAMwD,OAAOhB,GAAYxC,EAAMyD,WAAa,EAAG,CAEjD,QACR,CAEM,IAAKlB,EAAMQ,EAAQ,EAAGR,GAAOW,EAAKX,IAAO,CACvC,GAAIX,GAAYW,EAAMQ,GAASf,KAAgBhC,EAAMoD,IAAIb,GAAM,CAC7D,KACV,CACA,CAGM,GAAIc,KAAKC,OAAOf,EAAMQ,GAASf,GAAcS,EAAc,CAAE,QAAS,CAGtEF,IAAQA,EAAMQ,GAASf,EACvBO,EAAMvC,EAAM0D,WAAWnB,GAEvB,GAAIA,EAAMW,EAAK,CAAE,QAAS,CAG1BJ,EAAc,KACd,KACN,CAEIF,EAAa5C,EAAM2D,WACnBd,EAAe7C,EAAM4D,QACrB5D,EAAM2D,WAAa,YAGnB3D,EAAM4D,QAAUpB,EAEhBG,EAAe3C,EAAMU,KAAK,aAAeG,EAAO,QAAS,MAAO,GAChE8B,EAAMD,OAASA,EACfC,EAAMkB,MAAS,KACflB,EAAMmB,KAAS9C,EACf2B,EAAMoB,IAAS,CAAE3B,EAAWI,GAE5BxC,EAAML,GAAGkE,MAAMG,SAAShE,EAAOoC,EAAY,EAAGI,GAE9CG,EAAe3C,EAAMU,KAAK,aAAeG,EAAO,SAAU,OAAQ,GAClE8B,EAAMD,OAAS1C,EAAMoD,IAAIG,MAAMR,EAAOR,GACtCI,EAAMkB,MAAS,KAEf7D,EAAM2D,WAAaf,EACnB5C,EAAM4D,QAAUf,EAChB7C,EAAMiE,KAAOzB,GAAYM,EAAc,EAAI,GAE3C,OAAO,IACX,CAEEnD,EAAGkE,MAAMpD,MAAMyD,OAAO,QAAS,aAAerD,EAAMsB,EAAW,CAC7DgC,IAAK,CAAE,YAAa,YAAa,aAAc,UAEjDxE,EAAGyE,SAASC,MAAM,aAAexD,EAAO,SAAWqB,EACnDvC,EAAGyE,SAASC,MAAM,aAAexD,EAAO,UAAYqB,CACtD,E,SC3IgBoC,EAAW3E,GAEzB,MAAM4E,EAAgB,CAAC,OAAQ,WAAY,WAC3CA,EAAcC,SAASlE,IACrBX,EAAG8E,IAAIC,EAAapE,EAAM,CACxB4B,OAAQ,SAAU9B,EAAQgB,GACxB,MAAMuD,EAAQ,IAAIC,OAAO,IAAItE,aAAiB,IAC9C,IAAIuE,EAAIzE,EAAOgB,GAAK0C,KAAK7C,OAAO6D,MAAMH,GACtC,GAAIvE,EAAOgB,GAAKI,UAAY,EAAG,CAE7B,MAAMuD,EAAcF,GAAKA,EAAE,GAAK,aAAaA,EAAE,MAAQ,GACvD,MAAO,uBAAuBvE,MAASyE,M,KAClC,CAEL,MAAO,gB,IAGX,IAGJpF,EAAG8E,IAAIO,EAAU,UAAW,aAAa,SAAU5E,EAAQgB,GAEzD,GAAIhB,EAAOgB,EAAM,GAAGd,OAAS,cAAgBF,EAAOgB,EAAM,GAAGd,OAAS,OAAQ,CAC5E,M,CAGFF,EAAOgB,GAAK6D,IAAM,UAClB7E,EAAOgB,EAAM,GAAG6D,IAAM,S,GAE1B,Q"}