import{r as t,h as i,H as o,g as s}from"./p-797021b3.js";import{a as e,c as r,o as a,f as l,s as n,b as h,i as p}from"./p-19ba150b.js";import{d as c}from"./p-a96db818.js";import{u as d}from"./p-fa247fce.js";const m="go-tooltip{--tooltip-bg-color:var(--go-color-primary-800);--tooltip-fg-color:var(--go-color-lightest);--tooltip-padding:0.5rem;--tooltip-radius:var(--radius-2);transition:opacity var(--go-duration-normal) var(--go-timing-function), visibility var(--go-duration-normal) var(--go-timing-function);position:fixed;display:block;visibility:hidden;opacity:0;background-color:var(--tooltip-bg-color);color:var(--tooltip-fg-color);padding:var(--tooltip-padding);border-radius:var(--tooltip-radius);box-shadow:var(--shadow-1);pointer-events:none;font-size:var(--go-size-0);z-index:var(--layer-important)}@media (prefers-reduced-motion: reduce){go-tooltip{transition-duration:0s}}go-tooltip.is-active{visibility:visible;opacity:1;pointer-events:inherit}go-tooltip .tooltip-tail{position:absolute;background:var(--tooltip-bg-color);width:0.375rem;height:0.375rem;transform:rotate(45deg)}";const f=class{constructor(i){t(this,i);this.debouncedDetermineMouseOut=c(this.determineMouseOut,150);this.triggerId=undefined;this.arrow=false;this.inline=false;this.placement="top";this.isActive=false}componentWillLoad(){if(!this.el.id){this.el.id=d("go-tooltip-")}this.triggerEl=document.querySelector(`#${this.triggerId}`)}componentDidLoad(){if(!this.triggerEl){return}this.triggerEl.setAttribute("aria-describedby",this.el.id);this.triggerEl.addEventListener("mouseenter",(()=>this.show()));document.addEventListener("mousemove",(t=>this.debouncedDetermineMouseOut(t)));this.triggerEl.addEventListener("focusin",(()=>this.show()));this.triggerEl.addEventListener("focusout",(()=>this.hide()));this.arrowEl=this.el.querySelector(".tooltip-tail");this.initialiseTooltip(this.triggerEl,this.el,this.arrowEl);this.cleanUpAutoUpdate=e(this.triggerEl,this.el,c((()=>this.initialiseTooltip(this.triggerEl,this.el,this.arrowEl)),300),{animationFrame:true});document.addEventListener("keydown",(t=>{if(t.key==="Escape"){this.hide()}}))}initialiseTooltip(t,i,o){let s=[a(8),l(),n()];if(this.arrow){s.push(h({element:o}))}if(this.inline){s.push(p())}r(t,i,{strategy:"fixed",placement:this.placement,middleware:s}).then((({x:t,y:i,placement:s,middlewareData:e})=>{Object.assign(this.el.style,{left:`${t}px`,top:`${i}px`});if(this.arrow){const{x:t,y:i}=e.arrow;const r={top:"bottom",right:"left",bottom:"top",left:"right"}[s.split("-")[0]];Object.assign(o.style,{left:t!=null?`${t}px`:"",top:i!=null?`${i}px`:"",right:"",bottom:"",[r]:"-3px"})}}))}async show(){this.isActive=true}async hide(){this.isActive=false}determineMouseOut(t){if(!this.isActive){return}const{x:i,y:o}=t;const{left:s,top:e,right:r,bottom:a}=this.el.getBoundingClientRect();const{left:l,top:n,right:h,bottom:p}=this.triggerEl.getBoundingClientRect();const c=i<s||i>r||o<e||o>a;const d=i<l||i>h||o<n||o>p;if(c&&d){this.hide()}}disconnectedCallback(){this.cleanUpAutoUpdate&&this.cleanUpAutoUpdate()}render(){const{isActive:t,arrow:s}=this;return i(o,{role:"tooltip",class:{"is-active":t},"aria-hidden":t?"false":"true"},i("slot",null),s?i("div",{class:"tooltip-tail"}):null)}get el(){return s(this)}};f.style=m;export{f as go_tooltip};
//# sourceMappingURL=p-98e6348c.entry.js.map