{"version":3,"names":["goMainNavCss","GoMainNav","this","inheritedAttrs","componentWillLoad","inheritAttributes","el","navItems","parseItems","items","onClickOutside","closeAllSubMenus","addEventListener","e","code","init","newItems","watchItems","querySelectorAll","forEach","item","closeSubMenu","toggleSubMenu","triggerBtn","currentTarget","menuItem","closest","classList","contains","add","setAttribute","querySelector","remove","renderNavLink","isSubmenuParentLink","Tag","isCurrent","attrs","url","href","onClick","event","navEvent","emit","linkAttrs","class","h","Object","assign","renderIcon","icon","label","xmlns","fill","stroke","viewBox","d","renderSubMenu","parent","_a","children","length","block","description","map","child","renderRootNavItem","hasChildren","console","log","type","current","name","showArrow","renderRootNav","render","Host"],"sources":["src/components/navigation/go-main-nav/go-main-nav.scss?tag=go-main-nav","src/components/navigation/go-main-nav/go-main-nav.tsx"],"sourcesContent":["go-main-nav {\r\n  /**\r\n    @prop --nav-border-top:\r\n      top border\r\n      - default: 1px solid var(--go-color-neutral-200)\r\n  */\r\n  --nav-border-top: 1px solid var(--go-color-neutral-200);\r\n  /**\r\n    @prop --nav-border-bottom:\r\n      bottom border\r\n      - default: 1px solid var(--go-color-neutral-200)\r\n  */\r\n  --nav-border-bottom: 1px solid var(--go-color-neutral-200);\r\n  --nav-bg-color: transparent;\r\n  --nav-shadow: var(--shadow-2);\r\n  --nav-item-text-color: var(--go-color-darkest);\r\n  --nav-item-bg-color: var(--nav-bg-color);\r\n  --nav-item-hover-bg-color: var(--go-color-neutral-200);\r\n  --nav-item-active-bg-color: var(--go-color-primary-100);\r\n  --nav-item-current-bg-color: var(--nav-item-bg-color);\r\n  --nav-item-padding: var(--go-size--1) var(--go-size-0);\r\n  --nav-item-icon-gap: 0.5rem;\r\n  --nav-item-current-bar-width: 4px;\r\n  --nav-item-current-bar-color: var(--go-color-secondary-700);\r\n  --submenu-bg-color: var(--nav-item-active-bg-color);\r\n  --submenu-border-radius: var(--radius-2);\r\n\r\n  @include theme-dark() {\r\n    --submenu-bg-color: var(--go-color-neutral-500);\r\n  }\r\n  --submenu-padding-y: var(--go-size-0);\r\n  --submenu-padding-x: var(--go-size-1);\r\n  --submenu-link-padding: 8px;\r\n  --submenu-link-hover-bg-color: var(--go-color-neutral-200);\r\n  /**\r\n    @prop --submenu-description-color:\r\n      text color for submenu description text\r\n      - default: var(--go-color-neutral-700)\r\n  */\r\n  --submenu-description-color: var(--go-color-neutral-700);\r\n\r\n  /**\r\n    @prop --submenu-separator-color:\r\n      border color separator between submenu header and list\r\n      - default: var(--go-color-neutral-200)\r\n  */\r\n  --submenu-separator-color: var(--go-color-neutral-200);\r\n\r\n  /**\r\n    @prop --submenu-indent:\r\n      submenu indent\r\n      - default: 0.5rem\r\n  */\r\n  --submenu-indent: 0.5rem;\r\n\r\n\r\n  /**\r\n    @prop --submenu-tail-size:\r\n      submenu tail size\r\n      - default: 1rem\r\n  */\r\n  --submenu-tail-size: 1rem;\r\n\r\n  display: block;\r\n  box-shadow: var(--nav-shadow);\r\n  border-top: var(--nav-border-top);\r\n  ul {\r\n    list-style: none;\r\n  }\r\n  > nav {\r\n    background: var(--nav-bg-color);\r\n    .nav-menu-root {\r\n      margin: 0;\r\n      padding: 0;\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: stretch;\r\n      flex-wrap: nowrap;\r\n      position: relative;\r\n    }\r\n    .nav-item {\r\n      .nav-item-inner {\r\n        @include reset-btn;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        padding: var(--nav-item-padding);\r\n        color: var(--nav-item-text-color);\r\n        text-decoration: none;\r\n        background: var(--nav-item-bg-color);\r\n        border-bottom: var(--nav-item-current-bar-width) solid transparent;\r\n        @include transition(background);\r\n        &:hover,\r\n        &:focus {\r\n          border-radius: var(--radius-2);\r\n          background: var(--nav-item-hover-bg-color);\r\n        }\r\n\r\n        svg {\r\n          @include transition(transform);\r\n\r\n          margin-left: 0.5rem;\r\n          width: 1.25em;\r\n          height: 1.25em;\r\n          transform: translateX(0);\r\n        }\r\n\r\n        .nav-item-label {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: var(--nav-item-icon-gap);\r\n        }\r\n      }\r\n\r\n      &.current {\r\n        .nav-item-inner {\r\n          --nav-item-bg-color: var(--nav-item-current-bg-color);\r\n\r\n          border-bottom-color: var(--nav-item-current-bar-color);\r\n        }\r\n      }\r\n\r\n      .parent-link {\r\n        svg {\r\n          width: 40px;\r\n        }\r\n      }\r\n\r\n      // new structure\r\n      .submenu-container {\r\n\r\n        @include transition(opacity, visibility);\r\n\r\n        visibility: hidden;\r\n        opacity: 0;\r\n        position: absolute;\r\n        top: calc(100% + var(--submenu-tail-size));\r\n        max-width: 100%;\r\n        z-index: 1;\r\n        box-shadow: var(--nav-shadow);\r\n        padding: var(--submenu-padding-y) var(--submenu-padding-x);\r\n        background: var(--submenu-bg-color);\r\n        border-radius: var(--submenu-border-radius);\r\n\r\n        &::before {\r\n          content: '';\r\n          width: var(--submenu-tail-size);\r\n          height: var(--submenu-tail-size);\r\n          background: var(--submenu-bg-color);\r\n          position: absolute;\r\n          top: 0;\r\n          left: calc(var(--submenu-tail-size) + 5px);\r\n          transform: translate(-50%, -50%) rotate(45deg);\r\n        }\r\n\r\n        .submenu-header {\r\n          padding: 0.5rem 0;\r\n          margin-bottom: 0;\r\n          border-bottom: 1px solid var(--submenu-separator-color);\r\n          svg {\r\n            width: 1.5em;\r\n            height: 1.5em;\r\n          }\r\n          h5 {\r\n            display: flex;\r\n            align-items: center;\r\n            gap: 0.5em;\r\n          }\r\n          .description {\r\n            margin: 0;\r\n            padding: 0.5rem;\r\n            color: var(--submenu-description-color);\r\n          }\r\n        }\r\n        .submenu-list {\r\n          display: flex;\r\n          flex-direction: column;\r\n          flex-wrap: wrap;\r\n          gap: 0.75rem;\r\n        }\r\n      }\r\n      &.active {\r\n        background: var(--nav-item-active-bg-color);\r\n        .nav-item-inner {\r\n          svg {\r\n            transform: rotate(180deg);\r\n          }\r\n        }\r\n        .submenu-container {\r\n          visibility: visible;\r\n          opacity: 1;\r\n          box-shadow: var(--shadow-2);\r\n        }\r\n      }\r\n    }\r\n\r\n    .submenu {\r\n      ul {\r\n        padding-left: 0;\r\n        a {\r\n          padding-left: calc(0.5rem + var(--submenu-indent));\r\n        }\r\n      }\r\n      go-nav-link {\r\n        display: block;\r\n      }\r\n    }\r\n  }\r\n\r\n  go-nav-link {\r\n    --nav-link-padding: var(--submenu-link-padding);\r\n    .nav-item-link .nav-link-text {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n}\r\n","import { Component, Element, h, Method, Prop, State, Host, EventEmitter, Event, Watch } from '@stencil/core';\r\nimport { INavItem } from '../../../interfaces';\r\nimport { onClickOutside } from '../../../utils/dom';\r\nimport { inheritAttributes } from '../../../utils/helper';\r\nimport { parseItems } from '../../../utils';\r\nimport { renderIcon } from '../nav-helpers';\r\n\r\n@Component({\r\n  tag: 'go-main-nav',\r\n  styleUrl: 'go-main-nav.scss',\r\n  shadow: false,\r\n})\r\nexport class GoMainNav {\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Navigation items to be rendered\r\n   * if provided, slot content will not be rendered.\r\n   */\r\n  @Prop() items?: INavItem[] | string;\r\n\r\n  @State() navItems: INavItem[] = null;\r\n\r\n  /**\r\n   * Label for the navigation.\r\n   * This helps screen reader users to quickly navigate to teh correct nav landmark\r\n   */\r\n  @Prop() label = 'Main';\r\n\r\n  // Store attributes inherited from the host element\r\n  private inheritedAttrs = {};\r\n  async componentWillLoad() {\r\n    this.inheritedAttrs = inheritAttributes(this.el, ['class', 'style', 'items', 'active', 'position']);\r\n    this.navItems = parseItems(this.items);\r\n    // click outside to close menus\r\n    onClickOutside(this.el, () => {\r\n      this.closeAllSubMenus();\r\n    });\r\n    // esc to close menus\r\n    this.el.addEventListener('keydown', (e) => {\r\n      if (e.code === 'Escape') {\r\n        this.closeAllSubMenus();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initialise the menu\r\n   * @param items {INavItem[]} menu items to be rendered\r\n   */\r\n  @Method()\r\n  async init(newItems: INavItem[] | string) {\r\n    this.navItems = parseItems(newItems);\r\n  }\r\n\r\n  @Watch('items')\r\n  async watchItems(newItems: INavItem[] | string) {\r\n    this.navItems = parseItems(newItems);\r\n  }\r\n\r\n  private closeAllSubMenus() {\r\n    this.el.querySelectorAll('.nav-menu-root > li.active').forEach((item) => {\r\n      this.closeSubMenu(item as HTMLElement);\r\n    });\r\n  }\r\n\r\n  private toggleSubMenu(e: MouseEvent) {\r\n    const triggerBtn = e.currentTarget as HTMLElement;\r\n    const menuItem = triggerBtn.closest('.nav-item.has-children') as HTMLElement;\r\n\r\n    if (menuItem.classList.contains('active')) {\r\n      this.closeSubMenu(menuItem);\r\n    } else {\r\n      // close any open menus\r\n      this.closeAllSubMenus();\r\n      menuItem.classList.add('active');\r\n      triggerBtn.setAttribute('aria-expanded', 'true');\r\n    }\r\n  }\r\n\r\n  private closeSubMenu(menuItem: HTMLElement) {\r\n    const triggerBtn = menuItem.querySelector('.nav-item-inner');\r\n    menuItem.classList.remove('active');\r\n    triggerBtn.setAttribute('aria-expanded', 'false');\r\n  }\r\n\r\n  @Event({\r\n    eventName: 'navigate',\r\n    cancelable: true,\r\n    bubbles: true,\r\n  })\r\n  navEvent: EventEmitter;\r\n\r\n  renderNavLink(item: INavItem, isSubmenuParentLink = false) {\r\n    let Tag = item.isCurrent ? 'span' : 'a';\r\n    let attrs = item?.url\r\n      ? {\r\n          href: item.url,\r\n          onClick: (event) => {\r\n            this.navEvent.emit({ event, item });\r\n          },\r\n          ...item.linkAttrs,\r\n        }\r\n      : {};\r\n\r\n    attrs.class = `${attrs.class ? attrs.class : ''} nav-item-link${item.isCurrent ? ' current' : ''}`;\r\n    return (\r\n      <Tag {...attrs}>\r\n        {renderIcon(item.icon)}\r\n        <span>{item.label}</span>\r\n        {isSubmenuParentLink ? (\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            stroke-width=\"2\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n            viewBox=\"0 0 24 24\">\r\n            <path d=\"M5 12h14M12 5l7 7-7 7\" />\r\n          </svg>\r\n        ) : null}\r\n      </Tag>\r\n    );\r\n  }\r\n\r\n  renderSubMenu(parent: INavItem) {\r\n    if (!parent) {\r\n      return;\r\n    }\r\n    // if submenu item has children, render the current item and its children\r\n    if (parent.children?.length > 0) {\r\n      return (\r\n        <div class=\"submenu\">\r\n          <div class=\"submenu-header\">\r\n            <go-nav-link block item={parent}></go-nav-link>\r\n            {parent.description ? <p class=\"description\">{parent.description}</p> : null}\r\n          </div>\r\n          <ul>\r\n            {parent.children.map((child) => (\r\n              <li>\r\n                <go-nav-link block item={child}></go-nav-link>\r\n                {child.description ? <p class=\"description\">{child.description}</p> : null}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div class=\"nav-item\">\r\n        <go-nav-link block item={parent}></go-nav-link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderRootNavItem(item: INavItem) {\r\n    let Tag = 'a';\r\n    const hasChildren = item?.children?.length > 0;\r\n    if (item.isCurrent) {\r\n      Tag = 'span';\r\n    }\r\n    if (hasChildren) {\r\n      Tag = 'button';\r\n    }\r\n\r\n    let attrs = null;\r\n\r\n    if (Tag === 'a') {\r\n      attrs = {\r\n        href: item.url,\r\n        onClick: (event) => {\r\n          console.log('clicked');\r\n          this.navEvent.emit({ event, item });\r\n        },\r\n        ...item.linkAttrs,\r\n      };\r\n    }\r\n    if (Tag === 'button') {\r\n      attrs = {\r\n        'type': 'button',\r\n        'aria-expanded': 'false',\r\n        'onClick': (e) => this.toggleSubMenu(e),\r\n      };\r\n    }\r\n    return (\r\n      <li class={{ 'nav-item': true, 'has-children': hasChildren, 'current': item.isCurrent }}>\r\n        <Tag class=\"nav-item-inner\" {...attrs}>\r\n          <span class=\"nav-item-label\">\r\n            {renderIcon(item.icon)}\r\n            <span>{item.label}</span>\r\n          </span>\r\n          {hasChildren ? (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              stroke-width=\"2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              viewBox=\"0 0 24 24\">\r\n              <path d=\"m6 9 6 6 6-6\" />\r\n            </svg>\r\n          ) : null}\r\n        </Tag>\r\n        {item.children ? (\r\n          <slot name=\"submenu\">\r\n            <div class=\"submenu-container\">\r\n              <div class=\"submenu-header\">\r\n                <go-nav-link block item={item} showArrow></go-nav-link>\r\n                {item?.description ? <p class=\"description\">{item.description}</p> : null}\r\n              </div>\r\n              <div class=\"submenu-list\">{item.children.map((child) => this.renderSubMenu(child))}</div>\r\n            </div>\r\n          </slot>\r\n        ) : null}\r\n      </li>\r\n    );\r\n  }\r\n  /**\r\n   * render top level nav items\r\n   */\r\n  renderRootNav(items: INavItem[]) {\r\n    return (\r\n      <div class={{ 'nav-menu': true }}>\r\n        <div class=\"container\">\r\n          <ul class=\"nav-menu-root\">{items.map((item) => this.renderRootNavItem(item))}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let { label, navItems, inheritedAttrs } = this;\r\n\r\n    return (\r\n      <Host {...inheritedAttrs}>\r\n        <nav aria-label={label}>{navItems ? this.renderRootNav(navItems) : <slot></slot>}</nav>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}