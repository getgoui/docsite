{"version":3,"names":["entities","require$$0","regex$4","encodeCache","getEncodeCache","exclude","i","ch","cache","String","fromCharCode","test","push","toString","toUpperCase","slice","length","charCodeAt","encode","string","keepEscaped","l","code","nextCode","result","defaultChars","encodeURIComponent","componentChars","encode_1","decodeCache","getDecodeCache","decode","replace","seq","b1","b2","b3","b4","chr","parseInt","decode_1","format$1","format","url","protocol","slashes","auth","hostname","indexOf","port","pathname","search","hash","Url","this","protocolPattern","portPattern","simplePathPattern","delims","unwise","concat","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","slashedProtocol","http","https","ftp","gopher","file","urlParse","slashesDenoteHost","u","parse","prototype","lowerProto","hec","rest","trim","split","simplePath","exec","proto","toLowerCase","substr","match","hostEnd","atSign","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","unshift","join","qm","parse$1","encode$1","decode$1","require$$1","require$$2","require$$3","regex$3","regex$2","regex$1","regex","Any","Cc","Cf","P","Z","require$$4","_class","obj","Object","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","name","unescapeMd","str","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","isPunctChar","UNICODE_PUNCT_RE","isMdAsciiPunct","normalizeReference","exports","lib","mdurl","ucmicro","parse_link_label","parseLinkLabel","state","start","disableNested","level","found","marker","prevPos","labelEnd","max","posMax","oldPos","md","inline","skipToken","parse_link_destination","parseLinkDestination","lines","ok","parse_link_title","parseLinkTitle","default_rules","code_inline","tokens","idx","options","env","slf","token","renderAttrs","content","code_block","fence","info","langName","langAttrs","highlighted","arr","tmpAttrs","tmpToken","highlight","attrIndex","attrs","langPrefix","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","text","html_block","html_inline","Renderer","rules","nextToken","needLf","hidden","block","nesting","tag","type","renderInline","len","render","renderer","Ruler","__rules__","__cache__","__find__","__compile__","self","chains","rule","enabled","alt","altName","chain","fn","at","index","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","ignoreInvalid","isArray","enableOnly","disable","getRules","chainName","ruler","NEWLINES_RE","NULL_RE","normalize","inlineMode","Token","map","tok","isLinkOpen","isLinkClose","linkify$1","linkify","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","blockTokens","links","pretest","normalizeLink","validateLink","schema","normalizeLinkText","markup","lastIndex","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","replacements","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","t","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","quotes","smartquotes","text_join","curr","last","meta","attrPush","attrData","attrSet","value","attrGet","attrJoin","StateCore","state_core","_rules","require$$5","require$$6","Core","process","State","require$$7","parser_core","getLine","line","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","table","startLine","endLine","silent","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","firstCh","secondCh","sCount","blkIndent","shift","pop","parentType","isEmpty","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","blockquote","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","lineMax","bsCount","tokenize","hr","cnt","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","tight","listIndent","Number","Math","min","reference","_endLine","destEndPos","destEndLineNo","href","label","res","title","helpers","references","html_blocks","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","HTML_TAG_RE_1","HTML_OPEN_CLOSE_TAG_RE_1","HTML_SEQUENCES","block_names","html","heading","tmp","skipSpacesBack","skipCharsBack","lheading","paragraph","StateBlock","s","indent_found","ddIndent","skipEmptyLines","from","begin","end","keepLastLF","lineIndent","first","queue","lineStart","state_block","require$$8","require$$9","require$$10","ParserBlock","hasEmptyLines","maxNesting","outTokens","require$$11","parser_block","isTerminatorChar","pending","SCHEME_RE","link","linkLevel","matchAtStart","newline","pmax","ws","ESCAPED","_escape","escape","ch1","ch2","origStr","escapedStr","backticks","backtick","matchStart","matchEnd","openerLength","closerLength","backticksScanned","tokenize$1","strikethrough","scanned","scanDelims","delimiters","open","can_open","close","can_close","postProcess","startDelim","endDelim","loneMarkers","postProcess_1$1","tokens_meta","emphasis","isStrong","postProcess_1","labelStart","ref","parseReference","EMAIL_RE","AUTOLINK_RE","autolink","isLetter","lc","DIGITAL_RE","NAMED_RE","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","balance_pairs","link_pairs","fragments_join","StateInline","pendingLevel","_prev_delimiters","pushPending","token_meta","canSplitWord","count","left_flanking","right_flanking","state_inline","_rules2","require$$12","require$$13","ParserInline","ruler2","require$$14","parser_inline","re","opts","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","isObject","isRegExp","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","defaultSchemas","validate","tail","no_http","mailto","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","compile","__opts__","tlds","__tlds__","onCompile","__tlds_replaced__","src_tlds","untpl","tpl","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","__compiled__","schemaError","val","__schemas__","compiled","alias","slist","filter","schema_test","schema_search","schema_at_start","Match","__last_index__","__schema__","raw","createMatch","LinkifyIt","schemas","add","definition","set","m","ml","me","next","tld_pos","at_pos","testSchemaAt","keepOld","sort","el","reverse","linkifyIt","_default","components","core","zero","rules2","commonmark","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","baseMinusTMin","floor","stringFromCharCode","error","RangeError","array","callback","mapDomain","domain","parts","labels","encoded","ucs2decode","output","counter","extra","ucs2encode","codePoints","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","inputLength","n","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","toUnicode","toASCII","punycode","version","ucs2","punycode_1","config","default","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","er","MarkdownIt","presetName","utils","ParserCore","configure","presets","missed","use","plugin","args","apply","parseInline","markdownIt","global","factory","module","_typeof","Symbol","iterator","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_construct","Parent","Class","a","Constructor","Function","bind","instance","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","iter","minLen","arr2","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","_ref","fun","thisValue","x","Func","arrayForEach","unapply","arrayPop","arrayPush","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","typeErrorCreate","unconstruct","func","thisArg","_len","_key","_len2","_key2","addToSet","transformCaseFunc","element","lcElement","clone","newObject","property","lookupGetter","prop","desc","get","fallbackValue","console","warn","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","_","createDOMPurify","undefined","DOMPurify","root","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","ownerDocument","trustedTypesPolicy","emptyHTML","_document","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","documentMode","hooks","createHTMLDocument","MUSTACHE_EXPR$1","ERB_EXPR$1","TMPLIT_EXPR$1","DATA_ATTR$1","ARIA_ATTR$1","IS_SCRIPT_OR_DATA$1","ATTR_WHITESPACE$1","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","_forceRemove","node","parentNode","removeChild","outerHTML","remove","_removeAttribute","getAttributeNode","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_basicCustomElementTest","childCount","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","oldNode","returnNode","toStaticHTML","appendChild","firstChild","nodeIterator","shadowroot","serializedHTML","doctype","setConfig","clearConfig","isValidAttribute","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","purify","goMdCss","GoMd","createMdInstance","mdOptions","useGoUi","JSON5","init","emit","initialiseRenderer","goUiPlugin","getRenderedContent","sanitise","renderSrc","response","fetch","renderContent","rendered","componentWillLoad","handleSrcChange","handleContentChange","handleMdOptionsChange","h","Host"],"sources":["../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/common/entities.js","../../node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/P/regex.js","../../node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/encode.js","../../node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/decode.js","../../node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/format.js","../../node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/parse.js","../../node_modules/.pnpm/mdurl@1.0.1/node_modules/mdurl/index.js","../../node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/properties/Any/regex.js","../../node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Cc/regex.js","../../node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Cf/regex.js","../../node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/categories/Z/regex.js","../../node_modules/.pnpm/uc.micro@1.0.6/node_modules/uc.micro/index.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/common/utils.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/helpers/parse_link_label.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/helpers/parse_link_destination.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/helpers/parse_link_title.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/helpers/index.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/renderer.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/ruler.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_core/normalize.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_core/block.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_core/inline.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_core/linkify.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_core/replacements.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_core/smartquotes.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_core/text_join.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/token.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_core/state_core.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/parser_core.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_block/table.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_block/code.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_block/fence.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_block/blockquote.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_block/hr.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_block/list.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_block/reference.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/common/html_blocks.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/common/html_re.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_block/html_block.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_block/heading.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_block/lheading.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_block/paragraph.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_block/state_block.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/parser_block.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/text.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/linkify.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/newline.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/escape.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/backticks.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/strikethrough.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/emphasis.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/link.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/image.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/autolink.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/html_inline.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/entity.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/fragments_join.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/rules_inline/state_inline.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/parser_inline.js","../../node_modules/.pnpm/linkify-it@4.0.1/node_modules/linkify-it/lib/re.js","../../node_modules/.pnpm/linkify-it@4.0.1/node_modules/linkify-it/index.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/presets/default.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/presets/zero.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/presets/commonmark.js","../../node_modules/.pnpm/punycode@2.3.0/node_modules/punycode/punycode.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/lib/index.js","../../node_modules/.pnpm/markdown-it@13.0.1/node_modules/markdown-it/index.js","../../node_modules/.pnpm/dompurify@2.4.3/node_modules/dompurify/dist/purify.js","src/components/go-md/go-md.scss?tag=go-md","src/components/go-md/go-md.tsx"],"sourcesContent":["// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + '|$)|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + '|$)|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test     = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) return null;\n\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n\n  this.__schema__     = m[2];\n  this.__index__      = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0);\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nmodule.exports = punycode;\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","/*! @license DOMPurify 2.4.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.4.3/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DOMPurify = factory());\n})(this, (function () { 'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _construct(Parent, args, Class) {\n    if (_isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) _setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n\n    return _construct.apply(null, arguments);\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var hasOwnProperty = Object.hasOwnProperty,\n      setPrototypeOf = Object.setPrototypeOf,\n      isFrozen = Object.isFrozen,\n      getPrototypeOf = Object.getPrototypeOf,\n      getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n  var freeze = Object.freeze,\n      seal = Object.seal,\n      create = Object.create; // eslint-disable-line import/no-mutable-exports\n\n  var _ref = typeof Reflect !== 'undefined' && Reflect,\n      apply = _ref.apply,\n      construct = _ref.construct;\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return _construct(Func, _toConsumableArray(args));\n    };\n  }\n\n  var arrayForEach = unapply(Array.prototype.forEach);\n  var arrayPop = unapply(Array.prototype.pop);\n  var arrayPush = unapply(Array.prototype.push);\n  var stringToLowerCase = unapply(String.prototype.toLowerCase);\n  var stringToString = unapply(String.prototype.toString);\n  var stringMatch = unapply(String.prototype.match);\n  var stringReplace = unapply(String.prototype.replace);\n  var stringIndexOf = unapply(String.prototype.indexOf);\n  var stringTrim = unapply(String.prototype.trim);\n  var regExpTest = unapply(RegExp.prototype.test);\n  var typeErrorCreate = unconstruct(TypeError);\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n  /* Add properties to a lookup table */\n\n  function addToSet(set, array, transformCaseFunc) {\n    transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;\n\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    var l = array.length;\n\n    while (l--) {\n      var element = array[l];\n\n      if (typeof element === 'string') {\n        var lcElement = transformCaseFunc(element);\n\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n  /* Shallow clone an object */\n\n  function clone(object) {\n    var newObject = create(null);\n    var property;\n\n    for (property in object) {\n      if (apply(hasOwnProperty, object, [property]) === true) {\n        newObject[property] = object[property];\n      }\n    }\n\n    return newObject;\n  }\n  /* IE10 doesn't support __lookupGetter__ so lets'\n   * simulate it. It also automatically checks\n   * if the prop is function or getter and behaves\n   * accordingly. */\n\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      var desc = getOwnPropertyDescriptor(object, prop);\n\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n\n      object = getPrototypeOf(object);\n    }\n\n    function fallbackValue(element) {\n      console.warn('fallback value for', element);\n      return null;\n    }\n\n    return fallbackValue;\n  }\n\n  var html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']); // SVG\n\n  var svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']); // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n\n  var svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  var mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']); // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n\n  var mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  var text = freeze(['#text']);\n\n  var html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n  var svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  var mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  var MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n\n  var ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n  var TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\n  var DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n\n  var ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n\n  var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  var IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  var ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n  var DOCTYPE_NAME = seal(/^html$/i);\n\n  var getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {Document} document The document object (to determine policy name suffix)\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported).\n   */\n\n\n  var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n    if (_typeof(trustedTypes) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    } // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n\n\n    var suffix = null;\n    var ATTR_NAME = 'data-tt-policy-suffix';\n\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\n    }\n\n    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML: function createHTML(html) {\n          return html;\n        },\n        createScriptURL: function createScriptURL(scriptUrl) {\n          return scriptUrl;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    var DOMPurify = function DOMPurify(root) {\n      return createDOMPurify(root);\n    };\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n\n\n    DOMPurify.version = '2.4.3';\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n\n    var originalDocument = window.document;\n    var document = window.document;\n    var DocumentFragment = window.DocumentFragment,\n        HTMLTemplateElement = window.HTMLTemplateElement,\n        Node = window.Node,\n        Element = window.Element,\n        NodeFilter = window.NodeFilter,\n        _window$NamedNodeMap = window.NamedNodeMap,\n        NamedNodeMap = _window$NamedNodeMap === void 0 ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n        HTMLFormElement = window.HTMLFormElement,\n        DOMParser = window.DOMParser,\n        trustedTypes = window.trustedTypes;\n    var ElementPrototype = Element.prototype;\n    var cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    var getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    var getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    var getParentNode = lookupGetter(ElementPrototype, 'parentNode'); // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n\n    if (typeof HTMLTemplateElement === 'function') {\n      var template = document.createElement('template');\n\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n\n    var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n    var _document = document,\n        implementation = _document.implementation,\n        createNodeIterator = _document.createNodeIterator,\n        createDocumentFragment = _document.createDocumentFragment,\n        getElementsByTagName = _document.getElementsByTagName;\n    var importNode = originalDocument.importNode;\n    var documentMode = {};\n\n    try {\n      documentMode = clone(document).documentMode ? document.documentMode : {};\n    } catch (_) {}\n\n    var hooks = {};\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n\n    DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;\n    var MUSTACHE_EXPR$1 = MUSTACHE_EXPR,\n        ERB_EXPR$1 = ERB_EXPR,\n        TMPLIT_EXPR$1 = TMPLIT_EXPR,\n        DATA_ATTR$1 = DATA_ATTR,\n        ARIA_ATTR$1 = ARIA_ATTR,\n        IS_SCRIPT_OR_DATA$1 = IS_SCRIPT_OR_DATA,\n        ATTR_WHITESPACE$1 = ATTR_WHITESPACE;\n    var IS_ALLOWED_URI$1 = IS_ALLOWED_URI;\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    var ALLOWED_TAGS = null;\n    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(svgFilters), _toConsumableArray(mathMl$1), _toConsumableArray(text)));\n    /* Allowed attribute names */\n\n    var ALLOWED_ATTR = null;\n    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(mathMl), _toConsumableArray(xml)));\n    /*\n     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */\n\n    var CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n\n    var FORBID_TAGS = null;\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n\n    var FORBID_ATTR = null;\n    /* Decide if ARIA attributes are okay */\n\n    var ALLOW_ARIA_ATTR = true;\n    /* Decide if custom data attributes are okay */\n\n    var ALLOW_DATA_ATTR = true;\n    /* Decide if unknown protocols are okay */\n\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n\n    var SAFE_FOR_TEMPLATES = false;\n    /* Decide if document with <html>... should be returned */\n\n    var WHOLE_DOCUMENT = false;\n    /* Track whether config is already set on this instance of DOMPurify. */\n\n    var SET_CONFIG = false;\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n\n    var FORCE_BODY = false;\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n\n    var RETURN_DOM = false;\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n\n    var RETURN_DOM_FRAGMENT = false;\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n\n    var RETURN_TRUSTED_TYPE = false;\n    /* Output should be free from DOM clobbering attacks?\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n     */\n\n    var SANITIZE_DOM = true;\n    /* Achieve full DOM Clobbering protection by isolating the namespace of named\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n     *\n     * HTML/DOM spec rules that enable DOM Clobbering:\n     *   - Named Access on Window (§7.3.3)\n     *   - DOM Tree Accessors (§3.1.5)\n     *   - Form Element Parent-Child Relations (§4.10.3)\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n     *   - HTMLCollection (§4.2.10.2)\n     *\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\n     * with a constant string, i.e., `user-content-`\n     */\n\n    var SANITIZE_NAMED_PROPS = false;\n    var SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n    /* Keep element content when removing element? */\n\n    var KEEP_CONTENT = true;\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n\n    var IN_PLACE = false;\n    /* Allow usage of profiles like html, svg and mathMl */\n\n    var USE_PROFILES = {};\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n\n    var FORBID_CONTENTS = null;\n    var DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n    /* Tags that are safe for data: URIs */\n\n    var DATA_URI_TAGS = null;\n    var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n    /* Attributes safe for values like \"javascript:\" */\n\n    var URI_SAFE_ATTRIBUTES = null;\n    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n    var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n\n    var NAMESPACE = HTML_NAMESPACE;\n    var IS_EMPTY_INPUT = false;\n    /* Allowed XHTML+XML namespaces */\n\n    var ALLOWED_NAMESPACES = null;\n    var DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n    /* Parsing of strict XHTML documents */\n\n    var PARSER_MEDIA_TYPE;\n    var SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    var DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    var transformCaseFunc;\n    /* Keep a reference to config to pass to hooks */\n\n    var CONFIG = null;\n    /* Ideally, do not touch anything below this line */\n\n    /* ______________________________________________ */\n\n    var formElement = document.createElement('form');\n\n    var isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n\n\n    var _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n      /* Shield configuration object from tampering */\n\n\n      if (!cfg || _typeof(cfg) !== 'object') {\n        cfg = {};\n      }\n      /* Shield configuration object from prototype pollution */\n\n\n      cfg = clone(cfg);\n      PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE; // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n      /* Set configuration parameters */\n\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n      ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n      cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n      cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n\n      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$1;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n      /* Parse profile info */\n\n\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, _toConsumableArray(text));\n        ALLOWED_ATTR = [];\n\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html$1);\n          addToSet(ALLOWED_ATTR, html);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg$1);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl$1);\n          addToSet(ALLOWED_ATTR, mathMl);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n      /* Merge configuration parameters */\n\n\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n      }\n\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n      }\n      /* Add #text in case KEEP_CONTENT is set to true */\n\n\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n\n\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n\n\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      } // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n\n\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    var HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']); // Certain elements are allowed in both SVG and HTML\n    // namespace. We need to specify them explicitly\n    // so that they don't get erroneously deleted from\n    // HTML namespace.\n\n    var COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n\n    var ALL_SVG_TAGS = addToSet({}, svg$1);\n    addToSet(ALL_SVG_TAGS, svgFilters);\n    addToSet(ALL_SVG_TAGS, svgDisallowed);\n    var ALL_MATHML_TAGS = addToSet({}, mathMl$1);\n    addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n    /**\n     *\n     *\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n\n    var _checkValidNamespace = function _checkValidNamespace(element) {\n      var parent = getParentNode(element); // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: NAMESPACE,\n          tagName: 'template'\n        };\n      }\n\n      var tagName = stringToLowerCase(element.tagName);\n      var parentTagName = stringToLowerCase(parent.tagName);\n\n      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return false;\n      }\n\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        } // The only way to switch from MathML to SVG is via`\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n\n\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        } // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n\n\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        } // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n\n\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        } // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n\n\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        } // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n\n\n        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n      } // For XHTML and XML documents that support custom namespaces\n\n\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return true;\n      } // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n      // Return false just in case.\n\n\n      return false;\n    };\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n\n\n    var _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        try {\n          node.outerHTML = emptyHTML;\n        } catch (_) {\n          node.remove();\n        }\n      }\n    };\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n\n\n    var _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name); // We void attribute values for unremovable \"is\"\" attributes\n\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n\n\n    var _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      var doc;\n      var leadingWhitespace;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n\n      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n      /* Use createHTMLDocument in case DOMParser is not available */\n\n\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n        } catch (_) {// Syntax error if dirtyPayload is invalid xml\n        }\n      }\n\n      var body = doc.body || doc.documentElement;\n\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n      /* Work on whole document or just its body */\n\n\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n    /**\n     * _createIterator\n     *\n     * @param  {Document} root document/fragment to create iterator for\n     * @return {Iterator} iterator instance\n     */\n\n\n    var _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n    };\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n\n\n    var _isClobbered = function _isClobbered(elm) {\n      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n    };\n    /**\n     * _isNode\n     *\n     * @param  {Node} obj object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n\n\n    var _isNode = function _isNode(object) {\n      return _typeof(Node) === 'object' ? object instanceof Node : object && _typeof(object) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n\n\n    var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], function (hook) {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n\n\n    var _sanitizeElements = function _sanitizeElements(currentNode) {\n      var content;\n      /* Execute a hook if present */\n\n      _executeHook('beforeSanitizeElements', currentNode, null);\n      /* Check if element is clobbered or can clobber */\n\n\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Check if tagname contains Unicode */\n\n\n      if (regExpTest(/[\\u0080-\\uFFFF]/, currentNode.nodeName)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Now let's check the element's type and name */\n\n\n      var tagName = transformCaseFunc(currentNode.nodeName);\n      /* Execute a hook if present */\n\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName: tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n      /* Detect mXSS attempts abusing namespace confusion */\n\n\n      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Mitigate a problem with templates inside select */\n\n\n      if (tagName === 'select' && regExpTest(/<template/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Remove element if anything forbids its presence */\n\n\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Check if we have a custom element to handle */\n        if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\n        }\n        /* Keep content except for bad-listed elements */\n\n\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          var parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          var childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n          if (childNodes && parentNode) {\n            var childCount = childNodes.length;\n\n            for (var i = childCount - 1; i >= 0; --i) {\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n            }\n          }\n        }\n\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Check whether element has a valid namespace */\n\n\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n\n      if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Sanitize element content to be template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR$1, ' ');\n        content = stringReplace(content, ERB_EXPR$1, ' ');\n        content = stringReplace(content, TMPLIT_EXPR$1, ' ');\n\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n\n\n    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n\n\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$1, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$1, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if ( // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE$1, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$1, stringReplace(value, ATTR_WHITESPACE$1, ''))) ; else if (!value) ; else {\n        return false;\n      }\n\n      return true;\n    };\n    /**\n     * _basicCustomElementCheck\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     * @param {string} tagName name of the tag of the node to sanitize\n     */\n\n\n    var _basicCustomElementTest = function _basicCustomElementTest(tagName) {\n      return tagName.indexOf('-') > 0;\n    };\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n\n\n    var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      var attr;\n      var value;\n      var lcName;\n      var l;\n      /* Execute a hook if present */\n\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      var attributes = currentNode.attributes;\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      var hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n      /* Go backwards over all attributes; safely remove bad ones */\n\n      while (l--) {\n        attr = attributes[l];\n        var _attr = attr,\n            name = _attr.name,\n            namespaceURI = _attr.namespaceURI;\n        value = name === 'value' ? attr.value : stringTrim(attr.value);\n        lcName = transformCaseFunc(name);\n        /* Execute a hook if present */\n\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n        /* Remove attribute */\n\n\n        _removeAttribute(name, currentNode);\n        /* Did the hooks approve of the attribute? */\n\n\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n        /* Work around a security issue in jQuery 3.0 */\n\n\n        if (regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n\n          continue;\n        }\n        /* Sanitize attribute content to be template-safe */\n\n\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR$1, ' ');\n          value = stringReplace(value, ERB_EXPR$1, ' ');\n          value = stringReplace(value, TMPLIT_EXPR$1, ' ');\n        }\n        /* Is `value` valid for this attribute? */\n\n\n        var lcTag = transformCaseFunc(currentNode.nodeName);\n\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n        /* Full DOM Clobbering protection via namespace isolation,\n         * Prefix id and name attributes with `user-content-`\n         */\n\n\n        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n          // Remove the attribute with this value\n          _removeAttribute(name, currentNode); // Prefix the value and later re-create the attribute with the sanitized value\n\n\n          value = SANITIZE_NAMED_PROPS_PREFIX + value;\n        }\n        /* Handle attributes that require Trusted Types */\n\n\n        if (trustedTypesPolicy && _typeof(trustedTypes) === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n          if (namespaceURI) ; else {\n            switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n              case 'TrustedHTML':\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n\n              case 'TrustedScriptURL':\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n            }\n          }\n        }\n        /* Handle invalid data-* attribute set by try-catching it */\n\n\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n\n\n    var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      var shadowNode;\n\n      var shadowIterator = _createIterator(fragment);\n      /* Execute a hook if present */\n\n\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n        /* Sanitize tags and elements */\n\n\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n        /* Deep shadow DOM detected */\n\n\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n        /* Check attributes, sanitize if necessary */\n\n\n        _sanitizeAttributes(shadowNode);\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    // eslint-disable-next-line complexity\n\n\n    DOMPurify.sanitize = function (dirty) {\n      var cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var body;\n      var importedNode;\n      var currentNode;\n      var oldNode;\n      var returnNode;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n\n      IS_EMPTY_INPUT = !dirty;\n\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n      /* Stringify, in case dirty is an object */\n\n\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof dirty.toString !== 'function') {\n          throw typeErrorCreate('toString is not a function');\n        } else {\n          dirty = dirty.toString();\n\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        }\n      }\n      /* Check we can run. Otherwise fall back or ignore */\n\n\n      if (!DOMPurify.isSupported) {\n        if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n          if (typeof dirty === 'string') {\n            return window.toStaticHTML(dirty);\n          }\n\n          if (_isNode(dirty)) {\n            return window.toStaticHTML(dirty.outerHTML);\n          }\n        }\n\n        return dirty;\n      }\n      /* Assign config vars */\n\n\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n      /* Clean up removed elements */\n\n\n      DOMPurify.removed = [];\n      /* Check if dirty is correctly typed for IN_PLACE */\n\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) {\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\n        if (dirty.nodeName) {\n          var tagName = transformCaseFunc(dirty.nodeName);\n\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n          }\n        }\n      } else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n        /* Initialize the document to work on */\n\n\n        body = _initDocument(dirty);\n        /* Check we have a DOM node from the data */\n\n        if (!body) {\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n        }\n      }\n      /* Remove first element node (ours) if FORCE_BODY is set */\n\n\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n      /* Get node iterator */\n\n\n      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n      /* Now start iterating over the created document */\n\n\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Fix IE's strange behavior with manipulated textNodes #89 */\n        if (currentNode.nodeType === 3 && currentNode === oldNode) {\n          continue;\n        }\n        /* Sanitize tags and elements */\n\n\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n        /* Shadow DOM detected, sanitize it */\n\n\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n        /* Check attributes, sanitize if necessary */\n\n\n        _sanitizeAttributes(currentNode);\n\n        oldNode = currentNode;\n      }\n\n      oldNode = null;\n      /* If we sanitized `dirty` in-place, return it. */\n\n      if (IN_PLACE) {\n        return dirty;\n      }\n      /* Return sanitized string or DOM */\n\n\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (ALLOWED_ATTR.shadowroot) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n      /* Serialize doctype if allowed */\n\n      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n      }\n      /* Sanitize final string template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$1, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$1, ' ');\n        serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR$1, ' ');\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n\n\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n\n      SET_CONFIG = true;\n    };\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n\n\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {string} tag Tag name of containing element.\n     * @param  {string} attr Attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n\n\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      var lcTag = transformCaseFunc(tag);\n      var lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n\n\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     * @return {Function} removed(popped) hook\n     */\n\n\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        return arrayPop(hooks[entryPoint]);\n      }\n    };\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n\n\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     */\n\n\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","go-md {\r\n  display: block;\r\n  go-banner .icon-col {\r\n    svg {\r\n      width: 1.5rem;\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, h, Element, Prop, Watch, Event, EventEmitter } from '@stencil/core';\r\nimport MarkdownIt, { Options } from 'markdown-it';\r\nimport DOMPurify from 'dompurify';\r\nimport JSON5 from 'json5';\r\nimport { goUiPlugin } from '../../utils/go-ui-md-plugin';\r\n@Component({\r\n  tag: 'go-md',\r\n  styleUrl: 'go-md.scss',\r\n  shadow: false,\r\n})\r\nexport class GoMd {\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Render inline markdown\r\n   */\r\n  @Prop() inline?: boolean = false;\r\n\r\n  /**\r\n   * Markdown content to be rendered\r\n   */\r\n  @Prop({ mutable: true }) content: string;\r\n\r\n  /**\r\n   * url to load remote markdown content\r\n   * if `src` is set, content in the `content` prop will be overwritten\r\n   */\r\n  @Prop() src: string;\r\n\r\n  /**\r\n   * [markdown-it](https://github.com/markdown-it/markdown-it) options\r\n   * **Note**: if `use-go-ui` is set to true, these options will be overwritten\r\n   */\r\n  @Prop() mdOptions?: Options | string;\r\n\r\n  /**\r\n   * If set to true, `go-md` will use [DOMPurify](https://nodei.co/npm/dompurify/) to sanitise the output HTML before inserting it into the DOM\r\n   */\r\n  @Prop() sanitise?: boolean = false;\r\n\r\n  /**\r\n   * Use go-ui markdown renderer:\r\n   * - Only `typographer` is enabled in markdown-it options\r\n   *\r\n   * - linkify with [`go-link`](https://go-ui.com/docs/components/go-link)\r\n   * - [container](https://github.com/markdown-it/markdown-it-container) banners with [`go-banner`](https://go-ui.com/docs/components/go-banner)\r\n   */\r\n  @Prop() useGoUi?: boolean = false;\r\n\r\n  @Event() init: EventEmitter;\r\n\r\n  @Event() rendered: EventEmitter;\r\n\r\n  private md: MarkdownIt;\r\n\r\n  private createMdInstance(): void {\r\n    const { mdOptions, useGoUi } = this;\r\n    let options: Options = null;\r\n    if (typeof mdOptions === 'string') {\r\n      try {\r\n        options = JSON5.parse(mdOptions);\r\n      } catch (e) {\r\n        console.error('Could not parse md-options, using default.', e);\r\n      }\r\n    }\r\n\r\n    if (useGoUi) {\r\n      options = {\r\n        linkify: true,\r\n      };\r\n    }\r\n\r\n    this.md = new MarkdownIt(options);\r\n\r\n    // emit initialise event\r\n    this.init.emit(this.md);\r\n  }\r\n\r\n  private async initialiseRenderer() {\r\n    if (!this.md) {\r\n      this.createMdInstance();\r\n    }\r\n    if (this.useGoUi) {\r\n      this.md.use(goUiPlugin);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the rendered HTML\r\n   * @returns output html\r\n   */\r\n  async getRenderedContent(input?: string): Promise<string> {\r\n    if (!input) {\r\n      return '';\r\n    }\r\n    await this.initialiseRenderer();\r\n\r\n    let output = '';\r\n\r\n    // get html output\r\n    if (this.inline) {\r\n      output = this.md.renderInline(input);\r\n    } else {\r\n      output = this.md.render(input);\r\n    }\r\n    // sanitise if needed\r\n    if (this.sanitise) {\r\n      output = DOMPurify.sanitize(output);\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  async renderSrc() {\r\n    // try fetching remote markdown content from this.src\r\n    const response = await fetch(this.src);\r\n    if (response.ok) {\r\n      const data = await response.text();\r\n      this.content = data;\r\n    }\r\n  }\r\n\r\n  async renderContent() {\r\n    this.el.innerHTML = await this.getRenderedContent(this.content);\r\n    this.rendered.emit(this.md);\r\n  }\r\n\r\n  async componentWillLoad() {\r\n    await this.initialiseRenderer();\r\n    if (this.src) {\r\n      await this.renderSrc();\r\n      return;\r\n    }\r\n    this.renderContent();\r\n  }\r\n\r\n  @Watch('src')\r\n  async handleSrcChange() {\r\n    await this.renderSrc();\r\n  }\r\n\r\n  @Watch('content')\r\n  async handleContentChange() {\r\n    this.renderContent();\r\n  }\r\n\r\n  @Watch('mdOptions')\r\n  async handleMdOptionsChange() {\r\n    this.createMdInstance();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <slot></slot>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}