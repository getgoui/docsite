{"version":3,"names":["goButtonGroupCss","GoButtonGroup","componentWillLoad","this","block","el","querySelectorAll","forEach","button","setAttribute","render","connected","h","Host","role","class"],"sources":["src/patterns/go-button-group/go-button-group.scss?tag=go-button-group","src/patterns/go-button-group/go-button-group.tsx"],"sourcesContent":["go-button-group {\r\n  /**\r\n    @prop --go-button-group-gap:\r\n      gap size between buttons inside the group\r\n      - default: 1rem\r\n  */\r\n  --go-button-group-gap: 1rem;\r\n\r\n  display: flex;\r\n  gap: var(--go-button-group-gap);\r\n  flex-wrap: wrap;\r\n  align-items: baseline;\r\n\r\n  &.connected {\r\n    flex-wrap: nowrap;\r\n    gap: 0;\r\n    go-button {\r\n      margin-inline-end: -1px;\r\n      &:first-of-type {\r\n        .inner-button {\r\n          border-top-right-radius: 0;\r\n          border-bottom-right-radius: 0;\r\n        }\r\n      }\r\n      &:last-of-type {\r\n        .inner-button {\r\n          border-top-left-radius: 0;\r\n          border-bottom-left-radius: 0;\r\n        }\r\n      }\r\n      &:not(:first-of-type, :last-of-type) {\r\n        --go-btn-radius: 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, h, Element, Prop } from '@stencil/core';\r\nimport { Breakpoints } from '../../interfaces';\r\n\r\n@Component({\r\n  tag: 'go-button-group',\r\n  styleUrl: 'go-button-group.scss',\r\n  shadow: false,\r\n})\r\nexport class GoButtonGroup {\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * If specified, buttons within group will be full width on smaller devices and auto-width going forward. e.g. having `block=\"tablet\"` will make all buttons in group take up full width on mobile and tablet sizes and auto-width on larger devices.\r\n   */\r\n  @Prop({ reflect: true }) block?: Breakpoints;\r\n\r\n  /**\r\n   * No gap between buttons.\r\n   */\r\n  @Prop() connected?: boolean = false;\r\n\r\n  async componentWillLoad() {\r\n    // Make buttons inside take up full width on mobile.\r\n    if (this.block) {\r\n      this.el.querySelectorAll('go-button').forEach((button) => {\r\n        button.setAttribute('block', this.block);\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { connected } = this;\r\n    return (\r\n      <Host role=\"group\" class={{ connected }}>\r\n        <slot></slot>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"yDAAA,MAAMA,EAAmB,ilB,MCQZC,EAAa,M,6DAWM,K,CAE9B,uBAAMC,GAEJ,GAAIC,KAAKC,MAAO,CACdD,KAAKE,GAAGC,iBAAiB,aAAaC,SAASC,IAC7CA,EAAOC,aAAa,QAASN,KAAKC,MAAM,G,EAI9C,MAAAM,GACE,MAAMC,UAAEA,GAAcR,KACtB,OACES,EAACC,EAAI,CAACC,KAAK,QAAQC,MAAO,CAAEJ,cAC1BC,EAAA,a"}