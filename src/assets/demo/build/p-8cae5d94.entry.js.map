{"version":3,"names":["goNavDrawerCss","GoNavDrawer","this","inheritedAttrs","subMenus","init","newItems","navItems","parseItems","open","active","openEvent","emit","close","currentSubMenus","length","closeCurrentSubMenu","closeEvent","toggle","componentWillLoad","inheritAttributes","el","items","e","console","warn","lastSubMenu","slice","classList","remove","querySelector","setAttribute","openSubMenu","triggerBtn","target","menuItem","closest","add","trapFocus","handleNavItemClick","item","_a","linkAttrs","onClick","autoClose","navItemClickEvent","renderNavItems","parentItem","isSubNav","h","class","flat","stack","variant","compact","slot","xmlns","fill","stroke","viewBox","d","label","url","Object","assign","href","renderIcon","icon","map","renderNavItem","Tag","hasChildren","children","isCurrent","attrs","type","current","render","position","onOverlayClose"],"sources":["src/components/navigation/go-nav-drawer/go-nav-drawer.scss?tag=go-nav-drawer","src/components/navigation/go-nav-drawer/go-nav-drawer.tsx"],"sourcesContent":[".nav-drawer {\r\n  --drawer-bg-color: var(--go-color-lightest);\r\n  --drawer-max-width: 24rem;\r\n  --nav-item-text-color: var(--go-color-darkest);\r\n  --nav-item-bg-color: var(--go-color-lightest);\r\n  --nav-item-hover-bg-color: var(--go-color-neutral-200);\r\n  --nav-item-padding: var(--go-size--1) var(--go-size-0);\r\n  --nav-header-padding: var(--go-size--1) var(--go-size-0);\r\n  --nav-header-border-color: var(--go-color-neutral-200);\r\n  --nav-item-icon-gap: var(--go-size-0);\r\n  --nav-item-current-bar-width: 4px;\r\n  --nav-item-current-bar-color: var(--go-color-primary-500);\r\n  --submenu-parent-link-border-bottom: 1px solid var(--go-color-neutral-200);\r\n\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: var(--layer-important);\r\n  background: var(--drawer-bg-color);\r\n  transform: translateX(-100%);\r\n  @include transition(transform);\r\n  @include reduced-motion {\r\n    transition-duration: 0s;\r\n  }\r\n\r\n  @include tablet {\r\n    width: var(--drawer-max-width);\r\n  }\r\n\r\n  &.right {\r\n    left: auto;\r\n    right: 0;\r\n    transform: translateX(100%);\r\n  }\r\n  &.open {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  .nav-container {\r\n    overflow: hidden;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n  }\r\n\r\n  .nav-menu {\r\n    @include transition(transform, visibility);\r\n    @include reduced-motion {\r\n      transition-duration: 0s;\r\n    }\r\n\r\n    visibility: visible;\r\n    transform: translateX(0);\r\n    padding: 0;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n    background: var(--drawer-bg-color);\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 100%;\r\n    .nav-drawer-header {\r\n      .header-row {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        padding: var(--nav-header-padding);\r\n        .back-btn {\r\n          margin-right: auto;\r\n        }\r\n        .close-btn {\r\n          margin-left: auto;\r\n          flex: 0 0 auto;\r\n        }\r\n        .title {\r\n          font-weight: bold;\r\n          font-size: var(--go-size-0);\r\n          flex: 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    &.is-sub-nav {\r\n      .nav-drawer-header {\r\n        .title {\r\n          margin-left: 1rem;\r\n        }\r\n      }\r\n    }\r\n\r\n    nav {\r\n      border-top: 2px solid var(--nav-header-border-color);\r\n      height: 100%;\r\n      padding: 1rem 0;\r\n      flex: 1;\r\n      overflow: auto;\r\n    }\r\n\r\n    .nav-menu {\r\n      box-shadow: var(--shadow-4);\r\n      visibility: hidden;\r\n      transform: translateX(100%);\r\n    }\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  .nav-item-inner {\r\n    @include reset-btn;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    padding: var(--nav-item-padding);\r\n    color: var(--nav-item-text-color);\r\n    text-decoration: none;\r\n    background: var(--nav-item-bg-color);\r\n    border-left: var(--nav-item-current-bar-width) solid transparent;\r\n    &:hover,\r\n    &:focus {\r\n      background: var(--nav-item-hover-bg-color);\r\n    }\r\n  }\r\n\r\n  .nav-item-label {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: var(--nav-item-icon-gap);\r\n  }\r\n\r\n  .children-indicator {\r\n    width: 1.5em;\r\n    height: 1.5em;\r\n  }\r\n\r\n  // mobile menu item\r\n  li {\r\n    padding: 0;\r\n    line-height: 1.5;\r\n\r\n    &.active {\r\n      > .nav-menu {\r\n        visibility: visible;\r\n        transform: translateX(0);\r\n        z-index: 2;\r\n      }\r\n    }\r\n\r\n    &.current {\r\n      > .nav-item-inner {\r\n        border-left-color: var(--nav-item-current-bar-color);\r\n      }\r\n    }\r\n  }\r\n\r\n  .parent-link {\r\n    border-bottom: var(--submenu-parent-link-border-bottom);\r\n    a {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: flex-start;\r\n      width: 100%;\r\n      padding: var(--nav-item-padding);\r\n      color: var(--nav-item-text-color);\r\n      text-decoration: none;\r\n      background: var(--nav-item-bg-color);\r\n      font-weight: bold;\r\n      border-left: var(--nav-item-current-bar-width) solid transparent;\r\n      svg {\r\n        @include transition(transform);\r\n\r\n        margin-left: 0.5rem;\r\n        width: 1.25em;\r\n        height: 1.25em;\r\n        transform: translateX(0);\r\n      }\r\n      &:hover,\r\n      &:focus {\r\n        background: var(--nav-item-hover-bg-color);\r\n        svg {\r\n          transform: translateX(5px);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, h, Element, Prop, State, Method, Event, EventEmitter, Watch } from '@stencil/core';\r\n\r\nimport { INavItem } from '../../../interfaces';\r\nimport { inheritAttributes, trapFocus, parseItems } from '../../../utils';\r\nimport { renderIcon } from '../nav-helpers';\r\n\r\n@Component({\r\n  tag: 'go-nav-drawer',\r\n  styleUrl: 'go-nav-drawer.scss',\r\n  shadow: false,\r\n})\r\nexport class GoNavDrawer {\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Position where the navigation should appear from\r\n   */\r\n  @Prop({ reflect: true }) position?: 'left' | 'right' = 'left';\r\n\r\n  /**\r\n   * Navigation items to be rendered\r\n   */\r\n  @Prop() items?: INavItem[] | string;\r\n\r\n  @State() navItems: INavItem[] = null;\r\n\r\n  /**\r\n   * keep track of open state of drawer\r\n   */\r\n  @Prop({ mutable: true, reflect: true }) active = false;\r\n\r\n  /**\r\n   * label for screen readers\r\n   */\r\n  @Prop() label = 'Drawer';\r\n\r\n  /**\r\n   * if true, clicking on nav item will close the drawer automatically\r\n   */\r\n  @Prop() autoClose = false;\r\n\r\n  // keep track of open submenus\r\n  @State() currentSubMenus: HTMLElement[] = [];\r\n\r\n  /**\r\n   * Initialise the menu\r\n   * @param items {INavItem[]} menu items to be rendered\r\n   */\r\n  @Method()\r\n  @Watch('items')\r\n  async init(newItems: INavItem[] | string) {\r\n    this.navItems = parseItems(newItems);\r\n  }\r\n\r\n  /**\r\n   * Emitted when the nav drawer is opened\r\n   */\r\n  @Event({\r\n    eventName: 'open',\r\n    cancelable: true,\r\n    bubbles: true,\r\n  })\r\n  openEvent: EventEmitter<void>;\r\n\r\n  @Method()\r\n  async open() {\r\n    this.active = true;\r\n    this.openEvent.emit();\r\n  }\r\n\r\n  /**\r\n   * Emitted when the nav drawer is closed\r\n   */\r\n  @Event({\r\n    eventName: 'close',\r\n    cancelable: true,\r\n    bubbles: true,\r\n  })\r\n  closeEvent: EventEmitter<void>;\r\n\r\n  /**\r\n   * Emitted when the nav item is clicked\r\n   */\r\n  @Event({\r\n    eventName: 'navItemClick',\r\n    cancelable: true,\r\n    bubbles: true,\r\n  })\r\n  navItemClickEvent: EventEmitter<INavItem>;\r\n\r\n  @Method()\r\n  async close() {\r\n    while (this.currentSubMenus.length > 0) {\r\n      await this.closeCurrentSubMenu();\r\n    }\r\n    this.active = false;\r\n    this.closeEvent.emit();\r\n  }\r\n\r\n  @Method()\r\n  async toggle() {\r\n    if (this.active) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  // Store attributes inherited from the host element\r\n  private inheritedAttrs = {};\r\n  componentWillLoad() {\r\n    this.inheritedAttrs = inheritAttributes(this.el, ['class', 'style', 'items', 'active', 'position'], false);\r\n    try {\r\n      this.navItems = parseItems(this.items);\r\n    } catch (e) {\r\n      console.warn('Could not parse nav items.', e);\r\n    }\r\n  }\r\n\r\n  async closeCurrentSubMenu() {\r\n    if (this.currentSubMenus.length === 0) {\r\n      return;\r\n    }\r\n    const lastSubMenu = this.currentSubMenus.slice(-1)[0];\r\n    lastSubMenu.classList.remove('active');\r\n    lastSubMenu.querySelector('.nav-item-inner').setAttribute('aria-expanded', 'false');\r\n    this.currentSubMenus = this.currentSubMenus.slice(0, -1);\r\n  }\r\n\r\n  private openSubMenu(e: MouseEvent) {\r\n    const triggerBtn = e.target as HTMLElement;\r\n    const menuItem = triggerBtn.closest('li');\r\n    menuItem.classList.add('active');\r\n    triggerBtn.setAttribute('aria-expanded', 'true');\r\n    trapFocus(menuItem.querySelector('.nav-menu') as HTMLElement);\r\n    this.currentSubMenus = [...this.currentSubMenus, menuItem];\r\n  }\r\n\r\n  subMenus: { string: INavItem[] } = null;\r\n\r\n  handleNavItemClick(e, item: INavItem) {\r\n    if (item.linkAttrs?.onClick) {\r\n      item.linkAttrs.onClick(e);\r\n    }\r\n    if (this.autoClose) {\r\n      this.close();\r\n    }\r\n    this.navItemClickEvent.emit(item);\r\n  }\r\n\r\n  renderNavItems(items: INavItem[], parentItem?: INavItem) {\r\n    const isSubNav = !!parentItem;\r\n\r\n    return (\r\n      <div class={{ 'nav-menu': true, 'is-sub-nav': isSubNav }}>\r\n        <div class=\"nav-drawer-header\">\r\n          <div class=\"header-row\">\r\n            {parentItem ? (\r\n              <go-button class=\"back-btn\" flat stack variant=\"text\" compact onClick={() => this.closeCurrentSubMenu()}>\r\n                <svg\r\n                  slot=\"prefix\"\r\n                  aria-hidden=\"true\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  stroke-width=\"2\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"\r\n                  viewBox=\"0 0 24 24\">\r\n                  <path d=\"M19 12H5M12 19l-7-7 7-7\" />\r\n                </svg>\r\n                <span>Back</span>\r\n              </go-button>\r\n            ) : (\r\n              <span></span>\r\n            )}\r\n\r\n            {/* <div class=\"title\">{isSubNav ? parentItem.label : this.label}</div> */}\r\n            {!isSubNav && <div class=\"title\">{this.label}</div>}\r\n            <go-button class=\"close-btn\" flat stack variant=\"text\" compact onClick={() => this.close()}>\r\n              <svg\r\n                aria-hidden=\"true\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                stroke-width=\"2\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                viewBox=\"0 0 24 24\">\r\n                <path d=\"M18 6 6 18M6 6l12 12\" />\r\n              </svg>\r\n              <span>Close</span>\r\n            </go-button>\r\n          </div>\r\n        </div>\r\n        {items?.length > 0 ? (\r\n          <nav aria-label={isSubNav ? parentItem.label : this.label}>\r\n            {isSubNav && parentItem.url ? (\r\n              <div class=\"parent-link\">\r\n                <go-link href={parentItem.url} {...parentItem.linkAttrs} onClick={(e) => this.handleNavItemClick(e, parentItem)}>\r\n                  <span class=\"nav-item-label\">\r\n                    {renderIcon(parentItem.icon)}\r\n                    <span>{parentItem.label}</span>\r\n                  </span>\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    stroke-width=\"2\"\r\n                    stroke-linecap=\"round\"\r\n                    stroke-linejoin=\"round\"\r\n                    viewBox=\"0 0 24 24\">\r\n                    <path d=\"M5 12h14M12 5l7 7-7 7\" />\r\n                  </svg>\r\n                </go-link>\r\n              </div>\r\n            ) : null}\r\n            <ul>{items.map((item) => this.renderNavItem(item))}</ul>\r\n          </nav>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderNavItem(item: INavItem) {\r\n    let Tag = 'a';\r\n    const hasChildren = item?.children?.length > 0;\r\n    if (item.isCurrent) {\r\n      Tag = 'span';\r\n    }\r\n    if (hasChildren) {\r\n      Tag = 'button';\r\n    }\r\n\r\n    let attrs = null;\r\n\r\n    if (Tag === 'a') {\r\n      attrs = {\r\n        href: item.url,\r\n        ...item.linkAttrs,\r\n        onClick: (e) => this.handleNavItemClick(e, item),\r\n      };\r\n    }\r\n    if (Tag === 'button') {\r\n      attrs = {\r\n        'type': 'button',\r\n        'aria-haspopup': 'true',\r\n        'aria-expanded': 'false',\r\n        'onClick': (e) => this.openSubMenu(e),\r\n      };\r\n    }\r\n    return (\r\n      <li class={{ 'nav-item': true, 'has-children': hasChildren, 'current': item.isCurrent }}>\r\n        <Tag class=\"nav-item-inner\" {...attrs}>\r\n          <span class=\"nav-item-label\">\r\n            {renderIcon(item.icon)}\r\n            <span>{item.label}</span>\r\n          </span>\r\n          {hasChildren ? (\r\n            <svg\r\n              class=\"children-indicator\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              stroke-width=\"2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              viewBox=\"0 0 24 24\">\r\n              <path d=\"m9 18 6-6-6-6\" />\r\n            </svg>\r\n          ) : null}\r\n        </Tag>\r\n        {item.children ? this.renderNavItems(item.children, item) : null}\r\n      </li>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let { navItems, active, position, inheritedAttrs } = this;\r\n    return (\r\n      <go-overlay active={active} {...inheritedAttrs} onOverlayClose={() => this.close()}>\r\n        <div class={{ 'nav-drawer': true, 'open': active, [position]: !!position }}>\r\n          {navItems ? <div class=\"nav-container\">{this.renderNavItems(navItems)}</div> : <slot></slot>}\r\n        </div>\r\n      </go-overlay>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"}