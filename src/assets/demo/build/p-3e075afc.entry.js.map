{"version":3,"names":["goChipCss","GoChip","this","hasPrefix","hasSuffix","onChipClickHandler","chipClick","emit","onChipDismissedHandler","chipDismissed","componentWillLoad","hasSlot","el","render","clickable","dismissible","Tag","h","Host","class","type","onClick","undefined","name","xmlns","fill","stroke","viewBox","d"],"sources":["src/components/go-chip/go-chip.scss?tag=go-chip","src/components/go-chip/go-chip.tsx"],"sourcesContent":[":root {\r\n  /**\r\n    @prop --go-chip-gap:\r\n      Gap between label, prefix and suffix.\r\n      - default: 0.5em\r\n  */\r\n  --go-chip-gap: 0.5em;\r\n\r\n  /**\r\n    @prop --go-chip-padding-y:\r\n      Vertical padding of the chip\r\n      - default: 0.25em\r\n  */\r\n  --go-chip-padding-y: 0.25em;\r\n\r\n  /**\r\n    @prop --go-chip-padding-x:\r\n      Horizontal padding of the chip\r\n      - default: 0.75em\r\n  */\r\n  --go-chip-padding-x: 0.75em;\r\n\r\n  /**\r\n    @prop --go-chip-padding:\r\n      Padding of the chip\r\n      - default: var(--go-chip-padding-y) var(--go-chip-padding-x)\r\n  */\r\n  --go-chip-padding: var(--go-chip-padding-y) var(--go-chip-padding-x);\r\n\r\n  /**\r\n    @prop --go-chip-radius:\r\n      Radius of chip\r\n      - default: var(--radius-2)\r\n  */\r\n  --go-chip-radius: var(--radius-2);\r\n\r\n  /**\r\n    @prop --go-chip-color-bg:\r\n      Background color of chip\r\n      - default: var(--go-color-neutral-100)\r\n  */\r\n  --go-chip-color-bg: var(--go-color-neutral-100);\r\n\r\n  /**\r\n    @prop --go-chip-color-fg:\r\n      Foreground color of chip\r\n      - default: var(--go-color-text)\r\n  */\r\n  --go-chip-color-fg: var(--go-color-text);\r\n\r\n  /**\r\n    @prop --go-chip-color-bg-hover:\r\n      Background color on hover for `clickable` chips\r\n      - default: var(--go-color-neutral-200)\r\n  */\r\n  --go-chip-color-bg-hover: var(--go-color-neutral-200);\r\n\r\n  /**\r\n    @prop --go-chip-font-size:\r\n      Font size of chip\r\n      - default: var(--go-size--1)\r\n  */\r\n  --go-chip-font-size: var(--go-size--1);\r\n\r\n  /**\r\n    @prop --go-chip-border-width:\r\n      Border width of the chip\r\n      - default: 2px\r\n  */\r\n  --go-chip-border-width: 2px;\r\n\r\n  /**\r\n    @prop --go-chip-color-border:\r\n      Border color of the chip\r\n      - default: transparent\r\n  */\r\n  --go-chip-color-border: transparent;\r\n\r\n  /**\r\n    @prop --go-chip-dismiss-btn-gap:\r\n      Gap between chip content and the dismiss button (only applicable when `dismissable` is `true`)\r\n      - default: 0\r\n  */\r\n  --go-chip-dismiss-btn-gap: 0;\r\n\r\n  /**\r\n    @prop --go-chip-dismiss-btn-size:\r\n      Width and height of the dismiss button\r\n      - default: calc(1.5em + 2 * var(--go-chip-padding-y))\r\n  */\r\n  --go-chip-dismiss-btn-size: calc(1.5em + 2 * var(--go-chip-padding-y));\r\n}\r\n\r\ngo-chip {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  border: var(--go-chip-border-width) solid var(--go-chip-color-border);\r\n  border-radius: var(--go-chip-radius);\r\n  background-color: var(--go-chip-color-bg);\r\n  color: var(--go-chip-color-fg);\r\n  font-size: var(--go-chip-font-size);\r\n\r\n  .chip-main {\r\n    padding: var(--go-chip-padding);\r\n    border-radius: calc(var(--go-chip-radius) - var(--go-chip-border-width));\r\n    line-height: 1.5;\r\n    display: flex;\r\n    gap: var(--go-chip-gap);\r\n    align-items: center;\r\n  }\r\n\r\n  // outline\r\n  &[outline] {\r\n    background-color: transparent;\r\n  }\r\n\r\n  // clickable\r\n  &.clickable {\r\n    .chip-main {\r\n      @include reset-btn;\r\n      @include clickable;\r\n\r\n      &:hover,\r\n      &:focus-visible {\r\n        background-color: var(--go-chip-color-bg-hover);\r\n      }\r\n    }\r\n    &.dismissible {\r\n      .chip-main {\r\n        border-top-right-radius: 0;\r\n        border-bottom-right-radius: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  // dismissible\r\n  &.dismissible {\r\n    gap: var(--go-chip-dismiss-btn-gap);\r\n    align-items: stretch;\r\n\r\n    .chip-main {\r\n      position: relative;\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        top: var(--go-chip-padding-y);\r\n        right: 0;\r\n        bottom: var(--go-chip-padding-y);\r\n        width: 1px;\r\n        background: var(--go-chip-color-border);\r\n        filter: brightness(0.9);\r\n      }\r\n    }\r\n    .dismiss-btn {\r\n      @include reset-btn;\r\n      @include clickable;\r\n\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      border-radius: calc(var(--go-chip-radius) - var(--go-chip-border-width));\r\n      border-top-left-radius: 0;\r\n      border-bottom-left-radius: 0;\r\n      width: var(--go-chip-dismiss-btn-size);\r\n      height: var(--go-chip-dismiss-btn-size);\r\n      svg {\r\n        display: block;\r\n        width: auto;\r\n        height: 1.2em;\r\n      }\r\n      &:hover,\r\n      &:focus-visible {\r\n        background-color: var(--go-chip-color-bg-hover);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Color variants\r\n@mixin chip-light-overrides {\r\n  go-chip {\r\n    // colors 'primary' | 'secondary' | 'success' | 'critical' | 'neutral'\r\n    &[variant='primary'] {\r\n      --go-chip-color-border: var(--go-color-primary-200);\r\n      --go-chip-color-bg: var(--go-color-primary-200);\r\n      --go-chip-color-bg-hover: var(--go-color-primary-300);\r\n    }\r\n    &[variant='secondary'] {\r\n      --go-chip-color-border: var(--go-color-secondary-200);\r\n      --go-chip-color-bg: var(--go-color-secondary-200);\r\n      --go-chip-color-bg-hover: var(--go-color-secondary-300);\r\n    }\r\n    &[variant='success'] {\r\n      --go-chip-color-border: var(--go-color-success-200);\r\n      --go-chip-color-bg: var(--go-color-success-200);\r\n      --go-chip-color-bg-hover: var(--go-color-success-300);\r\n    }\r\n    &[variant='critical'] {\r\n      --go-chip-color-border: var(--go-color-critical-200);\r\n      --go-chip-color-bg: var(--go-color-critical-200);\r\n      --go-chip-color-bg-hover: var(--go-color-critical-300);\r\n    }\r\n    &[variant='neutral'] {\r\n      --go-chip-color-border: var(--go-color-neutral-200);\r\n      --go-chip-color-bg: var(--go-color-neutral-200);\r\n      --go-chip-color-bg-hover: var(--go-color-neutral-300);\r\n    }\r\n  }\r\n}\r\n@mixin chip-dark-overrides {\r\n  go-chip {\r\n    // colors 'primary' | 'secondary' | 'success' | 'critical' | 'neutral'\r\n    &[variant='primary'] {\r\n      --go-chip-color-border: var(--go-color-primary-400);\r\n      --go-chip-color-bg: var(--go-color-primary-400);\r\n      --go-chip-color-bg-hover: var(--go-color-primary-500);\r\n    }\r\n    &[variant='secondary'] {\r\n      --go-chip-color-border: var(--go-color-secondary-300);\r\n      --go-chip-color-bg: var(--go-color-secondary-300);\r\n      --go-chip-color-bg-hover: var(--go-color-secondary-400);\r\n    }\r\n    &[variant='success'] {\r\n      --go-chip-color-border: var(--go-color-success-300);\r\n      --go-chip-color-bg: var(--go-color-success-300);\r\n      --go-chip-color-bg-hover: var(--go-color-success-400);\r\n    }\r\n    &[variant='critical'] {\r\n      --go-chip-color-border: var(--go-color-critical-300);\r\n      --go-chip-color-bg: var(--go-color-critical-300);\r\n      --go-chip-color-bg-hover: var(--go-color-critical-400);\r\n    }\r\n    &[variant='neutral'] {\r\n      --go-chip-color-border: var(--go-color-neutral-300);\r\n      --go-chip-color-bg: var(--go-color-neutral-300);\r\n      --go-chip-color-bg-hover: var(--go-color-neutral-400);\r\n    }\r\n  }\r\n}\r\n\r\n@include prefer-light {\r\n  @include chip-light-overrides;\r\n}\r\n@include prefer-dark {\r\n  @include chip-dark-overrides;\r\n}\r\n@include theme-light {\r\n  @include chip-light-overrides;\r\n}\r\n@include theme-dark {\r\n  @include chip-dark-overrides;\r\n}\r\n","import { Component, Host, h, Element, Prop, Event, EventEmitter } from '@stencil/core';\r\nimport { ChipVariants } from '../../interfaces/variants';\r\nimport { hasSlot } from '../../utils/helper';\r\n\r\n@Component({\r\n  tag: 'go-chip',\r\n  styleUrl: 'go-chip.scss',\r\n  shadow: false,\r\n})\r\nexport class GoChip {\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Colour variant of the chip\r\n   */\r\n  @Prop({ reflect: true }) variant: ChipVariants = 'neutral';\r\n\r\n  /**\r\n   * If `outline` is true, the button will have a border based on selected variant\r\n   * @see `variant` property\r\n   */\r\n  @Prop({ reflect: true }) outline?: boolean = false;\r\n\r\n  /**\r\n   * Make chip clickable, `chipClick` event will be emitted on click\r\n   */\r\n  @Prop() clickable?: boolean = false;\r\n\r\n  /**\r\n   * Make chip dismissible, close button will be shown and `chipDismiss` event will be emitted when close button is clicked\r\n   */\r\n  @Prop() dismissible?: boolean = false;\r\n\r\n  /**\r\n   * Emitted on chip click, only if `clickable` is true\r\n   */\r\n  @Event() chipClick: EventEmitter;\r\n\r\n  /**\r\n   * Emitted on chip dismiss, only if `dismissible` is true\r\n   */\r\n  @Event() chipDismissed: EventEmitter;\r\n\r\n  onChipClickHandler() {\r\n    this.chipClick.emit();\r\n  }\r\n\r\n  onChipDismissedHandler() {\r\n    this.chipDismissed.emit();\r\n  }\r\n\r\n  private hasPrefix = false;\r\n\r\n  private hasSuffix = false;\r\n\r\n  componentWillLoad() {\r\n    this.hasPrefix = hasSlot(this.el, 'prefix');\r\n    this.hasSuffix = hasSlot(this.el, 'suffix');\r\n  }\r\n\r\n  render() {\r\n    const { hasPrefix, hasSuffix, clickable, dismissible } = this;\r\n    const Tag = clickable ? 'button' : 'div';\r\n    return (\r\n      <Host\r\n        class={{\r\n          dismissible,\r\n          clickable,\r\n        }}>\r\n        <Tag type={clickable ? 'button' : null} class=\"chip-main\" onClick={clickable ? () => this.onChipClickHandler() : undefined}>\r\n          {hasPrefix ? (\r\n            <span class=\"prefix\">\r\n              <slot name=\"prefix\"></slot>\r\n            </span>\r\n          ) : null}\r\n          <span class=\"label\">\r\n            <slot></slot>\r\n          </span>\r\n          {hasSuffix ? (\r\n            <span class=\"suffix\">\r\n              <slot name=\"suffix\"></slot>\r\n            </span>\r\n          ) : null}\r\n        </Tag>\r\n        {dismissible ? (\r\n          <button class=\"dismiss-btn\" onClick={() => this.onChipDismissedHandler()}>\r\n            <span class=\"visually-hidden\">Dismiss</span>\r\n            <svg\r\n              aria-hidden=\"true\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              stroke-width=\"2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              viewBox=\"0 0 24 24\">\r\n              <path d=\"M18 6 6 18M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        ) : null}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"oJAAA,MAAMA,EAAY,s2O,MCSLC,EAAM,M,2GA0CTC,KAAAC,UAAY,MAEZD,KAAAE,UAAY,M,aAtC6B,U,aAMJ,M,eAKf,M,iBAKE,K,CAYhC,kBAAAC,GACEH,KAAKI,UAAUC,M,CAGjB,sBAAAC,GACEN,KAAKO,cAAcF,M,CAOrB,iBAAAG,GACER,KAAKC,UAAYQ,EAAQT,KAAKU,GAAI,UAClCV,KAAKE,UAAYO,EAAQT,KAAKU,GAAI,S,CAGpC,MAAAC,GACE,MAAMV,UAAEA,EAASC,UAAEA,EAASU,UAAEA,EAASC,YAAEA,GAAgBb,KACzD,MAAMc,EAAMF,EAAY,SAAW,MACnC,OACEG,EAACC,EAAI,CACHC,MAAO,CACLJ,cACAD,cAEFG,EAACD,EAAG,CAACI,KAAMN,EAAY,SAAW,KAAMK,MAAM,YAAYE,QAASP,EAAY,IAAMZ,KAAKG,qBAAuBiB,WAC9GnB,EACCc,EAAA,QAAME,MAAM,UACVF,EAAA,QAAMM,KAAK,YAEX,KACJN,EAAA,QAAME,MAAM,SACVF,EAAA,cAEDb,EACCa,EAAA,QAAME,MAAM,UACVF,EAAA,QAAMM,KAAK,YAEX,MAELR,EACCE,EAAA,UAAQE,MAAM,cAAcE,QAAS,IAAMnB,KAAKM,0BAC9CS,EAAA,QAAME,MAAM,mBAAiB,WAC7BF,EAAA,qBACc,OACZO,MAAM,6BACNC,KAAK,OACLC,OAAO,eAAc,eACR,IAAG,iBACD,QAAO,kBACN,QAChBC,QAAQ,aACRV,EAAA,QAAMW,EAAE,2BAGV,K"}