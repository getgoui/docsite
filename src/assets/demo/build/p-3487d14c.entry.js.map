{"version":3,"names":["goSwitchCss","GoSwitch","this","attrs","handleChange","e","checked","target","componentWillLoad","propNames","Object","keys","attributeNames","map","name","kebabCase","inheritAttributes","el","render","label","disabled","value","stack","fullWidth","showOnOff","showOnOffOutside","activeLabel","inactiveLabel","inputId","id","uniqueId","h","Host","class","htmlFor","assign","ref","inputEl","type","role","onChange"],"sources":["src/components/form/go-switch/go-switch.scss?tag=go-switch","src/components/form/go-switch/go-switch.tsx"],"sourcesContent":["go-switch {\r\n  /**\r\n    @prop --switch-width:\r\n      width of switch control\r\n      - default: 4rem\r\n  */\r\n  --switch-width: 4rem;\r\n\r\n  /**\r\n    @prop --switch-height:\r\n      height of switch control\r\n      - default: 2rem\r\n  */\r\n  --switch-height: 2rem;\r\n\r\n  /**\r\n    @prop --switch-bg-color:\r\n      default background color of switch control\r\n      - default: var(--go-color-neutral-500)\r\n  */\r\n  --switch-bg-color: var(--go-color-neutral-500);\r\n\r\n  /**\r\n    @prop --switch-bg-color-checked:\r\n      background color of switch control when checked\r\n      - default: var(--go-color-primary-600)\r\n  */\r\n  --switch-bg-color-checked: var(--go-color-primary-600);\r\n\r\n  /**\r\n    @prop --switch-label-gap:\r\n      gap between label and switch control\r\n      - default: 1rem\r\n  */\r\n  --switch-label-gap: 1rem;\r\n\r\n  /**\r\n    @prop --switch-radius:\r\n      border radius of switch control\r\n      - default: var(--radius-round)\r\n  */\r\n  --switch-radius: var(--radius-round);\r\n\r\n  /**\r\n    @prop --switch-handle-color:\r\n      color of the switch handle\r\n      - default: #fff\r\n  */\r\n  --switch-handle-color: #fff;\r\n\r\n  /**\r\n    @prop --switch-handle-gap:\r\n      gap between handle circle and the edge of the switch\r\n      - default: 4px\r\n  */\r\n  --switch-handle-gap: 4px;\r\n\r\n  /**\r\n    @prop --switch-handle-shadow:\r\n      box shadow for the handle circle\r\n      - default: var(--shadow-2)\r\n  */\r\n  --switch-handle-shadow: var(--shadow-2);\r\n\r\n  /**\r\n    @prop --switch-shadow:\r\n      shadow on the switch track\r\n      - default: var(--inner-shadow-1)\r\n  */\r\n  --switch-shadow: var(--inner-shadow-1);\r\n\r\n  /**\r\n    @prop --switch-text-color:\r\n      Text color for on off label\r\n      - default: #fff\r\n  */\r\n  --switch-text-color: #fff;\r\n  --switch-handle-size: calc(min(var(--switch-width), var(--switch-height)) - 2 * var(--switch-handle-gap));\r\n\r\n  /**\r\n    @prop --switch-text-size:\r\n      Inner text size of switch\r\n      - default: max(calc(var(--switch-handle-size) / 2), 14px)\r\n  */\r\n  --switch-text-size: max(calc(var(--switch-handle-size) / 2), 14px);\r\n\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  gap: var(--switch-label-gap);\r\n  &.stack {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: var(--form-label-gap);\r\n  }\r\n  &.full-width {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  label {\r\n    font-weight: 700;\r\n  }\r\n\r\n  .switch-container {\r\n    position: relative;\r\n  }\r\n  .switch-group {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: calc(var(--switch-label-gap) / 2);\r\n  }\r\n  .switch-track {\r\n    @include transition(background-color, outline-offset var(--go-duration-fast));\r\n\r\n    display: block;\r\n    position: relative;\r\n    padding-inline: var(--switch-handle-gap);\r\n    width: var(--switch-width);\r\n    height: var(--switch-height);\r\n    background: var(--switch-bg-color);\r\n    border-radius: var(--switch-radius);\r\n    box-shadow: var(--switch-shadow);\r\n\r\n    .switch-text {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: auto;\r\n      right: 20%;\r\n      transform: translateY(-50%);\r\n      color: var(--switch-text-color);\r\n      font-size: var(--switch-text-size);\r\n      line-height: 1;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  .switch-handle {\r\n    display: block;\r\n    position: absolute;\r\n    top: var(--switch-handle-gap);\r\n    left: var(--switch-handle-gap);\r\n    bottom: var(--switch-handle-gap);\r\n    z-index: 1;\r\n    background: var(--switch-handle-color);\r\n    width: var(--switch-handle-size);\r\n    height: var(--switch-handle-size);\r\n    border-radius: var(--switch-radius);\r\n    box-shadow: var(--switch-handle-shadow);\r\n    @include transition(transform var(--go-duration-fast));\r\n  }\r\n\r\n  input {\r\n    opacity: 0;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n    outline: none;\r\n    cursor: pointer;\r\n    &:checked {\r\n      ~ .switch-group {\r\n        .switch-track {\r\n          --switch-bg-color: var(--switch-bg-color-checked);\r\n          .switch-handle {\r\n            transform: translateX(calc(var(--switch-width) - var(--switch-handle-size) - 2 * var(--switch-handle-gap)));\r\n          }\r\n          .switch-text {\r\n            left: 20%;\r\n            right: auto;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    &:focus-visible {\r\n      &:active {\r\n        ~ .switch-group {\r\n          .switch-track {\r\n            outline-offset: 0;\r\n          }\r\n        }\r\n      }\r\n      ~ .switch-group {\r\n        .switch-track {\r\n          outline: var(--go-focus-outline-width) solid var(--switch-bg-color);\r\n          outline-offset: var(--go-focus-outline-offset);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, h, Element, Prop } from '@stencil/core';\r\nimport { inheritAttributes } from '../../../utils/helper';\r\nimport { uniqueId, kebabCase } from 'lodash-es';\r\nimport { CheckboxProps } from '../../../interfaces/form';\r\n\r\n@Component({\r\n  tag: 'go-switch',\r\n  styleUrl: 'go-switch.scss',\r\n  shadow: false,\r\n})\r\nexport class GoSwitch implements CheckboxProps {\r\n  @Prop({ mutable: true })\r\n  checked?: boolean;\r\n\r\n  @Prop()\r\n  name: string;\r\n\r\n  @Prop()\r\n  label: string;\r\n\r\n  @Prop()\r\n  disabled?: boolean;\r\n\r\n  @Prop()\r\n  value: any;\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Display label on top of switch\r\n   */\r\n  @Prop() stack = false;\r\n\r\n  /**\r\n   * make this field full width\r\n   */\r\n  @Prop() fullWidth = false;\r\n\r\n  /**\r\n   * show on/off text in switch toggle\r\n   */\r\n  @Prop() showOnOff = false;\r\n\r\n  /**\r\n   * show on/off text next to the switch toggle\r\n   */\r\n  @Prop() showOnOffOutside = false;\r\n\r\n  /**\r\n   * \"on\" label to show when `showOnOff*` is set to true\r\n   */\r\n  @Prop() activeLabel: string = 'On';\r\n\r\n  /**\r\n   * \"off\" label to show when `showOnOff*` is set to true\r\n   */\r\n  @Prop() inactiveLabel: string = 'Off';\r\n\r\n  inputEl: HTMLInputElement;\r\n\r\n  handleChange(e) {\r\n    this.checked = e.target.checked;\r\n  }\r\n\r\n  // Store attributes inherited from the host element\r\n  private attrs = {} as any;\r\n  componentWillLoad() {\r\n    const propNames = Object.keys(this['__proto__']);\r\n    const attributeNames = propNames.map((name) => kebabCase(name));\r\n    this.attrs = inheritAttributes(this.el, ['class', 'style', ...attributeNames]);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      checked,\r\n      name,\r\n      label,\r\n      disabled,\r\n      value,\r\n      attrs,\r\n      stack,\r\n      fullWidth,\r\n      showOnOff,\r\n      showOnOffOutside,\r\n      activeLabel,\r\n      inactiveLabel,\r\n    } = this;\r\n    const inputId = attrs?.id ? attrs.id : uniqueId('go-switch-');\r\n    return (\r\n      <Host class={{ stack, 'full-width': fullWidth }}>\r\n        <label htmlFor={inputId}>{label}</label>\r\n        <div class=\"switch-container\">\r\n          <input\r\n            ref={(el) => (this.inputEl = el)}\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id={inputId}\r\n            name={name}\r\n            disabled={disabled}\r\n            checked={checked}\r\n            value={value}\r\n            {...attrs}\r\n            onChange={(e) => this.handleChange(e)}\r\n          />\r\n          <div class=\"switch-group\">\r\n            <span class=\"switch-track\">\r\n              <span class=\"switch-handle\"></span>\r\n              {showOnOff ? (\r\n                <span class=\"switch-text\" aria-hidden=\"true\">\r\n                  {checked ? activeLabel : inactiveLabel}\r\n                </span>\r\n              ) : null}\r\n            </span>\r\n            {showOnOffOutside ? (\r\n              <span class=\"text-size-0\" aria-hidden=\"true\">\r\n                {checked ? activeLabel : inactiveLabel}\r\n              </span>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"6LAAA,MAAMA,EAAc,izF,MCUPC,EAAQ,M,yBAuDXC,KAAAC,MAAQ,G,wHAlCA,M,eAKI,M,eAKA,M,sBAKO,M,iBAKG,K,mBAKE,K,CAIhC,YAAAC,CAAaC,GACXH,KAAKI,QAAUD,EAAEE,OAAOD,O,CAK1B,iBAAAE,GACE,MAAMC,EAAYC,OAAOC,KAAKT,KAAK,cACnC,MAAMU,EAAiBH,EAAUI,KAAKC,GAASC,EAAUD,KACzDZ,KAAKC,MAAQa,EAAkBd,KAAKe,GAAI,CAAC,QAAS,WAAYL,G,CAGhE,MAAAM,GACE,MAAMZ,QACJA,EAAOQ,KACPA,EAAIK,MACJA,EAAKC,SACLA,EAAQC,MACRA,EAAKlB,MACLA,EAAKmB,MACLA,EAAKC,UACLA,EAASC,UACTA,EAASC,iBACTA,EAAgBC,YAChBA,EAAWC,cACXA,GACEzB,KACJ,MAAM0B,GAAUzB,IAAK,MAALA,SAAK,SAALA,EAAO0B,IAAK1B,EAAM0B,GAAKC,EAAS,cAChD,OACEC,EAACC,EAAI,CAACC,MAAO,CAAEX,QAAO,aAAcC,IAClCQ,EAAA,SAAOG,QAASN,GAAUT,GAC1BY,EAAA,OAAKE,MAAM,oBACTF,EAAA,QAAArB,OAAAyB,OAAA,CACEC,IAAMnB,GAAQf,KAAKmC,QAAUpB,EAC7BqB,KAAK,WACLC,KAAK,SACLV,GAAID,EACJd,KAAMA,EACNM,SAAUA,EACVd,QAASA,EACTe,MAAOA,GACHlB,EAAK,CACTqC,SAAWnC,GAAMH,KAAKE,aAAaC,MAErC0B,EAAA,OAAKE,MAAM,gBACTF,EAAA,QAAME,MAAM,gBACVF,EAAA,QAAME,MAAM,kBACXT,EACCO,EAAA,QAAME,MAAM,cAAa,cAAa,QACnC3B,EAAUoB,EAAcC,GAEzB,MAELF,EACCM,EAAA,QAAME,MAAM,cAAa,cAAa,QACnC3B,EAAUoB,EAAcC,GAEzB,O"}