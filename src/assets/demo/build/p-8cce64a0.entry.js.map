{"version":3,"names":["goTabCss","GoTab","componentWillLoad","render","panelId","tabId","active","this","h","Host","tabindex","role","id","class"],"sources":["src/components/go-tabs/go-tab.scss?tag=go-tab","src/components/go-tabs/go-tab.tsx"],"sourcesContent":["go-tab {\r\n  display: none;\r\n\r\n  &.active {\r\n    display: block;\r\n  }\r\n}\r\n","import { Component, h, Prop, Element, Host } from '@stencil/core';\r\n@Component({\r\n  tag: 'go-tab',\r\n  styleUrl: 'go-tab.scss',\r\n})\r\nexport class GoTab {\r\n  @Element() el: HTMLElement;\r\n\r\n  @Prop() label: string;\r\n\r\n  /**\r\n   * If this tab is currently active\r\n   * if multiple `go-tab` are active in the same `go-tabs`, first one is active.\r\n   */\r\n  @Prop({ mutable: true }) active: boolean;\r\n\r\n  /**\r\n   * `id` for the tab button element.\r\n   * If not provided, a unique id will be generated.\r\n   */\r\n  @Prop({ mutable: true }) tabId?: string;\r\n\r\n  /**\r\n   * id for the tab panel element\r\n   * If not provided, a unique id will be generated.\r\n   */\r\n  @Prop({ mutable: true }) panelId?: string;\r\n\r\n  componentWillLoad() {}\r\n\r\n  render() {\r\n    const { panelId, tabId, active } = this;\r\n    return (\r\n      <Host tabindex=\"0\" role=\"tabpanel\" id={panelId} aria-labelledby={tabId} class={{ 'tab-panel': true, active }}>\r\n        <slot></slot>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"yDAAA,MAAMA,EAAW,mD,MCKJC,EAAK,M,gHAuBhB,iBAAAC,GAAiB,CAEjB,MAAAC,GACE,MAAMC,QAAEA,EAAOC,MAAEA,EAAKC,OAAEA,GAAWC,KACnC,OACEC,EAACC,EAAI,CAACC,SAAS,IAAIC,KAAK,WAAWC,GAAIR,EAAO,kBAAmBC,EAAOQ,MAAO,CAAE,YAAa,KAAMP,WAClGE,EAAA,a"}