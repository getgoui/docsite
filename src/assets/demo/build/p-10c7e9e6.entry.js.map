{"version":3,"names":["goGovAuLogoCss","GoGovAuLogo","this","inheritedAttributes","componentWillLoad","inheritAttributes","el","render","height","Tag","href","h","Host","Object","assign","class","style","name","hasSlot"],"sources":["src/patterns/go-gov-au-logo/go-gov-au-logo.scss?tag=go-gov-au-logo","src/patterns/go-gov-au-logo/go-gov-au-logo.tsx"],"sourcesContent":["go-gov-au-logo {\r\n  --divider-color: var(--go-color-darkest);\r\n  --divider-width: 1px;\r\n  --divider-gap: 1rem;\r\n  --link-color: currentColor;\r\n\r\n  .logo-wrapper {\r\n    text-decoration: none;\r\n    display: inline-flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: var(--link-color);\r\n    .main-brand {\r\n      img {\r\n        height: var(--logo-height, 3rem);\r\n      }\r\n    }\r\n    .divider {\r\n      width: var(--divider-width);\r\n      height: auto;\r\n      align-self: stretch;\r\n      background-color: var(--divider-color);\r\n      margin: 0 var(--divider-gap);\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, h, Element, Prop } from '@stencil/core';\r\nimport { hasSlot, inheritAttributes } from '../../utils/helper';\r\n\r\n/**\r\n * @slot crest - This should be where you reference the Australian Government crest img resource (on light background).\r\n * @slot crest-on-dark - This should be where you reference the Australian Government crest img resource (on dark background).\r\n * @slot co-brand - Add co-branding agency logo / elements here.\r\n */\r\n@Component({\r\n  tag: 'go-gov-au-logo',\r\n  styleUrl: 'go-gov-au-logo.scss',\r\n  shadow: false,\r\n})\r\nexport class GoGovAuLogo {\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Set height of the logo group. Slots will be scaled to this height.\r\n   * Width is set to auto to avoid image distortion.\r\n   */\r\n  @Prop() height: string = '3rem';\r\n\r\n  /**\r\n   * If href is provided, logo will be wrapped inside an anchor (`a`) tag. By default, all attributes except `class` and `style` are passed through to the anchor tag.\r\n   */\r\n  @Prop() href?: string;\r\n\r\n  private inheritedAttributes = {} as any;\r\n  componentWillLoad() {\r\n    this.inheritedAttributes = inheritAttributes(this.el, ['class', 'style'], false);\r\n  }\r\n\r\n  render() {\r\n    const { height, inheritedAttributes } = this;\r\n    const Tag = this.href ? 'a' : 'div';\r\n    return (\r\n      <Host>\r\n        <Tag {...inheritedAttributes} class=\"logo-wrapper\" style={{ '--logo-height': height }} href={this.href}>\r\n          <span class=\"main-brand light-only\">\r\n            <slot name=\"main-brand\"></slot>\r\n          </span>\r\n          <span class=\"main-brand dark-only\">\r\n            <slot name=\"main-brand-on-dark\"></slot>\r\n          </span>\r\n          {hasSlot(this.el, 'co-brand') ? <span class=\"divider\"></span> : null}\r\n          <slot name=\"co-brand\"></slot>\r\n        </Tag>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"oJAAA,MAAMA,EAAiB,2gB,MCaVC,EAAW,M,yBAcdC,KAAAC,oBAAsB,G,YAPL,O,oBAQzB,iBAAAC,GACEF,KAAKC,oBAAsBE,EAAkBH,KAAKI,GAAI,CAAC,QAAS,SAAU,M,CAG5E,MAAAC,GACE,MAAMC,OAAEA,EAAML,oBAAEA,GAAwBD,KACxC,MAAMO,EAAMP,KAAKQ,KAAO,IAAM,MAC9B,OACEC,EAACC,EAAI,KACHD,EAACF,EAAGI,OAAAC,OAAA,GAAKX,EAAmB,CAAEY,MAAM,eAAeC,MAAO,CAAE,gBAAiBR,GAAUE,KAAMR,KAAKQ,OAChGC,EAAA,QAAMI,MAAM,yBACVJ,EAAA,QAAMM,KAAK,gBAEbN,EAAA,QAAMI,MAAM,wBACVJ,EAAA,QAAMM,KAAK,wBAEZC,EAAQhB,KAAKI,GAAI,YAAcK,EAAA,QAAMI,MAAM,YAAoB,KAChEJ,EAAA,QAAMM,KAAK,c"}