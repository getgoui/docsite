{"version":3,"names":["goProgressCss","GoProgress","updatePercentage","newValue","this","max","percentage","indeterminate","total","min","Math","round","componentWillLoad","value","render","label","labelledby","showPercentage","ariaAttrs","h","Host","Object","assign","class","track","role","style","transform"],"sources":["src/components/go-progress/go-progress.scss?tag=go-progress","src/components/go-progress/go-progress.tsx"],"sourcesContent":["go-progress {\r\n  --go-progress-color: var(--go-color-primary-600);\r\n  --go-progress-bar-height: 0.25rem;\r\n  --go-progress-padding: var(--go-progress-bar-height) 0;\r\n  --go-progress-radius: var(--radius-round);\r\n  --go-progress-track-color: var(--go-color-neutral-200);\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: var(--go-progress-padding);\r\n  .track {\r\n    flex: 1;\r\n    position: relative;\r\n    height: var(--go-progress-bar-height);\r\n    background-color: var(--go-progress-track-color);\r\n    border-radius: var(--go-progress-radius);\r\n    overflow: hidden;\r\n    .bar {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      bottom: 0;\r\n      right: 0;\r\n      background-color: var(--go-progress-color);\r\n      border-radius: var(--go-progress-radius);\r\n      transform: translateX(-100%);\r\n      @include transition(transform);\r\n    }\r\n    &.indeterminate {\r\n      .bar {\r\n        border-radius: var(--go-progress-radius);\r\n        transform-origin: left center;\r\n        animation: indeterminate-progress 1.5s linear infinite;\r\n        @include reduced-motion {\r\n          transform: translateX(0%) scaleX(30%);\r\n          animation: indeterminate-progress-rm 3s steps(6, jump-none) infinite alternate;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n@keyframes indeterminate-progress {\r\n  0% {\r\n    transform: translateX(-10%) scaleX(0);\r\n  }\r\n  50% {\r\n    transform: translateX(0%) scaleX(70%);\r\n  }\r\n  100% {\r\n    transform: translateX(110%) scaleX(0);\r\n  }\r\n}\r\n\r\n@keyframes indeterminate-progress-rm {\r\n  0% {\r\n    transform-origin: left;\r\n  }\r\n\r\n  100% {\r\n    transform-origin: right;\r\n  }\r\n}\r\n","import { Component, Host, h, Element, Prop, Watch, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'go-progress',\r\n  styleUrl: 'go-progress.scss',\r\n  shadow: false,\r\n})\r\nexport class GoProgress {\r\n  @Element() el: HTMLElement;\r\n  /**\r\n   * min value of the progress bar\r\n   */\r\n  @Prop() min?: number = 0;\r\n  /**\r\n   * Total amount of work required for progress to complete\r\n   */\r\n  @Prop() max?: number = 100;\r\n  /**\r\n   * How much of the task that has been completed\r\n   */\r\n  @Prop({ mutable: true }) value?: number;\r\n\r\n  /**\r\n   * Descriptive label for screen readers to identify the progress bar\r\n   */\r\n  @Prop() label?: string;\r\n\r\n  /**\r\n   * Id of the label element for the progress bar\r\n   */\r\n  @Prop() labelledby?: string;\r\n\r\n  /**\r\n   * Set progress to indeterminate state\r\n   */\r\n  @Prop({ mutable: true }) indeterminate?: boolean = false;\r\n\r\n  /**\r\n   * Display percentage of completion\r\n   */\r\n  @Prop() showPercentage?: boolean = false;\r\n\r\n  @State() percentage: number;\r\n\r\n  @Watch('value')\r\n  updatePercentage(newValue: number) {\r\n    if (typeof newValue !== 'number' || !this.max) {\r\n      this.percentage = 0;\r\n      this.indeterminate = true;\r\n    }\r\n    const total = this.max - this.min;\r\n    this.percentage = Math.round((newValue / total) * 100);\r\n  }\r\n\r\n  componentWillLoad() {\r\n    this.updatePercentage(this.value);\r\n  }\r\n\r\n  render() {\r\n    const { percentage, indeterminate, label, labelledby, value, max, min, showPercentage } = this;\r\n    let ariaAttrs = {\r\n      'aria-valuenow': indeterminate ? null : value,\r\n      'aria-valuemin': indeterminate ? null : min,\r\n      'aria-valuemax': indeterminate ? null : max,\r\n    };\r\n    return (\r\n      <Host>\r\n        <div class={{ track: true, indeterminate }} aria-label={label} aria-labelledby={labelledby} role=\"progressbar\" {...ariaAttrs}>\r\n          <slot></slot>\r\n          <span class=\"bar\" style={indeterminate ? null : { transform: `translateX(-${100 - percentage}%` }}></span>\r\n        </div>\r\n        {showPercentage ? <span class=\"percentage\">{percentage}%</span> : null}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"oDAAA,MAAMA,EAAgB,+6C,MCOTC,EAAU,M,kCAKE,E,SAIA,I,uFAmB4B,M,oBAKhB,M,0BAKnC,gBAAAC,CAAiBC,GACf,UAAWA,IAAa,WAAaC,KAAKC,IAAK,CAC7CD,KAAKE,WAAa,EAClBF,KAAKG,cAAgB,I,CAEvB,MAAMC,EAAQJ,KAAKC,IAAMD,KAAKK,IAC9BL,KAAKE,WAAaI,KAAKC,MAAOR,EAAWK,EAAS,I,CAGpD,iBAAAI,GACER,KAAKF,iBAAiBE,KAAKS,M,CAG7B,MAAAC,GACE,MAAMR,WAAEA,EAAUC,cAAEA,EAAaQ,MAAEA,EAAKC,WAAEA,EAAUH,MAAEA,EAAKR,IAAEA,EAAGI,IAAEA,EAAGQ,eAAEA,GAAmBb,KAC1F,IAAIc,EAAY,CACd,gBAAiBX,EAAgB,KAAOM,EACxC,gBAAiBN,EAAgB,KAAOE,EACxC,gBAAiBF,EAAgB,KAAOF,GAE1C,OACEc,EAACC,EAAI,KACHD,EAAA,MAAAE,OAAAC,OAAA,CAAKC,MAAO,CAAEC,MAAO,KAAMjB,iBAAe,aAAcQ,EAAK,kBAAmBC,EAAYS,KAAK,eAAkBP,GACjHC,EAAA,aACAA,EAAA,QAAMI,MAAM,MAAMG,MAAOnB,EAAgB,KAAO,CAAEoB,UAAW,eAAe,IAAMrB,SAEnFW,EAAiBE,EAAA,QAAMI,MAAM,cAAcjB,EAAU,KAAY,K"}