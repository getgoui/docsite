{"version":3,"names":["goDialogCss","GoDialog","this","headingId","uniqueId","close","active","open","watchActiveHandler","isActive","handleOverlayClose","render","heading","persistent","headingTag","H","h","class","role","ref","el","overlayEl","onOverlayClose","id","name","flat","icon","stack","variant","onClick","xmlns","fill","stroke","viewBox","d"],"sources":["src/components/go-dialog/go-dialog.scss?tag=go-dialog","src/components/go-dialog/go-dialog.tsx"],"sourcesContent":["go-overlay.go-dialog {\r\n  --go-overlay-content-padding-y: 1.5rem;\r\n  --go-overlay-content-padding-x: 1.5rem;\r\n  --go-overlay-content-width: 80%;\r\n  --go-overlay-content-bg-color: var(--go-color-bg);\r\n  --go-overlay-content-max-width: 1140px;\r\n  --go-overlay-content-gap: 10vh;\r\n  --go-overlay-close-btn-text-color: currentColor;\r\n\r\n  display: grid;\r\n  place-items: center;\r\n\r\n  .overlay-content {\r\n    position: relative;\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: var(--go-overlay-content-padding-y) var(--go-overlay-content-padding-x);\r\n    max-width: var(--go-overlay-content-max-width);\r\n    background: var(--go-overlay-content-bg-color);\r\n    @include tablet {\r\n      width: var(--go-overlay-content-width);\r\n      height: auto;\r\n      margin: var(--go-overlay-content-gap) auto;\r\n      border-radius: var(--radius-3);\r\n    }\r\n  }\r\n  .overlay-heading {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n    .heading{\r\n      font-size: var(--go-size-3);\r\n      font-weight: 500;\r\n      line-height: 1.5;\r\n    }\r\n    .close-btn {\r\n      flex: 0;\r\n    }\r\n  }\r\n}\r\n","import { Component, h, Element, Prop, Method, Watch } from '@stencil/core';\r\nimport { uniqueId } from 'lodash-es';\r\n\r\n@Component({\r\n  tag: 'go-dialog',\r\n  styleUrl: 'go-dialog.scss',\r\n  shadow: false,\r\n})\r\nexport class GoDialog {\r\n  @Element() el: HTMLElement;\r\n  /**\r\n   * If this dialog is active\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) active: boolean = false;\r\n\r\n  /**\r\n   * If persistent, the overlay will not be closed when the user clicks outside of it or presses the escape key.\r\n   */\r\n  @Prop() persistent: boolean = false;\r\n  /**\r\n   * Heading of the overlay content\r\n   */\r\n  @Prop() heading?: string;\r\n\r\n  /**\r\n   * HTML tag for the heading\r\n   */\r\n  @Prop() headingTag?: string = 'h2';\r\n\r\n  // aria-labelledby https://www.w3.org/TR/wai-aria-practices/examples/dialog-modal/dialog.html\r\n  headingId: string = uniqueId('overlay-label-');\r\n\r\n  overlayEl: HTMLElement;\r\n\r\n  @Method()\r\n  async close() {\r\n    this.active = false;\r\n  }\r\n\r\n  @Method()\r\n  async open() {\r\n    this.active = true;\r\n  }\r\n\r\n  @Watch('active')\r\n  watchActiveHandler(isActive: boolean): void {\r\n    if (isActive) {\r\n      this.open();\r\n      return;\r\n    }\r\n    this.close();\r\n  }\r\n\r\n  // keep active state in sync with overlay\r\n  handleOverlayClose() {\r\n    this.close();\r\n  }\r\n\r\n  render() {\r\n    const { active, heading, persistent, headingId, headingTag: H } = this;\r\n    return (\r\n      <go-overlay\r\n        class=\"go-dialog\"\r\n        persistent={persistent}\r\n        role=\"dialog\"\r\n        aria-modal=\"true\"\r\n        aria-labelledby={headingId}\r\n        active={active}\r\n        aria-hidden={active ? 'false' : 'true'}\r\n        ref={(el) => (this.overlayEl = el)}\r\n        onOverlayClose={() => this.handleOverlayClose()}>\r\n        <div class=\"overlay-heading\" id={headingId}>\r\n          <slot name=\"heading\">\r\n            <H class=\"heading\">{heading}</H>\r\n          </slot>\r\n          {!persistent ? (\r\n            <go-button\r\n              class=\"close-btn\"\r\n              flat\r\n              icon\r\n              stack\r\n              variant=\"text\"\r\n              onClick={() => this.close()}\r\n              aria-label=\"Close dialog\">\r\n              <svg\r\n                aria-hidden=\"true\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                stroke-width=\"2\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                viewBox=\"0 0 24 24\">\r\n                <path d=\"M18 6 6 18M6 6l12 12\" />\r\n              </svg>\r\n            </go-button>\r\n          ) : null}\r\n        </div>\r\n        <slot></slot>\r\n      </go-overlay>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"sFAAA,MAAMA,EAAc,ygC,MCQPC,EAAQ,M,yBAsBnBC,KAAAC,UAAoBC,EAAS,kB,YAjB6B,M,gBAK5B,M,uCASA,I,CAQ9B,WAAMC,GACJH,KAAKI,OAAS,K,CAIhB,UAAMC,GACJL,KAAKI,OAAS,I,CAIhB,kBAAAE,CAAmBC,GACjB,GAAIA,EAAU,CACZP,KAAKK,OACL,M,CAEFL,KAAKG,O,CAIP,kBAAAK,GACER,KAAKG,O,CAGP,MAAAM,GACE,MAAML,OAAEA,EAAMM,QAAEA,EAAOC,WAAEA,EAAUV,UAAEA,EAAWW,WAAYC,GAAMb,KAClE,OACEc,EAAA,cACEC,MAAM,YACNJ,WAAYA,EACZK,KAAK,SAAQ,aACF,OAAM,kBACAf,EACjBG,OAAQA,EAAM,cACDA,EAAS,QAAU,OAChCa,IAAMC,GAAQlB,KAAKmB,UAAYD,EAC/BE,eAAgB,IAAMpB,KAAKQ,sBAC3BM,EAAA,OAAKC,MAAM,kBAAkBM,GAAIpB,GAC/Ba,EAAA,QAAMQ,KAAK,WACTR,EAACD,EAAC,CAACE,MAAM,WAAWL,KAEpBC,EACAG,EAAA,aACEC,MAAM,YACNQ,KAAI,KACJC,KAAI,KACJC,MAAK,KACLC,QAAQ,OACRC,QAAS,IAAM3B,KAAKG,QAAO,aAChB,gBACXW,EAAA,qBACc,OACZc,MAAM,6BACNC,KAAK,OACLC,OAAO,eAAc,eACR,IAAG,iBACD,QAAO,kBACN,QAChBC,QAAQ,aACRjB,EAAA,QAAMkB,EAAE,2BAGV,MAENlB,EAAA,a"}