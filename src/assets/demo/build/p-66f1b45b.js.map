{"version":3,"names":["mm","query","window","matchMedia","prefersDark","matches","prefersReducedMotion","watchDevice","callback","syncEl","document","createElement","setAttribute","body","appendChild","observer","ResizeObserver","entries","style","getComputedStyle","getPropertyValue","replace","observe","inheritAttributes","el","excludes","remove","attributes","attributeObject","i","length","name","value","indexOf","key","removeAttribute","inheritComponentAttrs","component","warning","Array","from","$attrs","removeAttrs","propNames","Object","keys","getPrototypeOf","this","extractId","id","hasShadowDom","shadowRoot","attachShadow","hasSlot","slotName","querySelector","isDarkMode","darkByAttribute","documentElement","getAttribute","selectDirectChildren","elem","selector","prototype","filter","call","children","child","args","console","log","warn","initIdProps","instance","rootEl","idProps","prefix","uniqueId","forEach","parseItems","items","JSON5","parse","e"],"sources":["src/utils/match-media.ts","src/utils/helper.ts"],"sourcesContent":["/**\r\n * short hand for matchMedia\r\n * @param query media query string\r\n * @returns {MediaQueryList}\r\n */\r\nexport function mm(query: string): MediaQueryList {\r\n  return window.matchMedia(query);\r\n}\r\n/**\r\n * Checks if prefer dark mode\r\n * @returns {boolean} if user has dark mode set in OS\r\n */\r\nexport function prefersDark(): boolean {\r\n  return mm('(prefers-color-scheme: dark)').matches;\r\n}\r\n/**\r\n * Checks if prefers reduced motion\r\n * @returns {boolean} if user prefers reduced motion\r\n */\r\nexport function prefersReducedMotion(): boolean {\r\n  return mm('(prefers-reduced-motion: reduce)').matches;\r\n}\r\n\r\nexport type BuiltInDeviceTypes = 'mobile' | 'tablet' | 'desktop' | 'large';\r\n\r\nexport function watchDevice(callback: (device: BuiltInDeviceTypes) => void): void {\r\n  const syncEl = document.createElement('div');\r\n  syncEl.setAttribute('id', 'sync-mq');\r\n  document.body.appendChild(syncEl);\r\n  var observer = new ResizeObserver(function (entries) {\r\n    // get device type from body content\r\n    if (!entries[0]) {\r\n      return;\r\n    }\r\n    const style = getComputedStyle(syncEl, '::before').getPropertyValue('content');\r\n    callback(style.replace(/\"/g, '') as BuiltInDeviceTypes);\r\n  });\r\n\r\n  observer.observe(syncEl);\r\n}\r\n","import { prefersDark } from './match-media';\r\nimport { uniqueId } from 'lodash-es';\r\nimport JSON5 from 'json5';\r\n\r\ndeclare const __zone_symbol__requestAnimationFrame: any;\r\ndeclare const requestAnimationFrame: any;\r\n\r\n/**\r\n * Extract attributes set on the an element.\r\n * @param {HTMLElement} el - The element to check.\r\n * @param {string[]} [excludes=[]] - A list of attribute names to exclude.\r\n * @param {boolean} [remove=true] - Remove the attributes after extracting them.\r\n */\r\nexport const inheritAttributes = (el: HTMLElement, excludes: string[] = [], remove: boolean = true) => {\r\n  if (!el) {\r\n    return {};\r\n  }\r\n  const attributes = el.attributes as NamedNodeMap;\r\n  let attributeObject = {};\r\n  for (let i = 0; i < attributes.length; i++) {\r\n    const { name, value } = attributes[i];\r\n    // console.log(`${name} = ${value}`);\r\n    if (excludes.indexOf(name) === -1) {\r\n      attributeObject[name] = value;\r\n    }\r\n  }\r\n\r\n  if (remove) {\r\n    // remove inherited attributes from el\r\n    for (let key in attributeObject) {\r\n      el.removeAttribute(key);\r\n    }\r\n  }\r\n\r\n  return attributeObject;\r\n};\r\n\r\n/**\r\n * @deprecated use $attrs.bind(this)(true|false) in component\r\n * @param component stencil class instance\r\n * @param excludes exclude inheriting these attributes (besides class, style, id)\r\n */\r\nexport function inheritComponentAttrs(component, excludes: string[] = [], remove: boolean = true) {\r\n  if (!component.el) {\r\n    warning(`root element not found in component`, component);\r\n  }\r\n  return inheritAttributes(component.el, ['class', 'style', 'id', ...Array.from(excludes)], remove);\r\n}\r\n\r\n/**\r\n * get attributes that are not defined in a components props, without removing them from the host element\r\n * @returns list of attributes inherited from the host element\r\n */\r\nexport function $attrs(removeAttrs = false) {\r\n  const propNames = Object.keys(Object.getPrototypeOf(this));\r\n\r\n  return inheritAttributes(this.el, ['class', 'style', 'id', ...propNames], removeAttrs);\r\n}\r\n\r\n/**\r\n * Extract the `id` from target element, then remove the original id attribute\r\n * @param el target element\r\n * @returns id specified in target element\r\n */\r\nexport function extractId(el: HTMLElement) {\r\n  const id = el.id;\r\n  el.removeAttribute('id');\r\n  return id;\r\n}\r\n\r\nexport function hasShadowDom(el: HTMLElement): boolean {\r\n  return !!el.shadowRoot && !!(el as any).attachShadow;\r\n}\r\n\r\nexport function hasSlot(el: HTMLElement, slotName?: string): boolean {\r\n  return !!el.querySelector('[slot=\"' + slotName + '\"]');\r\n}\r\n// export const clamp = (min: number, n: number, max: number) => {\r\n//   return Math.max(min, Math.min(n, max));\r\n// };\r\n\r\n// export const debounce = (func: (...args: any[]) => void, wait = 0) => {\r\n//   let timer: any;\r\n//   return (...args: any[]): any => {\r\n//     clearTimeout(timer);\r\n//     timer = setTimeout(func, wait, ...args);\r\n//   };\r\n// };\r\n\r\nexport const isDarkMode = () => {\r\n  const darkByAttribute =\r\n    document.documentElement.getAttribute('data-theme') === 'dark' ||\r\n    document.documentElement.getAttribute('color-theme') === 'dark';\r\n  return prefersDark() || darkByAttribute;\r\n};\r\n\r\n/*!\r\n * Get all direct descendant elements that match a selector\r\n * Dependency: the matches() polyfill: https://vanillajstoolkit.com/polyfills/matches/\r\n * (c) 2018 Chris Ferdinandi, MIT License, https://gomakethings.com\r\n * @param  {Node}   elem     The element to get direct descendants for\r\n * @param  {String} selector The selector to match against\r\n * @return {Array}           The matching direct descendants\r\n */\r\nexport function selectDirectChildren(elem: HTMLElement, selector: string): HTMLElement[] {\r\n  return Array.prototype.filter.call(elem.children, function (child) {\r\n    return child.matches(selector);\r\n  });\r\n}\r\n\r\nexport function warning(...args: any[]) {\r\n  console.log(`%c[Go UI warning]`, 'background: #e63a34; color: #fff; font-size: 24px;padding: 8px;');\r\n  console.warn(...args);\r\n}\r\n\r\n/**\r\n * Initialise id props (such as `labelId`, `hintId` etc) in stencil component\r\n * @param instance stencil component instance\r\n * @param rootEl stencil `@Element()` prop\r\n * @param idProps array of prop names such as `labelId` without the `Id` suffix, this array will be used to generate ids and assign them back to the class' props\r\n * @param prefix prefix for generated ids\r\n */\r\nexport function initIdProps(instance: any, rootEl: HTMLElement, idProps: string[], prefix: string) {\r\n  let id = extractId(rootEl);\r\n  if (!id) {\r\n    id = uniqueId(prefix);\r\n  }\r\n  instance.id = id;\r\n  idProps.forEach((key) => {\r\n    if (!instance[`${key}Id`]) {\r\n      instance[`${key}Id`] = `${id}-${key}`;\r\n    }\r\n  });\r\n}\r\n/**\r\n * parse items prop passed into the navigation component\r\n * @param items {T|string} navigation items to be rendered\r\n */\r\nexport function parseItems<T>(items: T | string): T {\r\n  if (!items) {\r\n    return null;\r\n  }\r\n  try {\r\n    return typeof items === 'string' ? JSON5.parse<T>(items) : items;\r\n  } catch (e) {\r\n    warning('Could not parse items', e);\r\n  }\r\n}\r\n"],"mappings":"iFAKgBA,EAAGC,GACjB,OAAOC,OAAOC,WAAWF,EAC3B,C,SAKgBG,IACd,OAAOJ,EAAG,gCAAgCK,OAC5C,C,SAKgBC,IACd,OAAON,EAAG,oCAAoCK,OAChD,C,SAIgBE,EAAYC,GAC1B,MAAMC,EAASC,SAASC,cAAc,OACtCF,EAAOG,aAAa,KAAM,WAC1BF,SAASG,KAAKC,YAAYL,GAC1B,IAAIM,EAAW,IAAIC,gBAAe,SAAUC,GAE1C,IAAKA,EAAQ,GAAI,CACf,M,CAEF,MAAMC,EAAQC,iBAAiBV,EAAQ,YAAYW,iBAAiB,WACpEZ,EAASU,EAAMG,QAAQ,KAAM,I,IAG/BN,EAASO,QAAQb,EACnB,C,MC1Bac,EAAoB,CAACC,EAAiBC,EAAqB,GAAIC,EAAkB,QAC5F,IAAKF,EAAI,CACP,MAAO,E,CAET,MAAMG,EAAaH,EAAGG,WACtB,IAAIC,EAAkB,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAK,CAC1C,MAAME,KAAEA,EAAIC,MAAEA,GAAUL,EAAWE,GAEnC,GAAIJ,EAASQ,QAAQF,MAAW,EAAG,CACjCH,EAAgBG,GAAQC,C,EAI5B,GAAIN,EAAQ,CAEV,IAAK,IAAIQ,KAAON,EAAiB,CAC/BJ,EAAGW,gBAAgBD,E,EAIvB,OAAON,CAAe,E,SAQRQ,EAAsBC,EAAWZ,EAAqB,GAAIC,EAAkB,MAC1F,IAAKW,EAAUb,GAAI,CACjBc,EAAQ,sCAAuCD,E,CAEjD,OAAOd,EAAkBc,EAAUb,GAAI,CAAC,QAAS,QAAS,QAASe,MAAMC,KAAKf,IAAYC,EAC5F,C,SAMgBe,EAAOC,EAAc,OACnC,MAAMC,EAAYC,OAAOC,KAAKD,OAAOE,eAAeC,OAEpD,OAAOxB,EAAkBwB,KAAKvB,GAAI,CAAC,QAAS,QAAS,QAASmB,GAAYD,EAC5E,C,SAOgBM,EAAUxB,GACxB,MAAMyB,EAAKzB,EAAGyB,GACdzB,EAAGW,gBAAgB,MACnB,OAAOc,CACT,C,SAEgBC,EAAa1B,GAC3B,QAASA,EAAG2B,cAAiB3B,EAAW4B,YAC1C,C,SAEgBC,EAAQ7B,EAAiB8B,GACvC,QAAS9B,EAAG+B,cAAc,UAAYD,EAAW,KACnD,C,MAaaE,EAAa,KACxB,MAAMC,EACJ/C,SAASgD,gBAAgBC,aAAa,gBAAkB,QACxDjD,SAASgD,gBAAgBC,aAAa,iBAAmB,OAC3D,OAAOvD,KAAiBqD,CAAe;;;;;;;;YAWzBG,EAAqBC,EAAmBC,GACtD,OAAOvB,MAAMwB,UAAUC,OAAOC,KAAKJ,EAAKK,UAAU,SAAUC,GAC1D,OAAOA,EAAM9D,QAAQyD,E,GAEzB,C,SAEgBxB,KAAW8B,GACzBC,QAAQC,IAAI,oBAAqB,mEACjCD,QAAQE,QAAQH,EAClB,C,SASgBI,EAAYC,EAAeC,EAAqBC,EAAmBC,GACjF,IAAI3B,EAAKD,EAAU0B,GACnB,IAAKzB,EAAI,CACPA,EAAK4B,EAASD,E,CAEhBH,EAASxB,GAAKA,EACd0B,EAAQG,SAAS5C,IACf,IAAKuC,EAAS,GAAGvC,OAAU,CACzBuC,EAAS,GAAGvC,OAAW,GAAGe,KAAMf,G,IAGtC,C,SAKgB6C,EAAcC,GAC5B,IAAKA,EAAO,CACV,OAAO,I,CAET,IACE,cAAcA,IAAU,SAAWC,EAAMC,MAASF,GAASA,C,CAC3D,MAAOG,GACP7C,EAAQ,wBAAyB6C,E,CAErC,Q"}