{"version":3,"names":["goBadgeCss","GoBadge","render","count","min","max","label","dotOnly","this","displayCount","h","Host","class"],"sources":["src/components/go-badge/go-badge.scss?tag=go-badge","src/components/go-badge/go-badge.tsx"],"sourcesContent":["go-badge {\r\n  --badge-font-size: var(--go-size--1);\r\n  --badge-size: 2em;\r\n  --badge-bg-color: var(--go-color-critical-600);\r\n  --badge-fg-color: var(--go-color-lightest);\r\n  --badge-dot-size: 0.75rem;\r\n\r\n  position: relative;\r\n  display: inline-block;\r\n  .badge-count {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(50%, -50%);\r\n    font-size: var(--badge-font-size);\r\n    font-variant-numeric: tabular-nums;\r\n    text-align: center;\r\n    min-width: var(--badge-size);\r\n    min-height: var(--badge-size);\r\n    padding: 0 0.5rem;\r\n    height: var(--badge-size);\r\n    border-radius: var(--radius-round);\r\n    color: var(--badge-fg-color);\r\n    background-color: var(--badge-bg-color);\r\n    font-weight: 700;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    line-height: 1;\r\n    &.dot-only {\r\n      min-width: var(--badge-dot-size);\r\n      min-height: var(--badge-dot-size);\r\n      font-size: 0;\r\n      padding: 0;\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, h, Element, Prop } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'go-badge',\r\n  styleUrl: 'go-badge.scss',\r\n  shadow: false,\r\n})\r\nexport class GoBadge {\r\n  @Element() el: HTMLElement;\r\n  /**\r\n   * Number to be displayed on the badge\r\n   */\r\n  @Prop() count: number;\r\n\r\n  /**\r\n   * minimum number displayable on the badge, if count is less than min, the badge will not be displayed\r\n   */\r\n  @Prop() min: number = 0;\r\n\r\n  /**\r\n   * maximum number displayable on the badge, if count is greater than max, `{max}+` is displayed\r\n   */\r\n  @Prop() max: number = 99;\r\n\r\n  /**\r\n   * Provide a meaningful label for the badge\r\n   */\r\n  @Prop() label?: string;\r\n\r\n  /**\r\n   * If true, the badge will be displayed only as a dot, no number will be shown\r\n   */\r\n  @Prop() dotOnly? = false;\r\n\r\n  render() {\r\n    const { count, min, max, label, dotOnly } = this;\r\n    let displayCount: string = `${count}`;\r\n    if (count < min) {\r\n      return <slot></slot>;\r\n    }\r\n    if (count > max) {\r\n      displayCount = `${max}+`;\r\n    }\r\n\r\n    return (\r\n      <Host>\r\n        <slot></slot>\r\n        <div class={{ 'badge-count': true, 'dot-only': dotOnly }}>\r\n          {label ? <span class=\"visually-hidden\">{label}</span> : null}\r\n          {count && !dotOnly ? <span aria-hidden=\"true\">{displayCount}</span> : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"yDAAA,MAAMA,EAAa,sxB,MCONC,EAAO,M,uDAUI,E,SAKA,G,kCAUH,K,CAEnB,MAAAC,GACE,MAAMC,MAAEA,EAAKC,IAAEA,EAAGC,IAAEA,EAAGC,MAAEA,EAAKC,QAAEA,GAAYC,KAC5C,IAAIC,EAAuB,GAAGN,IAC9B,GAAIA,EAAQC,EAAK,CACf,OAAOM,EAAA,Y,CAET,GAAIP,EAAQE,EAAK,CACfI,EAAe,GAAGJ,I,CAGpB,OACEK,EAACC,EAAI,KACHD,EAAA,aACAA,EAAA,OAAKE,MAAO,CAAE,cAAe,KAAM,WAAYL,IAC5CD,EAAQI,EAAA,QAAME,MAAM,mBAAmBN,GAAgB,KACvDH,IAAUI,EAAUG,EAAA,sBAAkB,QAAQD,GAAuB,M"}